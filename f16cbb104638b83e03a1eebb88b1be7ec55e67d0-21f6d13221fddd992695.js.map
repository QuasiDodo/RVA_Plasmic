{"version":3,"file":"f16cbb104638b83e03a1eebb88b1be7ec55e67d0-21f6d13221fddd992695.js","mappings":"6wBACWA,EAAkB,+CAClBC,EAAiB,8CACjBC,EAAiB,8CACjBC,EAAS,sCACTC,EAAe,4CACfC,EAAe,4CACfC,EAAc,2CACdC,EAAc,2CACdC,EAAa,0CACbC,EAAc,2CACdC,EAAc,2CACdC,EAAc,2CACdC,EAAO,oCAGPC,EAAa,0CAGbC,EAAa,0CAKbC,EAAa,0CACbC,EAAa,0CACbC,EAAe,4CACfC,EAAc,2CACdC,EAAc,2CACdC,EAAc,2CACdC,EAAc,2C,oDCGzB,MA1BO,SAA6BC,GAClC,IAAQC,EAA0CD,EAA1CC,UAAWC,EAA+BF,EAA/BE,MAAOC,EAAwBH,EAAxBG,MAAUC,GAApC,OAAkDJ,EAAlD,GACA,OACE,qCACEK,MAAO,6BACPC,QAAS,YACTC,OAAQ,MACRC,MAAO,MACPN,MAAK,eACHO,KAAM,gBACFP,GAAS,IAEfD,WAAWS,EAAAA,EAAAA,IAAW,uBAAwBT,IAC1CG,GAEHD,GAAS,6BAAQA,GAElB,wBACEQ,EACE,4T,gCCWV,MA9BO,SAAyBX,GAC9B,IAAQC,EAA0CD,EAA1CC,UAAWC,EAA+BF,EAA/BE,MAAOC,EAAwBH,EAAxBG,MAAUC,GAApC,OAAkDJ,EAAlD,GACA,OACE,qCACEK,MAAO,6BACPI,KAAM,OACNH,QAAS,YACTC,OAAQ,MACRC,MAAO,MACPN,MAAK,eACHO,KAAM,gBACFP,GAAS,IAEfD,WAAWS,EAAAA,EAAAA,IAAW,uBAAwBT,IAC1CG,GAEHD,GAAS,6BAAQA,GAElB,wBACES,SAAU,UACVC,SAAU,UACVF,EACE,2WAEFF,KAAM,mBCLDK,EAA8B,IAAIC,MAElCC,EAA0B,IAAID,MA+U3C,IAAME,EAAqB,CACzB3B,KAAM,CAAC,OAAQ,UACfT,OAAQ,CAAC,WAGX,SAASqC,EAAkBC,GACzB,IAAMC,EAAO,SAAUpB,GACrB,MAAsCqB,EAAAA,SACpC,kBACEC,EAAAA,EAAAA,IAAiBtB,EAAO,CACtBuB,KAAMJ,EACNK,iBAAgB,OAAKP,EAAmBE,IACxCM,qBAAsBT,EACtBU,yBAA0BZ,MAG9B,CAACd,EAAOmB,IAGV,OAhWJ,SAAmCnB,GACQA,EAAjC2B,SADiC,IAAD,EACtBC,EAAuB5B,EAAvB4B,UAAWC,EAAY7B,EAAZ6B,QAI7B,OAHa,UAAAC,EAAAA,kBAAA,cAAAA,GACAT,EAAAA,SAAc,kBAAMU,OAAOC,OAAO,GAAIhC,EAAMiC,QAAO,CAACjC,EAAMiC,QAGrE,eACE,oBAAmB,OACnB,wBAAuBL,EAAUtC,KACjC,qBAAmB,EACnB,wBAAuBuC,EACvB5B,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,GACAA,EAAAA,EACAA,EAAAA,eACAA,EAAAA,GACAC,KAGF,QAAC,KAAD,CACEC,GAAI,MACJC,QAAQ,EACRpC,WAAWS,EAAAA,EAAAA,IAAWwB,EAAAA,GAAgBC,KAGpC,cACE,oBAAmB,SACnB,wBAAuBP,EAAU/C,OACjCoB,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WACAC,KAGF,QAAC,WAAD,MACE,QAAC,WAAD,KAAiB,KACjB,gBACElC,UAAW,6CACXC,MAAO,CAAEoC,MAAO,YAEf,gCAEH,QAAC,WAAD,KAAiB,OAKvB,QAAC,KAAD,CACEF,GAAI,MACJC,QAAQ,EACRpC,WAAWS,EAAAA,EAAAA,IAAWwB,EAAAA,GAAgBC,KAEtC,QAAC,KAAD,CACEC,GAAIG,EAAAA,EACJF,QAAQ,EACRpC,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,EACAC,GAEFK,UAAWC,EAAAA,KACXC,SAAU,UAON,MAEJ,eACEzC,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,WACAC,IAGD,cAQC,OAGN,QAAC,KAAD,CACEC,GAAIG,EAAAA,EACJF,QAAQ,EACRpC,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,EACAC,GAEFK,UAAWC,EAAAA,KACXC,SAAU,UAON,MAEJ,eACEzC,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,WACAC,IAGD,YAQC,OAGN,QAAC,KAAD,CACEC,GAAIG,EAAAA,EACJF,QAAQ,EACRpC,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,EACAC,GAEFK,UAAWC,EAAAA,KACXC,SAAU,WAGR,QAAC,IAAD,CACEzC,WAAWS,EAAAA,EAAAA,IAAWwB,EAAAA,GAAgBC,GACtCQ,KAAM,SAIV,eACE1C,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,WACAC,IAGD,WAID,QAAC,IAAD,CACElC,WAAWS,EAAAA,EAAAA,IAAWwB,EAAAA,GAAgBC,GACtCQ,KAAM,UAKZ,QAAC,KAAD,CACEP,GAAIG,EAAAA,EACJF,QAAQ,EACRpC,WAAWS,EAAAA,EAAAA,IAAWwB,EAAAA,GAAgBA,EAAAA,EAAcC,GACpDK,UAAWC,EAAAA,KACXC,SAAU,UAON,MAEJ,eACEzC,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,WACAC,IAGD,YAQC,OAGN,QAAC,KAAD,CACEC,GAAIG,EAAAA,EACJF,QAAQ,EACRpC,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,EACAC,GAEFK,UAAWC,EAAAA,KACXC,SAAU,UAON,MAEJ,eACEzC,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,WACAC,IAGD,cAQC,SAKV,QAAC,KAAD,CACEC,GAAI,MACJC,QAAQ,EACRpC,WAAWS,EAAAA,EAAAA,IAAWwB,EAAAA,GAAgBC,KAGpC,QAAC,IAAD,CACElC,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,EACAC,GAEFK,UAAWC,EAAAA,KACXG,KAAM,0CACNF,SAAU,SACVG,OAAQ,WAER,QAAC,EAAD,CACE5C,WAAWS,EAAAA,EAAAA,IAAWwB,EAAAA,GAAgBC,GACtCQ,KAAM,UAKV,QAAC,IAAD,CACE1C,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,EACAC,GAEFK,UAAWC,EAAAA,KACXG,KAAM,iDACNF,SAAU,SACVG,OAAQ,WAER,QAAC,EAAD,CACE5C,WAAWS,EAAAA,EAAAA,IAAWwB,EAAAA,GAAgBC,GACtCQ,KAAM,UAKZ,QAAC,IAAD,CACE1C,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,EACAA,EAAAA,WACAC,GAEFK,UAAWC,EAAAA,KACXC,SAAU,WAEV,QAAC,WAAD,MACE,QAAC,WAAD,KAEI,4GAIF,QAAC,IAAD,CACEzC,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,EACAA,EAAAA,WACAA,EAAAA,GACAC,EAAAA,aAEFK,UAAWC,EAAAA,KACXG,KAAM,cACNF,SAAU,UAET,iBAIL,QAAC,WAAD,KAAiB,WAEf,QAAC,IAAD,CACEzC,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,EACAA,EAAAA,WACAA,EAAAA,GACAC,EAAAA,aAEFK,UAAWC,EAAAA,KACXG,KAAM,kBACNF,SAAU,UAET,mBAIL,QAAC,WAAD,KAAiB,QA2BlBI,CAA0B,CAC/BnB,SAbF,EAAQA,SAcNM,KAdF,EAAkBA,KAehBL,UAfF,EAAwBA,UAgBtBC,QAASV,KAQb,OAJEC,EAAK2B,YADU,SAAb5B,EACiB,gBAEnB,iBAAoCA,EAE/BC,EAGF,IAAM4B,EAAgBjB,OAAOC,OAElCd,EAAkB,QAClB,CAEErC,OAAQqC,EAAkB,UAE1B+B,qBAAsBnC,EACtBoC,iBAAkBlC,IChZtB,SAASmC,EAAQnD,EAAOoD,GAetB,OAAO,gBAACJ,EAAD,eAAe1D,KAAM,CAAE8D,IAAAA,IAAWpD,IAG3C,IAEA,EAFeqB,EAAAA,WAAiB8B,I,qHCvBhC,EAAe,IAA0B,yDCwB5BE,EAA8B,IAAItC,MAElCuC,EAA0B,IAAIvC,MA0I3C,IAAME,EAAqB,CACzB3B,KAAM,CACJ,OACA,YACA,MACA,SACA,aACA,MACA,eAGFiE,UAAW,CAAC,YAAa,MAAO,SAAU,aAAc,MAAO,eAC/DC,IAAK,CAAC,MAAO,SAAU,aAAc,MAAO,eAC5CC,OAAQ,CAAC,SAAU,aAAc,MAAO,eACxCC,WAAY,CAAC,aAAc,OAC3BC,IAAK,CAAC,OACNC,YAAa,CAAC,gBAGhB,SAAS1C,EAAkBC,GACzB,IAAMC,EAAO,SAAUpB,GACrB,MAAsCqB,EAAAA,SACpC,kBACEC,EAAAA,EAAAA,IAAiBtB,EAAO,CACtBuB,KAAMJ,EACNK,iBAAgB,OAAKP,EAAmBE,IACxCM,qBAAsB6B,EACtB5B,yBAA0B2B,MAG9B,CAACrD,EAAOmB,IAGV,OAzKJ,SAAmCnB,GACQA,EAAjC2B,SADiC,IAAD,EACtBC,EAAuB5B,EAAvB4B,UAAWC,EAAY7B,EAAZ6B,QAI7B,OAHa,UAAAC,EAAAA,kBAAA,cAAAA,GACAT,EAAAA,SAAc,kBAAMU,OAAOC,OAAO,GAAIhC,EAAMiC,QAAO,CAACjC,EAAMiC,QAGrE,eACE,oBAAmB,OACnB,wBAAuBL,EAAUtC,KACjC,qBAAmB,EACnB,wBAAuBuC,EACvB5B,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,GACAA,EAAAA,EACAA,EAAAA,eACAA,EAAAA,GCjCU,uCDqCZ,eACE,oBAAmB,YACnB,wBAAuBN,EAAU2B,UACjCtD,WAAWS,EAAAA,EAAAA,IAAWwB,EAAAA,GChDP,4CDkDf,eACE,oBAAmB,MACnB,wBAAuBN,EAAU4B,IACjCvD,WAAWS,EAAAA,EAAAA,IAAWwB,EAAAA,GC5Cf,sCD8CP,eACE,oBAAmB,SACnB,wBAAuBN,EAAU6B,OACjCxD,WAAWS,EAAAA,EAAAA,IAAWwB,EAAAA,GC3Dd,yCD6DR,QAAC,IAAD,CACE,oBAAmB,aACnB,wBAAuBN,EAAU8B,WACjCzD,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,EChEQ,2CDmEVM,UAAWC,EAAAA,KACXG,KAAM,IACNF,SAAU,WAEV,QAAC,KAAD,CACE,oBAAmB,MACnB,wBAAuBd,EAAU+B,IACjCE,IAAK,GACL5D,WAAWS,EAAAA,EAAAA,ICzEV,oCD0EDoD,cAAe,OACfC,iBAAkB,OAClBC,gBAAiB,QACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,OACdC,QAAS,OACTC,IAAK,CACHA,IAAKC,EACLC,UAAW,IACXC,WAAY,IACZC,iBAAaC,OAKnB,eACE,oBAAmB,cACnB,wBAAuB9C,EAAUgC,YACjC3D,WAAWS,EAAAA,EAAAA,IAAWwB,EAAAA,GC9FX,8CDgGX,QAAC,IAAD,CACEjC,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,EACAA,EAAAA,WChGO,4CDmGTM,UAAWC,EAAAA,KACXG,KAAM,YACNF,SAAU,UAET,eAGH,QAAC,IAAD,CACEzC,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,EACAA,EAAAA,WC/GO,4CDkHTM,UAAWC,EAAAA,KACXG,KAAM,SACNF,SAAU,UAET,WAGH,QAAC,IAAD,CACEzC,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,EACAA,EAAAA,WC9HQ,6CDiIVM,UAAWC,EAAAA,KACXG,KAAM,WACNF,SAAU,UAET,YAGH,QAAC,IAAD,CACEzC,WAAWS,EAAAA,EAAAA,IACTwB,EAAAA,GACAA,EAAAA,EACAA,EAAAA,WCzIO,4CD4ITM,UAAWC,EAAAA,KACXG,KAAM,WACNF,SAAU,UAET,gBA2CNiC,CAA0B,CAC/BhD,SAbF,EAAQA,SAcNM,KAdF,EAAkBA,KAehBL,UAfF,EAAwBA,UAgBtBC,QAASV,KAQb,OAJEC,EAAK2B,YADU,SAAb5B,EACiB,gBAEnB,iBAAoCA,EAE/BC,EAGF,IAAMwD,EAAgB7C,OAAOC,OAElCd,EAAkB,QAClB,CAEEqC,UAAWrC,EAAkB,aAC7BsC,IAAKtC,EAAkB,OACvBuC,OAAQvC,EAAkB,UAC1BwC,WAAYxC,EAAkB,cAC9ByC,IAAKzC,EAAkB,OACvB0C,YAAa1C,EAAkB,eAE/B+B,qBAAsBI,EACtBH,iBAAkBI,IE5NtB,SAASuB,EAAQ7E,EAAOoD,GAetB,OAAO,gBAACwB,EAAD,eAAetF,KAAM,CAAE8D,IAAAA,IAAWpD,IAG3C,IAEA,EAFeqB,EAAAA,WAAiBwD","sources":["webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicFooter.module.css","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/icons/PlasmicIcon__FacebookIconsvg.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/icons/PlasmicIcon__Linkedinsvg.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicFooter.jsx","webpack://gatsby-starter-default/./src/components/Footer.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/images/rvaLogopng.png","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicHeader.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicHeader.module.css","webpack://gatsby-starter-default/./src/components/Header.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var freeBox___1ELw7 = \"PlasmicFooter-module--freeBox___1ELw7--tFveV\";\nexport var freeBox__ndNpz = \"PlasmicFooter-module--freeBox__ndNpz--LB7HS\";\nexport var freeBox__zam8P = \"PlasmicFooter-module--freeBox__zam8P--bKzAi\";\nexport var header = \"PlasmicFooter-module--header--7sxJI\";\nexport var link___5Q65U = \"PlasmicFooter-module--link___5Q65U--cgdpv\";\nexport var link___9VjjB = \"PlasmicFooter-module--link___9VjjB--d31dI\";\nexport var link__a3OYg = \"PlasmicFooter-module--link__a3OYg--W8U39\";\nexport var link__f9CjY = \"PlasmicFooter-module--link__f9CjY--RZX5c\";\nexport var link__hfHy = \"PlasmicFooter-module--link__hfHy--C-Ws6\";\nexport var link__iNhcf = \"PlasmicFooter-module--link__iNhcf--ITEjo\";\nexport var link__kZEuU = \"PlasmicFooter-module--link__kZEuU--nfnJ3\";\nexport var link__xBTy6 = \"PlasmicFooter-module--link__xBTy6--YZSrs\";\nexport var root = \"PlasmicFooter-module--root--xenJg\";\nexport var svg___8T33 = \"PlasmicFooter-module--svg___8T33--AUWlt\";\nexport var svg__eTvBx = \"PlasmicFooter-module--svg__eTvBx--XYSyP\";\nexport var svg__j6Ryd = \"PlasmicFooter-module--svg__j6Ryd--DVnfo\";\nexport var svg__jq9Ck = \"PlasmicFooter-module--svg__jq9Ck--1vkvz\";\nexport var svg__jtH8T = \"PlasmicFooter-module--svg__jtH8T--2SLDj\";\nexport var svg__mOoOb = \"PlasmicFooter-module--svg__mOoOb--GcqFA\";\nexport var svg__mzpAu = \"PlasmicFooter-module--svg__mzpAu--AZaVb\";\nexport var svg__tTqBp = \"PlasmicFooter-module--svg__tTqBp--faygu\";\nexport var svg__u1W6R = \"PlasmicFooter-module--svg__u1W6R--vpl+D\";\nexport var svg__vGt7N = \"PlasmicFooter-module--svg__vGt7N--qq3JW\";\nexport var svg__yHoqb = \"PlasmicFooter-module--svg__yHoqb--mOnxO\";\nexport var svg__zIdCo = \"PlasmicFooter-module--svg__zIdCo--8Z98y\";\nexport var text___6EqAo = \"PlasmicFooter-module--text___6EqAo--bAR5u\";\nexport var text__eMcJv = \"PlasmicFooter-module--text__eMcJv--nuu63\";\nexport var text__i2Vm6 = \"PlasmicFooter-module--text__i2Vm6--m52f0\";\nexport var text__ioiqe = \"PlasmicFooter-module--text__ioiqe--bIJHo\";\nexport var text__qvqPl = \"PlasmicFooter-module--text__qvqPl--G2Q2Z\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function FacebookIconsvgIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 20 20\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M18.896 0H1.104C.494 0 0 .494 0 1.104v17.792C0 19.506.494 20 1.104 20h9.58v-7.734H8.086V9.238h2.598V7.01c0-2.583 1.577-3.989 3.881-3.989 1.104 0 2.053.082 2.33.119v2.699l-1.59.001c-1.254 0-1.496.596-1.496 1.47v1.928h2.997l-.39 3.028h-2.607V20h5.087c.61 0 1.104-.494 1.104-1.104V1.104C20 .494 19.506 0 18.896 0\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default FacebookIconsvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function LinkedinsvgIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 18 18\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fillRule={\"evenodd\"}\n        clipRule={\"evenodd\"}\n        d={\n          \"M2 0h14a2 2 0 012 2v14a2 2 0 01-2 2H2a2 2 0 01-2-2V2a2 2 0 012-2zm3 15a.5.5 0 00.5-.5v-7A.5.5 0 005 7H3.5a.5.5 0 00-.5.5v7a.5.5 0 00.5.5H5zm-.75-9a1.5 1.5 0 110-3 1.5 1.5 0 010 3zm10.25 9a.5.5 0 00.5-.5V9.9a3.1 3.1 0 00-2.72-3.14A3 3 0 009.5 8.1v-.6A.5.5 0 009 7H7.5a.5.5 0 00-.5.5v7a.5.5 0 00.5.5H9a.5.5 0 00.5-.5v-3.75a1.5 1.5 0 013 0v3.75a.5.5 0 00.5.5h1.5z\"\n        }\n        fill={\"currentColor\"}\n      ></path>\n    </svg>\n  )\n}\n\nexport default LinkedinsvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: sSe8AoDiAW5DkmycE76RKb\n// Component: aKMJC5Su_PgNb\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_rva_new.module.css\" // plasmic-import: sSe8AoDiAW5DkmycE76RKb/projectcss\nimport * as sty from \"./PlasmicFooter.module.css\" // plasmic-import: aKMJC5Su_PgNb/css\nimport IconIcon from \"./icons/PlasmicIcon__Icon\" // plasmic-import: A8bnkBjJqVCwJ9/icon\nimport FacebookIconsvgIcon from \"./icons/PlasmicIcon__FacebookIconsvg\" // plasmic-import: uReSR94qZIhNBx/icon\nimport LinkedinsvgIcon from \"./icons/PlasmicIcon__Linkedinsvg\" // plasmic-import: Fm08GCOPSM/icon\n\nexport const PlasmicFooter__VariantProps = new Array()\n\nexport const PlasmicFooter__ArgProps = new Array()\n\nfunction PlasmicFooter__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <p.Stack\n        as={\"div\"}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.freeBox__ndNpz)}\n      >\n        {true ? (\n          <h3\n            data-plasmic-name={\"header\"}\n            data-plasmic-override={overrides.header}\n            className={classNames(\n              projectcss.all,\n              projectcss.h3,\n              projectcss.__wab_text,\n              sty.header\n            )}\n          >\n            <React.Fragment>\n              <React.Fragment>{\"\"}</React.Fragment>\n              <span\n                className={\"plasmic_default__all plasmic_default__span\"}\n                style={{ color: \"#FFFFFF\" }}\n              >\n                {\"Real Value Added Consulting\"}\n              </span>\n              <React.Fragment>{\"\"}</React.Fragment>\n            </React.Fragment>\n          </h3>\n        ) : null}\n\n        <p.Stack\n          as={\"div\"}\n          hasGap={true}\n          className={classNames(projectcss.all, sty.freeBox___1ELw7)}\n        >\n          <p.Stack\n            as={p.PlasmicLink}\n            hasGap={true}\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              sty.link__iNhcf\n            )}\n            component={Link}\n            platform={\"gatsby\"}\n          >\n            {false ? (\n              <IconIcon\n                className={classNames(projectcss.all, sty.svg__tTqBp)}\n                role={\"img\"}\n              />\n            ) : null}\n\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text__ioiqe\n              )}\n            >\n              {\"What we do\"}\n            </div>\n\n            {false ? (\n              <IconIcon\n                className={classNames(projectcss.all, sty.svg__eTvBx)}\n                role={\"img\"}\n              />\n            ) : null}\n          </p.Stack>\n\n          <p.Stack\n            as={p.PlasmicLink}\n            hasGap={true}\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              sty.link__f9CjY\n            )}\n            component={Link}\n            platform={\"gatsby\"}\n          >\n            {false ? (\n              <IconIcon\n                className={classNames(projectcss.all, sty.svg__jq9Ck)}\n                role={\"img\"}\n              />\n            ) : null}\n\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text__qvqPl\n              )}\n            >\n              {\"About us\"}\n            </div>\n\n            {false ? (\n              <IconIcon\n                className={classNames(projectcss.all, sty.svg___8T33)}\n                role={\"img\"}\n              />\n            ) : null}\n          </p.Stack>\n\n          <p.Stack\n            as={p.PlasmicLink}\n            hasGap={true}\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              sty.link__kZEuU\n            )}\n            component={Link}\n            platform={\"gatsby\"}\n          >\n            {true ? (\n              <IconIcon\n                className={classNames(projectcss.all, sty.svg__mOoOb)}\n                role={\"img\"}\n              />\n            ) : null}\n\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text__i2Vm6\n              )}\n            >\n              {\"Why us\"}\n            </div>\n\n            {true ? (\n              <IconIcon\n                className={classNames(projectcss.all, sty.svg__yHoqb)}\n                role={\"img\"}\n              />\n            ) : null}\n          </p.Stack>\n\n          <p.Stack\n            as={p.PlasmicLink}\n            hasGap={true}\n            className={classNames(projectcss.all, projectcss.a, sty.link__hfHy)}\n            component={Link}\n            platform={\"gatsby\"}\n          >\n            {false ? (\n              <IconIcon\n                className={classNames(projectcss.all, sty.svg__vGt7N)}\n                role={\"img\"}\n              />\n            ) : null}\n\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text__eMcJv\n              )}\n            >\n              {\"Our team\"}\n            </div>\n\n            {false ? (\n              <IconIcon\n                className={classNames(projectcss.all, sty.svg__u1W6R)}\n                role={\"img\"}\n              />\n            ) : null}\n          </p.Stack>\n\n          <p.Stack\n            as={p.PlasmicLink}\n            hasGap={true}\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              sty.link___5Q65U\n            )}\n            component={Link}\n            platform={\"gatsby\"}\n          >\n            {false ? (\n              <IconIcon\n                className={classNames(projectcss.all, sty.svg__jtH8T)}\n                role={\"img\"}\n              />\n            ) : null}\n\n            <div\n              className={classNames(\n                projectcss.all,\n                projectcss.__wab_text,\n                sty.text___6EqAo\n              )}\n            >\n              {\"Contact us\"}\n            </div>\n\n            {false ? (\n              <IconIcon\n                className={classNames(projectcss.all, sty.svg__mzpAu)}\n                role={\"img\"}\n              />\n            ) : null}\n          </p.Stack>\n        </p.Stack>\n      </p.Stack>\n\n      <p.Stack\n        as={\"div\"}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.freeBox__zam8P)}\n      >\n        {true ? (\n          <p.PlasmicLink\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              sty.link__a3OYg\n            )}\n            component={Link}\n            href={\"https://www.facebook.com/RealValueAdded\"}\n            platform={\"gatsby\"}\n            target={\"_blank\"}\n          >\n            <FacebookIconsvgIcon\n              className={classNames(projectcss.all, sty.svg__zIdCo)}\n              role={\"img\"}\n            />\n          </p.PlasmicLink>\n        ) : null}\n        {true ? (\n          <p.PlasmicLink\n            className={classNames(\n              projectcss.all,\n              projectcss.a,\n              sty.link__xBTy6\n            )}\n            component={Link}\n            href={\"https://www.linkedin.com/company/rvaconsulting\"}\n            platform={\"gatsby\"}\n            target={\"_blank\"}\n          >\n            <LinkedinsvgIcon\n              className={classNames(projectcss.all, sty.svg__j6Ryd)}\n              role={\"img\"}\n            />\n          </p.PlasmicLink>\n        ) : null}\n\n        <p.PlasmicLink\n          className={classNames(\n            projectcss.all,\n            projectcss.a,\n            projectcss.__wab_text,\n            sty.link___9VjjB\n          )}\n          component={Link}\n          platform={\"gatsby\"}\n        >\n          <React.Fragment>\n            <React.Fragment>\n              {\n                \"Copyright ©Real Value Added Consulting2022. All Rights Reserved. Use of this website is subject to our \"\n              }\n            </React.Fragment>\n            {\n              <p.PlasmicLink\n                className={classNames(\n                  projectcss.all,\n                  projectcss.a,\n                  projectcss.__wab_text,\n                  projectcss.plasmic_default__inline,\n                  sty.link__tsky0\n                )}\n                component={Link}\n                href={\"/disclaimer\"}\n                platform={\"gatsby\"}\n              >\n                {\"Terms of Use\"}\n              </p.PlasmicLink>\n            }\n\n            <React.Fragment>{\" and  \"}</React.Fragment>\n            {\n              <p.PlasmicLink\n                className={classNames(\n                  projectcss.all,\n                  projectcss.a,\n                  projectcss.__wab_text,\n                  projectcss.plasmic_default__inline,\n                  sty.link__k4IJf\n                )}\n                component={Link}\n                href={\"/privacy-policy\"}\n                platform={\"gatsby\"}\n              >\n                {\"Privacy Policy\"}\n              </p.PlasmicLink>\n            }\n\n            <React.Fragment>{\"\"}</React.Fragment>\n          </React.Fragment>\n        </p.PlasmicLink>\n      </p.Stack>\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"header\"],\n  header: [\"header\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicFooter__ArgProps,\n          internalVariantPropNames: PlasmicFooter__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicFooter__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicFooter\"\n  } else {\n    func.displayName = `PlasmicFooter.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicFooter = Object.assign(\n  // Top-level PlasmicFooter renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    header: makeNodeComponent(\"header\"),\n    // Metadata about props expected for PlasmicFooter\n    internalVariantProps: PlasmicFooter__VariantProps,\n    internalArgProps: PlasmicFooter__ArgProps,\n  }\n)\n\nexport default PlasmicFooter\n/* prettier-ignore-end */\n","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicFooter } from \"./plasmic/rva_new/PlasmicFooter\"\n\nfunction Footer_(props, ref) {\n  // Use PlasmicFooter to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicFooter are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all FooterProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicFooter root={{ ref }} {...props} />\n}\n\nconst Footer = React.forwardRef(Footer_)\n\nexport default Footer\n","export default __webpack_public_path__ + \"static/rvaLogopng-f919e38199cf443aa15c7d3cff5d9f6b.png\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: sSe8AoDiAW5DkmycE76RKb\n// Component: rlLZVswJyeOUp\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_rva_new.module.css\" // plasmic-import: sSe8AoDiAW5DkmycE76RKb/projectcss\nimport * as sty from \"./PlasmicHeader.module.css\" // plasmic-import: rlLZVswJyeOUp/css\nimport rvaLogopngTxxs8MLwc from \"./images/rvaLogopng.png\" // plasmic-import: Txxs8mLWC/picture\n\nexport const PlasmicHeader__VariantProps = new Array()\n\nexport const PlasmicHeader__ArgProps = new Array()\n\nfunction PlasmicHeader__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <div\n        data-plasmic-name={\"container\"}\n        data-plasmic-override={overrides.container}\n        className={classNames(projectcss.all, sty.container)}\n      >\n        <div\n          data-plasmic-name={\"row\"}\n          data-plasmic-override={overrides.row}\n          className={classNames(projectcss.all, sty.row)}\n        >\n          <div\n            data-plasmic-name={\"column\"}\n            data-plasmic-override={overrides.column}\n            className={classNames(projectcss.all, sty.column)}\n          >\n            <p.PlasmicLink\n              data-plasmic-name={\"headerLeft\"}\n              data-plasmic-override={overrides.headerLeft}\n              className={classNames(\n                projectcss.all,\n                projectcss.a,\n                sty.headerLeft\n              )}\n              component={Link}\n              href={\"/\"}\n              platform={\"gatsby\"}\n            >\n              <p.PlasmicImg\n                data-plasmic-name={\"img\"}\n                data-plasmic-override={overrides.img}\n                alt={\"\"}\n                className={classNames(sty.img)}\n                displayHeight={\"auto\"}\n                displayMaxHeight={\"74px\"}\n                displayMaxWidth={\"199px\"}\n                displayMinHeight={\"0\"}\n                displayMinWidth={\"0\"}\n                displayWidth={\"auto\"}\n                loading={\"lazy\"}\n                src={{\n                  src: rvaLogopngTxxs8MLwc,\n                  fullWidth: 983,\n                  fullHeight: 197,\n                  aspectRatio: undefined,\n                }}\n              />\n            </p.PlasmicLink>\n\n            <div\n              data-plasmic-name={\"headerRight\"}\n              data-plasmic-override={overrides.headerRight}\n              className={classNames(projectcss.all, sty.headerRight)}\n            >\n              <p.PlasmicLink\n                className={classNames(\n                  projectcss.all,\n                  projectcss.a,\n                  projectcss.__wab_text,\n                  sty.link__lVxpa\n                )}\n                component={Link}\n                href={\"/Services\"}\n                platform={\"gatsby\"}\n              >\n                {\"What we do\"}\n              </p.PlasmicLink>\n\n              <p.PlasmicLink\n                className={classNames(\n                  projectcss.all,\n                  projectcss.a,\n                  projectcss.__wab_text,\n                  sty.link__eaVg4\n                )}\n                component={Link}\n                href={\"/WhyUs\"}\n                platform={\"gatsby\"}\n              >\n                {\"Why us\"}\n              </p.PlasmicLink>\n\n              <p.PlasmicLink\n                className={classNames(\n                  projectcss.all,\n                  projectcss.a,\n                  projectcss.__wab_text,\n                  sty.link___0A2Of\n                )}\n                component={Link}\n                href={\"/OurTeam\"}\n                platform={\"gatsby\"}\n              >\n                {\"Stories\"}\n              </p.PlasmicLink>\n\n              <p.PlasmicLink\n                className={classNames(\n                  projectcss.all,\n                  projectcss.a,\n                  projectcss.__wab_text,\n                  sty.link__rPt9H\n                )}\n                component={Link}\n                href={\"/contact\"}\n                platform={\"gatsby\"}\n              >\n                {\"Contact\"}\n              </p.PlasmicLink>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\n    \"root\",\n    \"container\",\n    \"row\",\n    \"column\",\n    \"headerLeft\",\n    \"img\",\n    \"headerRight\",\n  ],\n\n  container: [\"container\", \"row\", \"column\", \"headerLeft\", \"img\", \"headerRight\"],\n  row: [\"row\", \"column\", \"headerLeft\", \"img\", \"headerRight\"],\n  column: [\"column\", \"headerLeft\", \"img\", \"headerRight\"],\n  headerLeft: [\"headerLeft\", \"img\"],\n  img: [\"img\"],\n  headerRight: [\"headerRight\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicHeader__ArgProps,\n          internalVariantPropNames: PlasmicHeader__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicHeader__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHeader\"\n  } else {\n    func.displayName = `PlasmicHeader.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHeader = Object.assign(\n  // Top-level PlasmicHeader renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    container: makeNodeComponent(\"container\"),\n    row: makeNodeComponent(\"row\"),\n    column: makeNodeComponent(\"column\"),\n    headerLeft: makeNodeComponent(\"headerLeft\"),\n    img: makeNodeComponent(\"img\"),\n    headerRight: makeNodeComponent(\"headerRight\"),\n    // Metadata about props expected for PlasmicHeader\n    internalVariantProps: PlasmicHeader__VariantProps,\n    internalArgProps: PlasmicHeader__ArgProps,\n  }\n)\n\nexport default PlasmicHeader\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var __wab_imgSpacer = \"PlasmicHeader-module--__wab_img-spacer--utAqP\";\nexport var column = \"PlasmicHeader-module--column--43lo6\";\nexport var container = \"PlasmicHeader-module--container--zQfhD\";\nexport var headerLeft = \"PlasmicHeader-module--headerLeft--CSLVE\";\nexport var headerRight = \"PlasmicHeader-module--headerRight--u6QzT\";\nexport var img = \"PlasmicHeader-module--img--gSjRA\";\nexport var link___0A2Of = \"PlasmicHeader-module--link___0A2Of--WPNen\";\nexport var link__eaVg4 = \"PlasmicHeader-module--link__eaVg4--vf9Q+\";\nexport var link__lVxpa = \"PlasmicHeader-module--link__lVxpa--PQKPS\";\nexport var link__rPt9H = \"PlasmicHeader-module--link__rPt9H--DbBqM\";\nexport var root = \"PlasmicHeader-module--root--Xx1Vq\";\nexport var row = \"PlasmicHeader-module--row--D+HY8\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicHeader } from \"./plasmic/rva_new/PlasmicHeader\"\n\nfunction Header_(props, ref) {\n  // Use PlasmicHeader to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHeader are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all HeaderProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicHeader root={{ ref }} {...props} />\n}\n\nconst Header = React.forwardRef(Header_)\n\nexport default Header\n"],"names":["freeBox___1ELw7","freeBox__ndNpz","freeBox__zam8P","header","link___5Q65U","link___9VjjB","link__a3OYg","link__f9CjY","link__hfHy","link__iNhcf","link__kZEuU","link__xBTy6","root","svg__j6Ryd","svg__mOoOb","svg__yHoqb","svg__zIdCo","text___6EqAo","text__eMcJv","text__i2Vm6","text__ioiqe","text__qvqPl","props","className","style","title","restProps","xmlns","viewBox","height","width","fill","classNames","d","fillRule","clipRule","PlasmicFooter__VariantProps","Array","PlasmicFooter__ArgProps","PlasmicDescendants","makeNodeComponent","nodeName","func","React","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","forNode","ph","Object","assign","args","projectcss","sty","as","hasGap","color","p","component","Link","platform","role","href","target","PlasmicFooter__RenderFunc","displayName","PlasmicFooter","internalVariantProps","internalArgProps","Footer_","ref","PlasmicHeader__VariantProps","PlasmicHeader__ArgProps","container","row","column","headerLeft","img","headerRight","alt","displayHeight","displayMaxHeight","displayMaxWidth","displayMinHeight","displayMinWidth","displayWidth","loading","src","rvaLogopngTxxs8MLwc","fullWidth","fullHeight","aspectRatio","undefined","PlasmicHeader__RenderFunc","PlasmicHeader","Header_"],"sourceRoot":""}