{"version":3,"file":"component---src-pages-disclaimer-jsx-26f4108cc2c64024a9c6.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/rva_new/icons/PlasmicIcon__Icon2.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/icons/PlasmicIcon__Icon28.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/icons/PlasmicIcon__Icon3.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicTextInput.module.css","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/icons/PlasmicIcon__Searchsvg.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicTextInput.jsx","webpack://gatsby-starter-default/./src/components/TextInput.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/icons/PlasmicIcon___2561381SearchIconsvg.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/icons/PlasmicIcon__ShoppingBag3049Svg.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/icons/PlasmicIcon__AngleRightsvg.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicDisclaimer.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicDisclaimer.module.css","webpack://gatsby-starter-default/./src/pages/disclaimer.jsx"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function Icon2Icon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      style={{\n        width: \"24px\",\n        height: '24px\"',\n        ...(style || {}),\n      }}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fill={\"currentColor\"}\n        d={\n          \"M12 2A10 10 0 002 12c0 4.42 2.87 8.17 6.84 9.5.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34-.46-1.16-1.11-1.47-1.11-1.47-.91-.62.07-.6.07-.6 1 .07 1.53 1.03 1.53 1.03.87 1.52 2.34 1.07 2.91.83.09-.65.35-1.09.63-1.34-2.22-.25-4.55-1.11-4.55-4.92 0-1.11.38-2 1.03-2.71-.1-.25-.45-1.29.1-2.64 0 0 .84-.27 2.75 1.02.79-.22 1.65-.33 2.5-.33.85 0 1.71.11 2.5.33 1.91-1.29 2.75-1.02 2.75-1.02.55 1.35.2 2.39.1 2.64.65.71 1.03 1.6 1.03 2.71 0 3.82-2.34 4.66-4.57 4.91.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12A10 10 0 0012 2z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon2Icon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function Icon28Icon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      style={{\n        width: \"24px\",\n        height: '24px\"',\n        ...(style || {}),\n      }}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fill={\"currentColor\"}\n        d={\n          \"M19 3a2 2 0 012 2v14a2 2 0 01-2 2H5a2 2 0 01-2-2V5a2 2 0 012-2h14m-.5 15.5v-5.3a3.26 3.26 0 00-3.26-3.26c-.85 0-1.84.52-2.32 1.3v-1.11h-2.79v8.37h2.79v-4.93c0-.77.62-1.4 1.39-1.4a1.4 1.4 0 011.4 1.4v4.93h2.79M6.88 8.56a1.68 1.68 0 001.68-1.68c0-.93-.75-1.69-1.68-1.69a1.69 1.69 0 00-1.69 1.69c0 .93.76 1.68 1.69 1.68m1.39 9.94v-8.37H5.5v8.37h2.77z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon28Icon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function Icon3Icon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      style={{\n        width: \"24px\",\n        height: '24px\"',\n        ...(style || {}),\n      }}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fill={\"currentColor\"}\n        d={\n          \"M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 01-1.93.07 4.28 4.28 0 004 2.98 8.521 8.521 0 01-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56.84-.6 1.56-1.36 2.14-2.23z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon3Icon\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var endIconContainer = \"PlasmicTextInput-module--endIconContainer--Qhh20\";\nexport var endIconContainershowEndIcon = \"PlasmicTextInput-module--endIconContainershowEndIcon--CVSRd\";\nexport var input = \"PlasmicTextInput-module--input--vRhbE\";\nexport var input___focusVisibleWithin = \"PlasmicTextInput-module--input___focusVisibleWithin--IApvU\";\nexport var inputcolor_dark = \"PlasmicTextInput-module--inputcolor_dark--vi5li\";\nexport var inputisDisabled = \"PlasmicTextInput-module--inputisDisabled--IGQCh\";\nexport var root = \"PlasmicTextInput-module--root--JmSse\";\nexport var root___focusVisibleWithin = \"PlasmicTextInput-module--root___focusVisibleWithin--JDsZb\";\nexport var rootcolor_dark = \"PlasmicTextInput-module--rootcolor_dark--ZNp3R\";\nexport var slotTargetEndIconcolor_dark = \"PlasmicTextInput-module--slotTargetEndIconcolor_dark--NrIvP\";\nexport var slotTargetEndIconshowEndIcon = \"PlasmicTextInput-module--slotTargetEndIconshowEndIcon--R1-W2\";\nexport var slotTargetStartIconcolor_dark = \"PlasmicTextInput-module--slotTargetStartIconcolor_dark--r9DVf\";\nexport var slotTargetStartIconshowStartIcon = \"PlasmicTextInput-module--slotTargetStartIconshowStartIcon--CpdE0\";\nexport var startIconContainer = \"PlasmicTextInput-module--startIconContainer--RAGw9\";\nexport var startIconContainer___focusVisibleWithin = \"PlasmicTextInput-module--startIconContainer___focusVisibleWithin--+Wyhx\";\nexport var startIconContainershowStartIcon = \"PlasmicTextInput-module--startIconContainershowStartIcon--zCrOD\";\nexport var svg__v4Tdi = \"PlasmicTextInput-module--svg__v4Tdi---q7Wy\";\nexport var svg__vlAun = \"PlasmicTextInput-module--svg__vlAun---ySSb\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function SearchsvgIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      style={style}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        stroke={\"currentColor\"}\n        strokeLinecap={\"round\"}\n        strokeLinejoin={\"round\"}\n        strokeWidth={\"1.5\"}\n        d={\n          \"M19.25 19.25L15.5 15.5M4.75 11a6.25 6.25 0 1112.5 0 6.25 6.25 0 01-12.5 0z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default SearchsvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: sSe8AoDiAW5DkmycE76RKb\n// Component: 8d2n861ybhR\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport * as pp from \"@plasmicapp/react-web\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  useTrigger,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_rva_new.module.css\" // plasmic-import: sSe8AoDiAW5DkmycE76RKb/projectcss\nimport * as sty from \"./PlasmicTextInput.module.css\" // plasmic-import: 8d2n861ybhR/css\nimport SearchsvgIcon from \"./icons/PlasmicIcon__Searchsvg\" // plasmic-import: hyFJbEzzzDh/icon\nimport ChecksvgIcon from \"./icons/PlasmicIcon__Checksvg\" // plasmic-import: KZLSx5GjmP3wFG/icon\n\nexport const PlasmicTextInput__VariantProps = new Array(\n  \"showStartIcon\",\n  \"showEndIcon\",\n  \"isDisabled\",\n  \"color\"\n)\n\nexport const PlasmicTextInput__ArgProps = new Array(\n  \"placeholder\",\n  \"endIcon\",\n  \"startIcon\",\n  \"value\",\n  \"name\",\n  \"required\",\n  \"aria-label\",\n  \"aria-labelledby\"\n)\n\nfunction PlasmicTextInput__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(\n    () =>\n      Object.assign(\n        {\n          placeholder: \"Enter something…\",\n        },\n\n        props.args\n      ),\n\n    [props.args]\n  )\n\n  const $props = args\n  const [isRootFocusVisibleWithin, triggerRootFocusVisibleWithinProps] =\n    useTrigger(\"useFocusVisibleWithin\", {\n      isTextInput: true,\n    })\n\n  const triggers = {\n    focusVisibleWithin_root: isRootFocusVisibleWithin,\n  }\n\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root,\n        {\n          [sty.root___focusVisibleWithin]: triggers.focusVisibleWithin_root,\n          [sty.rootcolor_dark]: hasVariant(variants, \"color\", \"dark\"),\n          [sty.rootisDisabled]: hasVariant(\n            variants,\n            \"isDisabled\",\n            \"isDisabled\"\n          ),\n\n          [sty.rootshowStartIcon]: hasVariant(\n            variants,\n            \"showStartIcon\",\n            \"showStartIcon\"\n          ),\n        }\n      )}\n      data-plasmic-trigger-props={[triggerRootFocusVisibleWithinProps]}\n    >\n      {(\n        hasVariant(variants, \"showStartIcon\", \"showStartIcon\") ? true : true\n      ) ? (\n        <div\n          data-plasmic-name={\"startIconContainer\"}\n          data-plasmic-override={overrides.startIconContainer}\n          className={classNames(projectcss.all, sty.startIconContainer, {\n            [sty.startIconContainer___focusVisibleWithin]:\n              triggers.focusVisibleWithin_root,\n            [sty.startIconContainercolor_dark]: hasVariant(\n              variants,\n              \"color\",\n              \"dark\"\n            ),\n\n            [sty.startIconContainerisDisabled]: hasVariant(\n              variants,\n              \"isDisabled\",\n              \"isDisabled\"\n            ),\n\n            [sty.startIconContainershowStartIcon]: hasVariant(\n              variants,\n              \"showStartIcon\",\n              \"showStartIcon\"\n            ),\n          })}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <SearchsvgIcon\n                className={classNames(projectcss.all, sty.svg__v4Tdi)}\n                role={\"img\"}\n              />\n            ),\n\n            value: args.startIcon,\n            className: classNames(sty.slotTargetStartIcon, {\n              [sty.slotTargetStartIconcolor_dark]: hasVariant(\n                variants,\n                \"color\",\n                \"dark\"\n              ),\n\n              [sty.slotTargetStartIconshowStartIcon]: hasVariant(\n                variants,\n                \"showStartIcon\",\n                \"showStartIcon\"\n              ),\n            }),\n          })}\n        </div>\n      ) : null}\n\n      <input\n        data-plasmic-name={\"input\"}\n        data-plasmic-override={overrides.input}\n        aria-label={args[\"aria-label\"]}\n        aria-labelledby={args[\"aria-labelledby\"]}\n        className={classNames(projectcss.all, projectcss.input, sty.input, {\n          [sty.input___focusVisibleWithin]: triggers.focusVisibleWithin_root,\n          [sty.inputcolor_dark]: hasVariant(variants, \"color\", \"dark\"),\n          [sty.inputisDisabled]: hasVariant(\n            variants,\n            \"isDisabled\",\n            \"isDisabled\"\n          ),\n\n          [sty.inputshowStartIcon]: hasVariant(\n            variants,\n            \"showStartIcon\",\n            \"showStartIcon\"\n          ),\n        })}\n        disabled={\n          hasVariant(variants, \"isDisabled\", \"isDisabled\") ? true : undefined\n        }\n        name={args.name}\n        placeholder={args.placeholder}\n        required={args.required}\n        type={\"text\"}\n        value={args.value}\n      />\n\n      {(hasVariant(variants, \"showEndIcon\", \"showEndIcon\") ? true : true) ? (\n        <div\n          data-plasmic-name={\"endIconContainer\"}\n          data-plasmic-override={overrides.endIconContainer}\n          className={classNames(projectcss.all, sty.endIconContainer, {\n            [sty.endIconContainercolor_dark]: hasVariant(\n              variants,\n              \"color\",\n              \"dark\"\n            ),\n\n            [sty.endIconContainershowEndIcon]: hasVariant(\n              variants,\n              \"showEndIcon\",\n              \"showEndIcon\"\n            ),\n          })}\n        >\n          {p.renderPlasmicSlot({\n            defaultContents: (\n              <ChecksvgIcon\n                className={classNames(projectcss.all, sty.svg__vlAun)}\n                role={\"img\"}\n              />\n            ),\n\n            value: args.endIcon,\n            className: classNames(sty.slotTargetEndIcon, {\n              [sty.slotTargetEndIconcolor_dark]: hasVariant(\n                variants,\n                \"color\",\n                \"dark\"\n              ),\n\n              [sty.slotTargetEndIconshowEndIcon]: hasVariant(\n                variants,\n                \"showEndIcon\",\n                \"showEndIcon\"\n              ),\n            }),\n          })}\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nfunction useBehavior(props, ref) {\n  return pp.useTextInput(\n    PlasmicTextInput,\n    props,\n    {\n      showStartIconVariant: {\n        group: \"showStartIcon\",\n        variant: \"showStartIcon\",\n      },\n\n      showEndIconVariant: { group: \"showEndIcon\", variant: \"showEndIcon\" },\n      isDisabledVariant: { group: \"isDisabled\", variant: \"isDisabled\" },\n      startIconSlot: \"startIcon\",\n      endIconSlot: \"endIcon\",\n      root: \"root\",\n      input: \"input\",\n    },\n\n    ref\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"startIconContainer\", \"input\", \"endIconContainer\"],\n  startIconContainer: [\"startIconContainer\"],\n  input: [\"input\"],\n  endIconContainer: [\"endIconContainer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicTextInput__ArgProps,\n          internalVariantPropNames: PlasmicTextInput__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicTextInput__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicTextInput\"\n  } else {\n    func.displayName = `PlasmicTextInput.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicTextInput = Object.assign(\n  // Top-level PlasmicTextInput renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    startIconContainer: makeNodeComponent(\"startIconContainer\"),\n    input: makeNodeComponent(\"input\"),\n    endIconContainer: makeNodeComponent(\"endIconContainer\"),\n    // Metadata about props expected for PlasmicTextInput\n    internalVariantProps: PlasmicTextInput__VariantProps,\n    internalArgProps: PlasmicTextInput__ArgProps,\n    useBehavior,\n  }\n)\n\nexport default PlasmicTextInput\n/* prettier-ignore-end */\n","import * as React from \"react\"\nimport { PlasmicTextInput } from \"./plasmic/rva_new/PlasmicTextInput\"\n\nfunction TextInput_(props, ref) {\n  const { plasmicProps } = PlasmicTextInput.useBehavior(props, ref)\n  return <PlasmicTextInput {...plasmicProps} />\n}\n\nconst TextInput = React.forwardRef(TextInput_)\n\nexport default Object.assign(TextInput, {\n  __plumeType: \"text-input\",\n})\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function _2561381SearchIconsvgIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      fill={\"none\"}\n      stroke={\"currentColor\"}\n      strokeLinecap={\"round\"}\n      strokeLinejoin={\"round\"}\n      strokeWidth={\"2\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        stroke: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <circle cx={\"10.5\"} cy={\"10.5\"} r={\"7.5\"}></circle>\n\n      <path d={\"M21 21l-5.2-5.2\"}></path>\n    </svg>\n  )\n}\n\nexport default _2561381SearchIconsvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function ShoppingBag3049SvgIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      version={\"1.1\"}\n      xmlSpace={\"preserve\"}\n      viewBox={\"0 0 256 256\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\n          \"M203.05 67.578h-29.277v-29.38c0-19.978-15.807-36.234-35.236-36.234h-21.07c-19.43 0-35.238 16.256-35.238 36.234v29.38H52.95c-5.413 0-9.802 4.39-9.802 9.803v131.741c0 24.768 20.146 44.914 44.914 44.914h79.878c24.768 0 44.914-20.146 44.914-44.914V77.382c0-5.415-4.389-9.804-9.803-9.804zm-101.218-29.38c0-9.167 7.013-16.628 15.631-16.628h21.07c8.619 0 15.632 7.46 15.632 16.628v29.38h-52.333v-29.38zm91.415 170.924c0 13.954-11.354 25.308-25.308 25.308H88.061c-13.957 0-25.311-11.354-25.311-25.308V87.184h19.477v16.855c0 5.414 4.388 9.803 9.802 9.803s9.803-4.389 9.803-9.803V87.184h52.336v16.855c0 5.414 4.389 9.803 9.803 9.803s9.802-4.389 9.802-9.803V87.184h19.474v121.938z\"\n        }\n        fill={\"currentColor\"}\n        fillRule={\"nonzero\"}\n        opacity={\"1\"}\n      ></path>\n    </svg>\n  )\n}\n\nexport default ShoppingBag3049SvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function AngleRightsvgIcon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      version={\"1.1\"}\n      x={\"0\"}\n      y={\"0\"}\n      xmlSpace={\"preserve\"}\n      viewBox={\"0 0 80.593 122.88\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      style={{\n        fill: \"currentcolor\",\n        ...(style || {}),\n      }}\n      className={classNames(\"plasmic-default__svg\", className)}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        d={\"M0 0h30.82l49.773 61.44-49.773 61.44H0l49.772-61.44L0 0z\"}\n      ></path>\n    </svg>\n  )\n}\n\nexport default AngleRightsvgIcon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: sSe8AoDiAW5DkmycE76RKb\n// Component: iToDAg1nmG\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport TextInput from \"../../TextInput\" // plasmic-import: 8d2n861ybhR/component\nimport Button from \"../../Button\" // plasmic-import: AI4dzLfJKZOBy/component\nimport { useScreenVariants as useScreenVariantsxe8Uhzv7PeLJgW } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: XE8Uhzv7PeLJgW/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_rva_new.module.css\" // plasmic-import: sSe8AoDiAW5DkmycE76RKb/projectcss\nimport * as sty from \"./PlasmicDisclaimer.module.css\" // plasmic-import: iToDAg1nmG/css\nimport IconIcon from \"./icons/PlasmicIcon__Icon\" // plasmic-import: A8bnkBjJqVCwJ9/icon\nimport _2561381SearchIconsvgIcon from \"./icons/PlasmicIcon___2561381SearchIconsvg\" // plasmic-import: YathwNlp-5W/icon\nimport Icon2Icon from \"./icons/PlasmicIcon__Icon2\" // plasmic-import: NfXNpzmLKjwmgA/icon\nimport ShoppingBag3049SvgIcon from \"./icons/PlasmicIcon__ShoppingBag3049Svg\" // plasmic-import: bzTgi1Nyqh7/icon\nimport SearchsvgIcon from \"./icons/PlasmicIcon__Searchsvg\" // plasmic-import: hyFJbEzzzDh/icon\nimport ChecksvgIcon from \"./icons/PlasmicIcon__Checksvg\" // plasmic-import: KZLSx5GjmP3wFG/icon\nimport AngleRightsvgIcon from \"./icons/PlasmicIcon__AngleRightsvg\" // plasmic-import: imr2ad6PsGm/icon\nimport Icon3Icon from \"./icons/PlasmicIcon__Icon3\" // plasmic-import: ka4TjgsfLp_JAY/icon\nimport Icon28Icon from \"./icons/PlasmicIcon__Icon28\" // plasmic-import: zIRvI6W2zd5sf7/icon\n\nexport const PlasmicDisclaimer__VariantProps = new Array()\n\nexport const PlasmicDisclaimer__ArgProps = new Array()\n\nfunction PlasmicDisclaimer__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantsxe8Uhzv7PeLJgW(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        <p.Stack\n          as={\"div\"}\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          hasGap={true}\n          className={classNames(\n            projectcss.all,\n            projectcss.root_reset,\n            projectcss.plasmic_default_styles,\n            projectcss.plasmic_mixins,\n            projectcss.plasmic_tokens,\n            sty.root\n          )}\n        >\n          <p.Stack\n            as={\"div\"}\n            hasGap={true}\n            className={classNames(projectcss.all, sty.freeBox__uafmR)}\n          >\n            <p.Stack\n              as={\"div\"}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.freeBox___4Zo8)}\n            >\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.freeBox__xlLyc)}\n              >\n                <div\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.__wab_text,\n                    sty.text__zm8Ay\n                  )}\n                >\n                  {\"Get 55% off Lorem Ipsum enough lorem discount\"}\n                </div>\n              </p.Stack>\n\n              {false ? (\n                <div className={classNames(projectcss.all, sty.freeBox__cdIj8)}>\n                  <button\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.button,\n                      projectcss.__wab_text,\n                      sty.button__fJzvP\n                    )}\n                  >\n                    {\"Sign up\"}\n                  </button>\n\n                  <p.Stack\n                    as={p.PlasmicLink}\n                    hasGap={true}\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.a,\n                      sty.link__epPl9\n                    )}\n                    component={Link}\n                    platform={\"gatsby\"}\n                  >\n                    {false ? (\n                      <IconIcon\n                        className={classNames(projectcss.all, sty.svg__n3AG9)}\n                        role={\"img\"}\n                      />\n                    ) : null}\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__cfnAz\n                      )}\n                    >\n                      {\"Log in\"}\n                    </div>\n\n                    {false ? (\n                      <IconIcon\n                        className={classNames(projectcss.all, sty.svg__trG4C)}\n                        role={\"img\"}\n                      />\n                    ) : null}\n                  </p.Stack>\n                </div>\n              ) : null}\n            </p.Stack>\n          </p.Stack>\n\n          <div className={classNames(projectcss.all, sty.freeBox__yj9UD)}>\n            <p.Stack\n              as={\"div\"}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.freeBox__mJmdF)}\n            >\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.freeBox__oju2H)}\n              >\n                <div\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.__wab_text,\n                    sty.text__iK9D\n                  )}\n                >\n                  {\"Logo\"}\n                </div>\n\n                <p.Stack\n                  as={\"div\"}\n                  hasGap={true}\n                  className={classNames(projectcss.all, sty.freeBox__sGkJs)}\n                >\n                  <p.Stack\n                    as={p.PlasmicLink}\n                    hasGap={true}\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.a,\n                      sty.link__qMZqC\n                    )}\n                    component={Link}\n                    platform={\"gatsby\"}\n                  >\n                    {false ? (\n                      <IconIcon\n                        className={classNames(projectcss.all, sty.svg__hcpvg)}\n                        role={\"img\"}\n                      />\n                    ) : null}\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__vAwzb\n                      )}\n                    >\n                      {\"shop\"}\n                    </div>\n\n                    {false ? (\n                      <IconIcon\n                        className={classNames(projectcss.all, sty.svg__chDgB)}\n                        role={\"img\"}\n                      />\n                    ) : null}\n                  </p.Stack>\n\n                  <p.Stack\n                    as={p.PlasmicLink}\n                    hasGap={true}\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.a,\n                      sty.link__xLcLa\n                    )}\n                    component={Link}\n                    platform={\"gatsby\"}\n                  >\n                    {false ? (\n                      <IconIcon\n                        className={classNames(projectcss.all, sty.svg__fzyBo)}\n                        role={\"img\"}\n                      />\n                    ) : null}\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__riZe0\n                      )}\n                    >\n                      {\"The Academy\"}\n                    </div>\n\n                    {false ? (\n                      <IconIcon\n                        className={classNames(projectcss.all, sty.svg___0AGt9)}\n                        role={\"img\"}\n                      />\n                    ) : null}\n                  </p.Stack>\n\n                  <p.Stack\n                    as={p.PlasmicLink}\n                    hasGap={true}\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.a,\n                      sty.link__g6B1Z\n                    )}\n                    component={Link}\n                    platform={\"gatsby\"}\n                  >\n                    {false ? (\n                      <IconIcon\n                        className={classNames(projectcss.all, sty.svg__yksQ8)}\n                        role={\"img\"}\n                      />\n                    ) : null}\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__l27Eo\n                      )}\n                    >\n                      {\"About\"}\n                    </div>\n\n                    {false ? (\n                      <IconIcon\n                        className={classNames(projectcss.all, sty.svg__daHcr)}\n                        role={\"img\"}\n                      />\n                    ) : null}\n                  </p.Stack>\n\n                  <p.Stack\n                    as={p.PlasmicLink}\n                    hasGap={true}\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.a,\n                      sty.link__ifX8V\n                    )}\n                    component={Link}\n                    platform={\"gatsby\"}\n                  >\n                    {false ? (\n                      <IconIcon\n                        className={classNames(projectcss.all, sty.svg__oq1Oo)}\n                        role={\"img\"}\n                      />\n                    ) : null}\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__vYgs\n                      )}\n                    >\n                      {\"Help\"}\n                    </div>\n\n                    {false ? (\n                      <IconIcon\n                        className={classNames(projectcss.all, sty.svg__nPjP)}\n                        role={\"img\"}\n                      />\n                    ) : null}\n                  </p.Stack>\n                </p.Stack>\n\n                <p.Stack\n                  as={\"div\"}\n                  hasGap={true}\n                  className={classNames(projectcss.all, sty.freeBox__m9Or4)}\n                >\n                  <p.Stack\n                    as={p.PlasmicLink}\n                    hasGap={true}\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.a,\n                      sty.link__vZdZo\n                    )}\n                    component={Link}\n                    platform={\"gatsby\"}\n                  >\n                    {false ? (\n                      <IconIcon\n                        className={classNames(projectcss.all, sty.svg__aeah)}\n                        role={\"img\"}\n                      />\n                    ) : null}\n\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.freeBox__m5Wy1)}\n                    >\n                      <_2561381SearchIconsvgIcon\n                        className={classNames(projectcss.all, sty.svg__jMv1T)}\n                        role={\"img\"}\n                      />\n\n                      <Icon2Icon\n                        className={classNames(projectcss.all, sty.svg___3CuFl)}\n                        role={\"img\"}\n                      />\n\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__smNdn\n                        )}\n                      >\n                        <ShoppingBag3049SvgIcon\n                          className={classNames(projectcss.all, sty.svg__xAsoL)}\n                          role={\"img\"}\n                        />\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            sty.freeBox__pN8Jm\n                          )}\n                        />\n                      </div>\n                    </p.Stack>\n\n                    {false ? (\n                      <IconIcon\n                        className={classNames(projectcss.all, sty.svg__oxdvk)}\n                        role={\"img\"}\n                      />\n                    ) : null}\n                  </p.Stack>\n                </p.Stack>\n\n                {false ? (\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__umqC1)}\n                  >\n                    <button\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.button,\n                        projectcss.__wab_text,\n                        sty.button__t7Nha\n                      )}\n                    >\n                      {\"Sign up\"}\n                    </button>\n\n                    <p.Stack\n                      as={p.PlasmicLink}\n                      hasGap={true}\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.a,\n                        sty.link__ewkEw\n                      )}\n                      component={Link}\n                      platform={\"gatsby\"}\n                    >\n                      {false ? (\n                        <IconIcon\n                          className={classNames(projectcss.all, sty.svg___8NvT)}\n                          role={\"img\"}\n                        />\n                      ) : null}\n\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.__wab_text,\n                          sty.text__hyxnw\n                        )}\n                      >\n                        {\"Log in\"}\n                      </div>\n\n                      {false ? (\n                        <IconIcon\n                          className={classNames(projectcss.all, sty.svg__ntesa)}\n                          role={\"img\"}\n                        />\n                      ) : null}\n                    </p.Stack>\n                  </div>\n                ) : null}\n              </p.Stack>\n            </p.Stack>\n          </div>\n\n          {true ? (\n            <p.Stack\n              as={\"div\"}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.freeBox__q9Z96)}\n            >\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.freeBox__jP1R)}\n              >\n                <p.Stack\n                  as={\"div\"}\n                  hasGap={true}\n                  className={classNames(projectcss.all, sty.freeBox__wWTvK)}\n                >\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__zkysG)}\n                  >\n                    <div\n                      className={classNames(projectcss.all, sty.freeBox__cj73B)}\n                    >\n                      <h2\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.h2,\n                          projectcss.__wab_text,\n                          sty.h2__mNbv\n                        )}\n                      >\n                        {\"Lorem Terms & Conditions\"}\n                      </h2>\n                    </div>\n                  </p.Stack>\n\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox___7FrLd)}\n                  >\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.freeBox__rokLb)}\n                    >\n                      <p.Stack\n                        as={\"div\"}\n                        hasGap={true}\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__tsnHs\n                        )}\n                      >\n                        <h2\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h2,\n                            projectcss.__wab_text,\n                            sty.h2__vnIEz\n                          )}\n                        >\n                          {\"Overview\"}\n                        </h2>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__ma8H3\n                          )}\n                        >\n                          {\n                            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\"\n                          }\n                        </div>\n                      </p.Stack>\n\n                      <p.Stack\n                        as={\"div\"}\n                        hasGap={true}\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__m75Yo\n                        )}\n                      >\n                        <h2\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h2,\n                            projectcss.__wab_text,\n                            sty.h2__dy7T6\n                          )}\n                        >\n                          {\"Section 1 — Online Store Terms\"}\n                        </h2>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__ympMn\n                          )}\n                        >\n                          {\n                            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\"\n                          }\n                        </div>\n                      </p.Stack>\n\n                      <p.Stack\n                        as={\"div\"}\n                        hasGap={true}\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__h4Rh\n                        )}\n                      >\n                        <h2\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h2,\n                            projectcss.__wab_text,\n                            sty.h2__mMmoy\n                          )}\n                        >\n                          {\"Section 2 — General Conditions\"}\n                        </h2>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__rR1Xg\n                          )}\n                        >\n                          {\n                            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\"\n                          }\n                        </div>\n                      </p.Stack>\n\n                      <p.Stack\n                        as={\"div\"}\n                        hasGap={true}\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__wUWg6\n                        )}\n                      >\n                        <h2\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h2,\n                            projectcss.__wab_text,\n                            sty.h2__zyDa3\n                          )}\n                        >\n                          {\n                            \"Section 3 — Accuracy, completeness and timeliness of information\"\n                          }\n                        </h2>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__vosrt\n                          )}\n                        >\n                          {\n                            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\"\n                          }\n                        </div>\n                      </p.Stack>\n\n                      <p.Stack\n                        as={\"div\"}\n                        hasGap={true}\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox___6BoRa\n                        )}\n                      >\n                        <h2\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h2,\n                            projectcss.__wab_text,\n                            sty.h2__eLzzy\n                          )}\n                        >\n                          {\"Section 4 — Modifications \"}\n                        </h2>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text___6LxXh\n                          )}\n                        >\n                          {\n                            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world,\\n\\n with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\"\n                          }\n                        </div>\n                      </p.Stack>\n\n                      <p.Stack\n                        as={\"div\"}\n                        hasGap={true}\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__xqwdF\n                        )}\n                      >\n                        <h2\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h2,\n                            projectcss.__wab_text,\n                            sty.h2__txApm\n                          )}\n                        >\n                          {\"Section 5 — Products or Services (if applicable)\"}\n                        </h2>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__yig02\n                          )}\n                        >\n                          {\n                            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world,\\n with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\"\n                          }\n                        </div>\n                      </p.Stack>\n\n                      <p.Stack\n                        as={\"div\"}\n                        hasGap={true}\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__bvCqv\n                        )}\n                      >\n                        <h2\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h2,\n                            projectcss.__wab_text,\n                            sty.h2__vGwxZ\n                          )}\n                        >\n                          {\"Section 6 — Accuracy of Billing\"}\n                        </h2>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__sRSoV\n                          )}\n                        >\n                          {\n                            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world,\\n with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\"\n                          }\n                        </div>\n                      </p.Stack>\n\n                      <p.Stack\n                        as={\"div\"}\n                        hasGap={true}\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__byLgj\n                        )}\n                      >\n                        <h2\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h2,\n                            projectcss.__wab_text,\n                            sty.h2__b099\n                          )}\n                        >\n                          {\"Section 7 — Optional \"}\n                        </h2>\n\n                        <div\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.__wab_text,\n                            sty.text__yG3ZZ\n                          )}\n                        >\n                          {\n                            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world,\\n with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\"\n                          }\n                        </div>\n                      </p.Stack>\n                    </p.Stack>\n                  </p.Stack>\n                </p.Stack>\n              </p.Stack>\n            </p.Stack>\n          ) : null}\n\n          <p.Stack\n            as={\"div\"}\n            hasGap={true}\n            className={classNames(projectcss.all, sty.freeBox___2DLwu)}\n          >\n            <p.Stack\n              as={\"div\"}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.freeBox__c9Sp1)}\n            >\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.freeBox__ms60X)}\n              >\n                <div\n                  className={classNames(projectcss.all, sty.freeBox___73NOk)}\n                >\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__wM8I8\n                    )}\n                  >\n                    {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                      ? \"Contact us\\n\"\n                      : \"Contact us\\n\"}\n                  </div>\n\n                  <p.PlasmicLink\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.a,\n                      projectcss.__wab_text,\n                      sty.link__fsrkz\n                    )}\n                    component={Link}\n                    platform={\"gatsby\"}\n                  >\n                    {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                      ? \"(555) 555-5555\"\n                      : \"(555) 555-5555\"}\n                  </p.PlasmicLink>\n\n                  <p.PlasmicLink\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.a,\n                      projectcss.__wab_text,\n                      sty.link___4Ui1U\n                    )}\n                    component={Link}\n                    platform={\"gatsby\"}\n                  >\n                    {\"support@example.com\"}\n                  </p.PlasmicLink>\n                </div>\n              </p.Stack>\n\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.freeBox__caDwJ)}\n              >\n                <p.PlasmicLink\n                  data-plasmic-name={\"_3\"}\n                  data-plasmic-override={overrides._3}\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.a,\n                    projectcss.__wab_text,\n                    sty._3\n                  )}\n                  component={Link}\n                  href={\n                    hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                      ? \"#\"\n                      : undefined\n                  }\n                  platform={\"gatsby\"}\n                >\n                  {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                    ? \"Shop\"\n                    : \"Shop\"}\n                </p.PlasmicLink>\n\n                <p.PlasmicLink\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.a,\n                    projectcss.__wab_text,\n                    sty.link__hJvPr\n                  )}\n                  component={Link}\n                  platform={\"gatsby\"}\n                >\n                  {\"The Academy\"}\n                </p.PlasmicLink>\n\n                <p.PlasmicLink\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.a,\n                    projectcss.__wab_text,\n                    sty.link__spsyB\n                  )}\n                  component={Link}\n                  platform={\"gatsby\"}\n                >\n                  {\"About\"}\n                </p.PlasmicLink>\n\n                <p.PlasmicLink\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.a,\n                    projectcss.__wab_text,\n                    sty.link__tGz8V\n                  )}\n                  component={Link}\n                  platform={\"gatsby\"}\n                >\n                  {\"Help\"}\n                </p.PlasmicLink>\n              </p.Stack>\n\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.freeBox___9Ke1X)}\n              >\n                <div\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.__wab_text,\n                    sty.text___5J9E9\n                  )}\n                >\n                  {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                    ? \"Email newsletter\"\n                    : \"Email newsletter\"}\n                </div>\n\n                <div className={classNames(projectcss.all, sty.freeBox__zRldn)}>\n                  <TextInput\n                    data-plasmic-name={\"textInput\"}\n                    data-plasmic-override={overrides.textInput}\n                    className={classNames(\"__wab_instance\", sty.textInput)}\n                    endIcon={\n                      <Button\n                        className={classNames(\n                          \"__wab_instance\",\n                          sty.button__uPmfV\n                        )}\n                        endIcon={\n                          <ChecksvgIcon\n                            className={classNames(\n                              projectcss.all,\n                              sty.svg__r48Jn\n                            )}\n                            role={\"img\"}\n                          />\n                        }\n                        startIcon={\n                          <ChecksvgIcon\n                            className={classNames(\n                              projectcss.all,\n                              sty.svg__ecQBq\n                            )}\n                            role={\"img\"}\n                          />\n                        }\n                      >\n                        <AngleRightsvgIcon\n                          className={classNames(projectcss.all, sty.svg__ac9Qe)}\n                          role={\"img\"}\n                        />\n                      </Button>\n                    }\n                    placeholder={\"E-mail\"}\n                    showEndIcon={true}\n                    startIcon={\n                      <SearchsvgIcon\n                        className={classNames(projectcss.all, sty.svg___2Mwk)}\n                        role={\"img\"}\n                      />\n                    }\n                  />\n                </div>\n              </p.Stack>\n\n              {(\n                hasVariant(globalVariants, \"screen\", \"mobileOnly\") ? true : true\n              ) ? (\n                <p.Stack\n                  as={\"div\"}\n                  hasGap={true}\n                  className={classNames(projectcss.all, sty.freeBox__uXVx)}\n                >\n                  <p.Stack\n                    as={p.PlasmicLink}\n                    hasGap={true}\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.a,\n                      sty.link__rv4T6\n                    )}\n                    component={Link}\n                    platform={\"gatsby\"}\n                  >\n                    {false ? (\n                      <IconIcon\n                        className={classNames(projectcss.all, sty.svg__z1DTc)}\n                        role={\"img\"}\n                      />\n                    ) : null}\n\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.freeBox__ocf0B)}\n                    >\n                      <p.PlasmicIcon\n                        PlasmicIconType={\n                          hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                            ? Icon3Icon\n                            : Icon3Icon\n                        }\n                        className={classNames(projectcss.all, sty.svg___2KL4T)}\n                        role={\"img\"}\n                      />\n\n                      <Icon2Icon\n                        className={classNames(projectcss.all, sty.svg__gpj8K)}\n                        role={\"img\"}\n                      />\n\n                      <p.PlasmicIcon\n                        PlasmicIconType={\n                          hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                            ? Icon28Icon\n                            : Icon28Icon\n                        }\n                        className={classNames(projectcss.all, sty.svg__icKgQ)}\n                        role={\"img\"}\n                      />\n                    </p.Stack>\n\n                    {false ? (\n                      <IconIcon\n                        className={classNames(projectcss.all, sty.svg__s0Xi4)}\n                        role={\"img\"}\n                      />\n                    ) : null}\n                  </p.Stack>\n                </p.Stack>\n              ) : null}\n              {false ? (\n                <div className={classNames(projectcss.all, sty.freeBox__uOltq)}>\n                  <button\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.button,\n                      projectcss.__wab_text,\n                      sty.button__dfIkC\n                    )}\n                  >\n                    {\"Sign up\"}\n                  </button>\n\n                  <p.Stack\n                    as={p.PlasmicLink}\n                    hasGap={true}\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.a,\n                      sty.link___0WxQg\n                    )}\n                    component={Link}\n                    platform={\"gatsby\"}\n                  >\n                    {false ? (\n                      <IconIcon\n                        className={classNames(projectcss.all, sty.svg__gbdQ)}\n                        role={\"img\"}\n                      />\n                    ) : null}\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__rUmtZ\n                      )}\n                    >\n                      {\"Log in\"}\n                    </div>\n\n                    {false ? (\n                      <IconIcon\n                        className={classNames(projectcss.all, sty.svg__nb6Gh)}\n                        role={\"img\"}\n                      />\n                    ) : null}\n                  </p.Stack>\n                </div>\n              ) : null}\n            </p.Stack>\n\n            <div className={classNames(projectcss.all, sty.freeBox__lyrci)}>\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.freeBox__qzIS)}\n              >\n                <p.Stack\n                  as={\"div\"}\n                  hasGap={true}\n                  className={classNames(projectcss.all, sty.freeBox__liTqO)}\n                >\n                  <div\n                    className={classNames(projectcss.all, sty.freeBox__hfhS7)}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__lb8L\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                        ? \"(c) Company. All rights reserved. This site proudly built with\"\n                        : \"© Company. All rights reserved. This site proudly built with\"}\n                    </div>\n\n                    <p.PlasmicLink\n                      data-plasmic-name={\"httpsstudioplasmicapp\"}\n                      data-plasmic-override={overrides.httpsstudioplasmicapp}\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.a,\n                        projectcss.__wab_text,\n                        sty.httpsstudioplasmicapp\n                      )}\n                      component={Link}\n                      platform={\"gatsby\"}\n                    >\n                      {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                        ? \" Plasmic\"\n                        : \" Plasmic\"}\n                    </p.PlasmicLink>\n                  </div>\n                </p.Stack>\n\n                <p.Stack\n                  as={\"div\"}\n                  hasGap={true}\n                  className={classNames(projectcss.all, sty.freeBox__ssaYf)}\n                >\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__wogL)}\n                  >\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(\n                        projectcss.all,\n                        sty.freeBox___78LDo\n                      )}\n                    >\n                      <p.Stack\n                        as={\"div\"}\n                        hasGap={true}\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__hsMxv\n                        )}\n                      >\n                        <p.Stack\n                          as={p.PlasmicLink}\n                          hasGap={true}\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.a,\n                            sty.link__td4Q5\n                          )}\n                          component={Link}\n                          platform={\"gatsby\"}\n                        >\n                          {false ? (\n                            <IconIcon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__gR4Rl\n                              )}\n                              role={\"img\"}\n                            />\n                          ) : null}\n\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              projectcss.__wab_text,\n                              sty.text__kXsSw\n                            )}\n                          >\n                            {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                              ? \"shop\"\n                              : \"Shipping & Returns\"}\n                          </div>\n\n                          {false ? (\n                            <IconIcon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__dvhHj\n                              )}\n                              role={\"img\"}\n                            />\n                          ) : null}\n                        </p.Stack>\n\n                        <p.Stack\n                          as={p.PlasmicLink}\n                          hasGap={true}\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.a,\n                            sty.link___67NW\n                          )}\n                          component={Link}\n                          platform={\"gatsby\"}\n                        >\n                          {false ? (\n                            <IconIcon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__k59H2\n                              )}\n                              role={\"img\"}\n                            />\n                          ) : null}\n                          {false ? (\n                            <IconIcon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__sm0Ss\n                              )}\n                              role={\"img\"}\n                            />\n                          ) : null}\n\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              projectcss.__wab_text,\n                              sty.text__hQfAx\n                            )}\n                          >\n                            {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                              ? \"Privacy policy\"\n                              : \"Privacy policy\"}\n                          </div>\n                        </p.Stack>\n\n                        <p.Stack\n                          as={p.PlasmicLink}\n                          hasGap={true}\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.a,\n                            sty.link__ql8Mk\n                          )}\n                          component={Link}\n                          platform={\"gatsby\"}\n                        >\n                          {false ? (\n                            <IconIcon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__u38B6\n                              )}\n                              role={\"img\"}\n                            />\n                          ) : null}\n\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              projectcss.__wab_text,\n                              sty.text__iuf3I\n                            )}\n                          >\n                            {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                              ? \"Terms & Conditions\"\n                              : \"Terms & Conditions\"}\n                          </div>\n\n                          {false ? (\n                            <IconIcon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__kyI\n                              )}\n                              role={\"img\"}\n                            />\n                          ) : null}\n                        </p.Stack>\n                      </p.Stack>\n                    </p.Stack>\n                  </p.Stack>\n                </p.Stack>\n              </p.Stack>\n            </div>\n          </p.Stack>\n        </p.Stack>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"_3\", \"textInput\", \"textbox\", \"httpsstudioplasmicapp\"],\n  _3: [\"_3\"],\n  textInput: [\"textInput\", \"textbox\"],\n  httpsstudioplasmicapp: [\"httpsstudioplasmicapp\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicDisclaimer__ArgProps,\n          internalVariantPropNames: PlasmicDisclaimer__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicDisclaimer__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicDisclaimer\"\n  } else {\n    func.displayName = `PlasmicDisclaimer.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicDisclaimer = Object.assign(\n  // Top-level PlasmicDisclaimer renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    _3: makeNodeComponent(\"_3\"),\n    textInput: makeNodeComponent(\"textInput\"),\n    httpsstudioplasmicapp: makeNodeComponent(\"httpsstudioplasmicapp\"),\n    // Metadata about props expected for PlasmicDisclaimer\n    internalVariantProps: PlasmicDisclaimer__VariantProps,\n    internalArgProps: PlasmicDisclaimer__ArgProps,\n  }\n)\n\nexport default PlasmicDisclaimer\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var _3 = \"PlasmicDisclaimer-module--_3--QN+BF\";\nexport var button__dfIkC = \"PlasmicDisclaimer-module--button__dfIkC--Kh4Kl\";\nexport var button__fJzvP = \"PlasmicDisclaimer-module--button__fJzvP--5iQGc\";\nexport var button__t7Nha = \"PlasmicDisclaimer-module--button__t7Nha--pngzT\";\nexport var button__uPmfV = \"PlasmicDisclaimer-module--button__uPmfV--tKXdd\";\nexport var freeBox___2DLwu = \"PlasmicDisclaimer-module--freeBox___2DLwu--4n71x\";\nexport var freeBox___4Zo8 = \"PlasmicDisclaimer-module--freeBox___4Zo8--6sgcK\";\nexport var freeBox___6BoRa = \"PlasmicDisclaimer-module--freeBox___6BoRa--JZN4n\";\nexport var freeBox___73NOk = \"PlasmicDisclaimer-module--freeBox___73NOk--vKtwj\";\nexport var freeBox___78LDo = \"PlasmicDisclaimer-module--freeBox___78LDo--Wexku\";\nexport var freeBox___7FrLd = \"PlasmicDisclaimer-module--freeBox___7FrLd--Y08LK\";\nexport var freeBox___9Ke1X = \"PlasmicDisclaimer-module--freeBox___9Ke1X--7LPqL\";\nexport var freeBox__bvCqv = \"PlasmicDisclaimer-module--freeBox__bvCqv--DbpKY\";\nexport var freeBox__byLgj = \"PlasmicDisclaimer-module--freeBox__byLgj--OYx24\";\nexport var freeBox__c9Sp1 = \"PlasmicDisclaimer-module--freeBox__c9Sp1--92HQb\";\nexport var freeBox__caDwJ = \"PlasmicDisclaimer-module--freeBox__caDwJ--pKwAo\";\nexport var freeBox__cdIj8 = \"PlasmicDisclaimer-module--freeBox__cdIj8--KajAK\";\nexport var freeBox__cj73B = \"PlasmicDisclaimer-module--freeBox__cj73B--uZCWP\";\nexport var freeBox__h4Rh = \"PlasmicDisclaimer-module--freeBox__h4Rh--L+Qoz\";\nexport var freeBox__hfhS7 = \"PlasmicDisclaimer-module--freeBox__hfhS7--f2NqP\";\nexport var freeBox__hsMxv = \"PlasmicDisclaimer-module--freeBox__hsMxv---lyfQ\";\nexport var freeBox__jP1R = \"PlasmicDisclaimer-module--freeBox__jP1R--+MUDB\";\nexport var freeBox__liTqO = \"PlasmicDisclaimer-module--freeBox__liTqO--HL3zs\";\nexport var freeBox__lyrci = \"PlasmicDisclaimer-module--freeBox__lyrci--xhEYu\";\nexport var freeBox__m5Wy1 = \"PlasmicDisclaimer-module--freeBox__m5Wy1--x2FT3\";\nexport var freeBox__m75Yo = \"PlasmicDisclaimer-module--freeBox__m75Yo--vaIaM\";\nexport var freeBox__m9Or4 = \"PlasmicDisclaimer-module--freeBox__m9Or4--iuFdL\";\nexport var freeBox__mJmdF = \"PlasmicDisclaimer-module--freeBox__mJmdF--kYV8M\";\nexport var freeBox__ms60X = \"PlasmicDisclaimer-module--freeBox__ms60X--L9tk1\";\nexport var freeBox__ocf0B = \"PlasmicDisclaimer-module--freeBox__ocf0B--kNgY7\";\nexport var freeBox__oju2H = \"PlasmicDisclaimer-module--freeBox__oju2H--MYGXh\";\nexport var freeBox__pN8Jm = \"PlasmicDisclaimer-module--freeBox__pN8Jm--9FdgS\";\nexport var freeBox__q9Z96 = \"PlasmicDisclaimer-module--freeBox__q9Z96--L6dxo\";\nexport var freeBox__qzIS = \"PlasmicDisclaimer-module--freeBox__qzIS--tD3i3\";\nexport var freeBox__rokLb = \"PlasmicDisclaimer-module--freeBox__rokLb--W93uF\";\nexport var freeBox__sGkJs = \"PlasmicDisclaimer-module--freeBox__sGkJs--QMBkj\";\nexport var freeBox__smNdn = \"PlasmicDisclaimer-module--freeBox__smNdn--qtE50\";\nexport var freeBox__ssaYf = \"PlasmicDisclaimer-module--freeBox__ssaYf--6D5cT\";\nexport var freeBox__tsnHs = \"PlasmicDisclaimer-module--freeBox__tsnHs--mwFOE\";\nexport var freeBox__uOltq = \"PlasmicDisclaimer-module--freeBox__uOltq--TnMca\";\nexport var freeBox__uXVx = \"PlasmicDisclaimer-module--freeBox__uXVx--f-YKT\";\nexport var freeBox__uafmR = \"PlasmicDisclaimer-module--freeBox__uafmR--aPS2l\";\nexport var freeBox__umqC1 = \"PlasmicDisclaimer-module--freeBox__umqC1--4B06M\";\nexport var freeBox__wUWg6 = \"PlasmicDisclaimer-module--freeBox__wUWg6--+YHUU\";\nexport var freeBox__wWTvK = \"PlasmicDisclaimer-module--freeBox__wWTvK--IkRUR\";\nexport var freeBox__wogL = \"PlasmicDisclaimer-module--freeBox__wogL--AHpn1\";\nexport var freeBox__xlLyc = \"PlasmicDisclaimer-module--freeBox__xlLyc--GCp6v\";\nexport var freeBox__xqwdF = \"PlasmicDisclaimer-module--freeBox__xqwdF--D-gla\";\nexport var freeBox__yj9UD = \"PlasmicDisclaimer-module--freeBox__yj9UD--AwH-u\";\nexport var freeBox__zRldn = \"PlasmicDisclaimer-module--freeBox__zRldn--8oBDD\";\nexport var freeBox__zkysG = \"PlasmicDisclaimer-module--freeBox__zkysG--ahqNb\";\nexport var h2__b099 = \"PlasmicDisclaimer-module--h2__b099--yhRk5\";\nexport var h2__dy7T6 = \"PlasmicDisclaimer-module--h2__dy7T6--tsXyY\";\nexport var h2__eLzzy = \"PlasmicDisclaimer-module--h2__eLzzy--3Aw7+\";\nexport var h2__mMmoy = \"PlasmicDisclaimer-module--h2__mMmoy--WhYHC\";\nexport var h2__mNbv = \"PlasmicDisclaimer-module--h2__mNbv--LQ5Dt\";\nexport var h2__txApm = \"PlasmicDisclaimer-module--h2__txApm--O96zk\";\nexport var h2__vGwxZ = \"PlasmicDisclaimer-module--h2__vGwxZ--TlFfU\";\nexport var h2__vnIEz = \"PlasmicDisclaimer-module--h2__vnIEz--7sTht\";\nexport var h2__zyDa3 = \"PlasmicDisclaimer-module--h2__zyDa3--XIs8g\";\nexport var httpsstudioplasmicapp = \"PlasmicDisclaimer-module--httpsstudioplasmicapp--aAixs\";\nexport var link___0WxQg = \"PlasmicDisclaimer-module--link___0WxQg--k8qYr\";\nexport var link___4Ui1U = \"PlasmicDisclaimer-module--link___4Ui1U--pS4iQ\";\nexport var link___67NW = \"PlasmicDisclaimer-module--link___67NW--w3Yt6\";\nexport var link__epPl9 = \"PlasmicDisclaimer-module--link__epPl9--MKotV\";\nexport var link__ewkEw = \"PlasmicDisclaimer-module--link__ewkEw--ah4xc\";\nexport var link__fsrkz = \"PlasmicDisclaimer-module--link__fsrkz--L6TbV\";\nexport var link__g6B1Z = \"PlasmicDisclaimer-module--link__g6B1Z--Zffe-\";\nexport var link__hJvPr = \"PlasmicDisclaimer-module--link__hJvPr--LXf7b\";\nexport var link__ifX8V = \"PlasmicDisclaimer-module--link__ifX8V--5EHJX\";\nexport var link__qMZqC = \"PlasmicDisclaimer-module--link__qMZqC--3pfM7\";\nexport var link__ql8Mk = \"PlasmicDisclaimer-module--link__ql8Mk--53LHj\";\nexport var link__rv4T6 = \"PlasmicDisclaimer-module--link__rv4T6--XYyRr\";\nexport var link__spsyB = \"PlasmicDisclaimer-module--link__spsyB--1UCjU\";\nexport var link__tGz8V = \"PlasmicDisclaimer-module--link__tGz8V--OEETG\";\nexport var link__td4Q5 = \"PlasmicDisclaimer-module--link__td4Q5--zaisJ\";\nexport var link__vZdZo = \"PlasmicDisclaimer-module--link__vZdZo--Po7Gg\";\nexport var link__xLcLa = \"PlasmicDisclaimer-module--link__xLcLa--dKYfy\";\nexport var root = \"PlasmicDisclaimer-module--root--rPKe+\";\nexport var svg___0AGt9 = \"PlasmicDisclaimer-module--svg___0AGt9--iGfPF\";\nexport var svg___2KL4T = \"PlasmicDisclaimer-module--svg___2KL4T--pQ3hz\";\nexport var svg___2Mwk = \"PlasmicDisclaimer-module--svg___2Mwk--TnJMB\";\nexport var svg___3CuFl = \"PlasmicDisclaimer-module--svg___3CuFl--usfSH\";\nexport var svg___8NvT = \"PlasmicDisclaimer-module--svg___8NvT--PYhGX\";\nexport var svg__ac9Qe = \"PlasmicDisclaimer-module--svg__ac9Qe--2HAX7\";\nexport var svg__aeah = \"PlasmicDisclaimer-module--svg__aeah--HpIgl\";\nexport var svg__chDgB = \"PlasmicDisclaimer-module--svg__chDgB--mgXpY\";\nexport var svg__daHcr = \"PlasmicDisclaimer-module--svg__daHcr--qMyh7\";\nexport var svg__dvhHj = \"PlasmicDisclaimer-module--svg__dvhHj--jW+JQ\";\nexport var svg__ecQBq = \"PlasmicDisclaimer-module--svg__ecQBq--pBrMQ\";\nexport var svg__fzyBo = \"PlasmicDisclaimer-module--svg__fzyBo--W2848\";\nexport var svg__gR4Rl = \"PlasmicDisclaimer-module--svg__gR4Rl--4ELBj\";\nexport var svg__gbdQ = \"PlasmicDisclaimer-module--svg__gbdQ--TH1Wp\";\nexport var svg__gpj8K = \"PlasmicDisclaimer-module--svg__gpj8K--mFrc4\";\nexport var svg__hcpvg = \"PlasmicDisclaimer-module--svg__hcpvg--Oix0k\";\nexport var svg__icKgQ = \"PlasmicDisclaimer-module--svg__icKgQ--JjSo1\";\nexport var svg__jMv1T = \"PlasmicDisclaimer-module--svg__jMv1T--iatVm\";\nexport var svg__k59H2 = \"PlasmicDisclaimer-module--svg__k59H2--4zhQn\";\nexport var svg__kyI = \"PlasmicDisclaimer-module--svg__kyI--jVeK2\";\nexport var svg__n3AG9 = \"PlasmicDisclaimer-module--svg__n3AG9--GpGYZ\";\nexport var svg__nPjP = \"PlasmicDisclaimer-module--svg__nPjP--kE5K1\";\nexport var svg__nb6Gh = \"PlasmicDisclaimer-module--svg__nb6Gh--2cwOu\";\nexport var svg__ntesa = \"PlasmicDisclaimer-module--svg__ntesa--QhLVu\";\nexport var svg__oq1Oo = \"PlasmicDisclaimer-module--svg__oq1Oo--l8-MD\";\nexport var svg__oxdvk = \"PlasmicDisclaimer-module--svg__oxdvk--pM2FZ\";\nexport var svg__r48Jn = \"PlasmicDisclaimer-module--svg__r48Jn--IbyC2\";\nexport var svg__s0Xi4 = \"PlasmicDisclaimer-module--svg__s0Xi4--pPHej\";\nexport var svg__sm0Ss = \"PlasmicDisclaimer-module--svg__sm0Ss--41VqY\";\nexport var svg__trG4C = \"PlasmicDisclaimer-module--svg__trG4C--6ldQL\";\nexport var svg__u38B6 = \"PlasmicDisclaimer-module--svg__u38B6--3-mrY\";\nexport var svg__xAsoL = \"PlasmicDisclaimer-module--svg__xAsoL--A0FT5\";\nexport var svg__yksQ8 = \"PlasmicDisclaimer-module--svg__yksQ8--XS9Ch\";\nexport var svg__z1DTc = \"PlasmicDisclaimer-module--svg__z1DTc--MerPc\";\nexport var textInput = \"PlasmicDisclaimer-module--textInput--iGvnh\";\nexport var text___5J9E9 = \"PlasmicDisclaimer-module--text___5J9E9--jsfx2\";\nexport var text___6LxXh = \"PlasmicDisclaimer-module--text___6LxXh--v+A2B\";\nexport var text__cfnAz = \"PlasmicDisclaimer-module--text__cfnAz--S-pNh\";\nexport var text__hQfAx = \"PlasmicDisclaimer-module--text__hQfAx--c3Eb+\";\nexport var text__hyxnw = \"PlasmicDisclaimer-module--text__hyxnw--UiH4n\";\nexport var text__iK9D = \"PlasmicDisclaimer-module--text__iK9D--80LRx\";\nexport var text__iuf3I = \"PlasmicDisclaimer-module--text__iuf3I--E7b41\";\nexport var text__kXsSw = \"PlasmicDisclaimer-module--text__kXsSw--KmFnd\";\nexport var text__l27Eo = \"PlasmicDisclaimer-module--text__l27Eo--7FXel\";\nexport var text__lb8L = \"PlasmicDisclaimer-module--text__lb8L---6E16\";\nexport var text__ma8H3 = \"PlasmicDisclaimer-module--text__ma8H3--1aTRt\";\nexport var text__rR1Xg = \"PlasmicDisclaimer-module--text__rR1Xg--rm44v\";\nexport var text__rUmtZ = \"PlasmicDisclaimer-module--text__rUmtZ--kMNWG\";\nexport var text__riZe0 = \"PlasmicDisclaimer-module--text__riZe0--715Is\";\nexport var text__sRSoV = \"PlasmicDisclaimer-module--text__sRSoV--W7Lf8\";\nexport var text__vAwzb = \"PlasmicDisclaimer-module--text__vAwzb--AcA5o\";\nexport var text__vYgs = \"PlasmicDisclaimer-module--text__vYgs--bDKvE\";\nexport var text__vosrt = \"PlasmicDisclaimer-module--text__vosrt--1o8AJ\";\nexport var text__wM8I8 = \"PlasmicDisclaimer-module--text__wM8I8--kIWJy\";\nexport var text__yG3ZZ = \"PlasmicDisclaimer-module--text__yG3ZZ--8nF2D\";\nexport var text__yig02 = \"PlasmicDisclaimer-module--text__yig02--BelWE\";\nexport var text__ympMn = \"PlasmicDisclaimer-module--text__ympMn--RvQjE\";\nexport var text__zm8Ay = \"PlasmicDisclaimer-module--text__zm8Ay--X-lbL\";","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicDisclaimer } from \"../components/plasmic/rva_new/PlasmicDisclaimer\"\n\nfunction Disclaimer() {\n  // Use PlasmicDisclaimer to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicDisclaimer are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicDisclaimer is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return <PlasmicDisclaimer />\n}\n\nexport default Disclaimer\n"],"names":["props","className","style","title","restProps","xmlns","width","height","viewBox","classNames","fill","d","endIconContainer","endIconContainershowEndIcon","input","input___focusVisibleWithin","inputcolor_dark","inputisDisabled","root","root___focusVisibleWithin","rootcolor_dark","slotTargetEndIconcolor_dark","slotTargetEndIconshowEndIcon","slotTargetStartIconcolor_dark","slotTargetStartIconshowStartIcon","startIconContainer","startIconContainer___focusVisibleWithin","startIconContainershowStartIcon","svg__v4Tdi","svg__vlAun","stroke","strokeLinecap","strokeLinejoin","strokeWidth","PlasmicTextInput__VariantProps","Array","PlasmicTextInput__ArgProps","PlasmicDescendants","makeNodeComponent","nodeName","func","React","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","forNode","args","ph","Object","assign","placeholder","useTrigger","isTextInput","isRootFocusVisibleWithin","triggerRootFocusVisibleWithinProps","triggers","focusVisibleWithin_root","projectcss","sty","hasVariant","p","defaultContents","role","value","startIcon","disabled","undefined","required","type","endIcon","PlasmicTextInput__RenderFunc","displayName","PlasmicTextInput","internalVariantProps","internalArgProps","useBehavior","ref","pp","showStartIconVariant","group","variant","showEndIconVariant","isDisabledVariant","startIconSlot","endIconSlot","TextInput_","plasmicProps","TextInput","__plumeType","cx","cy","r","version","xmlSpace","fillRule","opacity","x","y","PlasmicDisclaimer__VariantProps","PlasmicDisclaimer__ArgProps","_3","textInput","httpsstudioplasmicapp","globalVariants","ensureGlobalVariants","screen","useScreenVariantsxe8Uhzv7PeLJgW","as","hasGap","component","Link","platform","href","Button","showEndIcon","PlasmicIconType","Icon3Icon","Icon28Icon","PlasmicDisclaimer__RenderFunc","PlasmicDisclaimer"],"sourceRoot":""}