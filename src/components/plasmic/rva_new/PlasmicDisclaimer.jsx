// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: sSe8AoDiAW5DkmycE76RKb
// Component: iToDAg1nmG
import * as React from "react"
import { Link } from "gatsby"
import * as p from "@plasmicapp/react-web"
import * as ph from "@plasmicapp/host"
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"
import TextInput from "../../TextInput" // plasmic-import: 8d2n861ybhR/component
import Button from "../../Button" // plasmic-import: AI4dzLfJKZOBy/component
import { useScreenVariants as useScreenVariantsxe8Uhzv7PeLJgW } from "./PlasmicGlobalVariant__Screen" // plasmic-import: XE8Uhzv7PeLJgW/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css"
import * as projectcss from "./plasmic_rva_new.module.css" // plasmic-import: sSe8AoDiAW5DkmycE76RKb/projectcss
import * as sty from "./PlasmicDisclaimer.module.css" // plasmic-import: iToDAg1nmG/css
import IconIcon from "./icons/PlasmicIcon__Icon" // plasmic-import: A8bnkBjJqVCwJ9/icon
import _2561381SearchIconsvgIcon from "./icons/PlasmicIcon___2561381SearchIconsvg" // plasmic-import: YathwNlp-5W/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2" // plasmic-import: NfXNpzmLKjwmgA/icon
import ShoppingBag3049SvgIcon from "./icons/PlasmicIcon__ShoppingBag3049Svg" // plasmic-import: bzTgi1Nyqh7/icon
import SearchsvgIcon from "./icons/PlasmicIcon__Searchsvg" // plasmic-import: hyFJbEzzzDh/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg" // plasmic-import: KZLSx5GjmP3wFG/icon
import AngleRightsvgIcon from "./icons/PlasmicIcon__AngleRightsvg" // plasmic-import: imr2ad6PsGm/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3" // plasmic-import: ka4TjgsfLp_JAY/icon
import Icon28Icon from "./icons/PlasmicIcon__Icon28" // plasmic-import: zIRvI6W2zd5sf7/icon

export const PlasmicDisclaimer__VariantProps = new Array()

export const PlasmicDisclaimer__ArgProps = new Array()

function PlasmicDisclaimer__RenderFunc(props) {
  const { variants, overrides, forNode } = props
  const $ctx = ph.useDataEnv?.() || {}
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])
  const $props = args
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsxe8Uhzv7PeLJgW(),
  })

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__uafmR)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___4Zo8)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xlLyc)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zm8Ay
                  )}
                >
                  {"Get 55% off Lorem Ipsum enough lorem discount"}
                </div>
              </p.Stack>

              {false ? (
                <div className={classNames(projectcss.all, sty.freeBox__cdIj8)}>
                  <button
                    className={classNames(
                      projectcss.all,
                      projectcss.button,
                      projectcss.__wab_text,
                      sty.button__fJzvP
                    )}
                  >
                    {"Sign up"}
                  </button>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__epPl9
                    )}
                    component={Link}
                    platform={"gatsby"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__n3AG9)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cfnAz
                      )}
                    >
                      {"Log in"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__trG4C)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </div>
              ) : null}
            </p.Stack>
          </p.Stack>

          <div className={classNames(projectcss.all, sty.freeBox__yj9UD)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__mJmdF)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__oju2H)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__iK9D
                  )}
                >
                  {"Logo"}
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__sGkJs)}
                >
                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__qMZqC
                    )}
                    component={Link}
                    platform={"gatsby"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__hcpvg)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vAwzb
                      )}
                    >
                      {"shop"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__chDgB)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__xLcLa
                    )}
                    component={Link}
                    platform={"gatsby"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__fzyBo)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__riZe0
                      )}
                    >
                      {"The Academy"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg___0AGt9)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__g6B1Z
                    )}
                    component={Link}
                    platform={"gatsby"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__yksQ8)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__l27Eo
                      )}
                    >
                      {"About"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__daHcr)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__ifX8V
                    )}
                    component={Link}
                    platform={"gatsby"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__oq1Oo)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vYgs
                      )}
                    >
                      {"Help"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__nPjP)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__m9Or4)}
                >
                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__vZdZo
                    )}
                    component={Link}
                    platform={"gatsby"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__aeah)}
                        role={"img"}
                      />
                    ) : null}

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__m5Wy1)}
                    >
                      <_2561381SearchIconsvgIcon
                        className={classNames(projectcss.all, sty.svg__jMv1T)}
                        role={"img"}
                      />

                      <Icon2Icon
                        className={classNames(projectcss.all, sty.svg___3CuFl)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__smNdn
                        )}
                      >
                        <ShoppingBag3049SvgIcon
                          className={classNames(projectcss.all, sty.svg__xAsoL)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__pN8Jm
                          )}
                        />
                      </div>
                    </p.Stack>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__oxdvk)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </p.Stack>

                {false ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__umqC1)}
                  >
                    <button
                      className={classNames(
                        projectcss.all,
                        projectcss.button,
                        projectcss.__wab_text,
                        sty.button__t7Nha
                      )}
                    >
                      {"Sign up"}
                    </button>

                    <p.Stack
                      as={p.PlasmicLink}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__ewkEw
                      )}
                      component={Link}
                      platform={"gatsby"}
                    >
                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg___8NvT)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hyxnw
                        )}
                      >
                        {"Log in"}
                      </div>

                      {false ? (
                        <IconIcon
                          className={classNames(projectcss.all, sty.svg__ntesa)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                  </div>
                ) : null}
              </p.Stack>
            </p.Stack>
          </div>

          {true ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__q9Z96)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__jP1R)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__wWTvK)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__zkysG)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__cj73B)}
                    >
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2__mNbv
                        )}
                      >
                        {"Lorem Terms & Conditions"}
                      </h2>
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___7FrLd)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__rokLb)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__tsnHs
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__vnIEz
                          )}
                        >
                          {"Overview"}
                        </h2>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ma8H3
                          )}
                        >
                          {
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions."
                          }
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__m75Yo
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__dy7T6
                          )}
                        >
                          {"Section 1 — Online Store Terms"}
                        </h2>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ympMn
                          )}
                        >
                          {
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions."
                          }
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__h4Rh
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__mMmoy
                          )}
                        >
                          {"Section 2 — General Conditions"}
                        </h2>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rR1Xg
                          )}
                        >
                          {
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions."
                          }
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__wUWg6
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__zyDa3
                          )}
                        >
                          {
                            "Section 3 — Accuracy, completeness and timeliness of information"
                          }
                        </h2>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vosrt
                          )}
                        >
                          {
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions."
                          }
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___6BoRa
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__eLzzy
                          )}
                        >
                          {"Section 4 — Modifications "}
                        </h2>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___6LxXh
                          )}
                        >
                          {
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world,\n\n with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions."
                          }
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__xqwdF
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__txApm
                          )}
                        >
                          {"Section 5 — Products or Services (if applicable)"}
                        </h2>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yig02
                          )}
                        >
                          {
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world,\n with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions."
                          }
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__bvCqv
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__vGwxZ
                          )}
                        >
                          {"Section 6 — Accuracy of Billing"}
                        </h2>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__sRSoV
                          )}
                        >
                          {
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world,\n with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions."
                          }
                        </div>
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__byLgj
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__b099
                          )}
                        >
                          {"Section 7 — Optional "}
                        </h2>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__yG3ZZ
                          )}
                        >
                          {
                            "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world, with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions.\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed We ship to most countries in the world,\n with the exception of countries where we are prohibited from shipping based on international agreements and shipping restrictions."
                          }
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___2DLwu)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__c9Sp1)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ms60X)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___73NOk)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wM8I8
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Contact us\n"
                      : "Contact us\n"}
                  </div>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__fsrkz
                    )}
                    component={Link}
                    platform={"gatsby"}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "(555) 555-5555"
                      : "(555) 555-5555"}
                  </p.PlasmicLink>

                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link___4Ui1U
                    )}
                    component={Link}
                    platform={"gatsby"}
                  >
                    {"support@example.com"}
                  </p.PlasmicLink>
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__caDwJ)}
              >
                <p.PlasmicLink
                  data-plasmic-name={"_3"}
                  data-plasmic-override={overrides._3}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty._3
                  )}
                  component={Link}
                  href={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "#"
                      : undefined
                  }
                  platform={"gatsby"}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Shop"
                    : "Shop"}
                </p.PlasmicLink>

                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__hJvPr
                  )}
                  component={Link}
                  platform={"gatsby"}
                >
                  {"The Academy"}
                </p.PlasmicLink>

                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__spsyB
                  )}
                  component={Link}
                  platform={"gatsby"}
                >
                  {"About"}
                </p.PlasmicLink>

                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__tGz8V
                  )}
                  component={Link}
                  platform={"gatsby"}
                >
                  {"Help"}
                </p.PlasmicLink>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___9Ke1X)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5J9E9
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Email newsletter"
                    : "Email newsletter"}
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__zRldn)}>
                  <TextInput
                    data-plasmic-name={"textInput"}
                    data-plasmic-override={overrides.textInput}
                    className={classNames("__wab_instance", sty.textInput)}
                    endIcon={
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__uPmfV
                        )}
                        endIcon={
                          <ChecksvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__r48Jn
                            )}
                            role={"img"}
                          />
                        }
                        startIcon={
                          <ChecksvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ecQBq
                            )}
                            role={"img"}
                          />
                        }
                      >
                        <AngleRightsvgIcon
                          className={classNames(projectcss.all, sty.svg__ac9Qe)}
                          role={"img"}
                        />
                      </Button>
                    }
                    placeholder={"E-mail"}
                    showEndIcon={true}
                    startIcon={
                      <SearchsvgIcon
                        className={classNames(projectcss.all, sty.svg___2Mwk)}
                        role={"img"}
                      />
                    }
                  />
                </div>
              </p.Stack>

              {(
                hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
              ) ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__uXVx)}
                >
                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__rv4T6
                    )}
                    component={Link}
                    platform={"gatsby"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__z1DTc)}
                        role={"img"}
                      />
                    ) : null}

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ocf0B)}
                    >
                      <p.PlasmicIcon
                        PlasmicIconType={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? Icon3Icon
                            : Icon3Icon
                        }
                        className={classNames(projectcss.all, sty.svg___2KL4T)}
                        role={"img"}
                      />

                      <Icon2Icon
                        className={classNames(projectcss.all, sty.svg__gpj8K)}
                        role={"img"}
                      />

                      <p.PlasmicIcon
                        PlasmicIconType={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? Icon28Icon
                            : Icon28Icon
                        }
                        className={classNames(projectcss.all, sty.svg__icKgQ)}
                        role={"img"}
                      />
                    </p.Stack>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__s0Xi4)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </p.Stack>
              ) : null}
              {false ? (
                <div className={classNames(projectcss.all, sty.freeBox__uOltq)}>
                  <button
                    className={classNames(
                      projectcss.all,
                      projectcss.button,
                      projectcss.__wab_text,
                      sty.button__dfIkC
                    )}
                  >
                    {"Sign up"}
                  </button>

                  <p.Stack
                    as={p.PlasmicLink}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___0WxQg
                    )}
                    component={Link}
                    platform={"gatsby"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__gbdQ)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rUmtZ
                      )}
                    >
                      {"Log in"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__nb6Gh)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </div>
              ) : null}
            </p.Stack>

            <div className={classNames(projectcss.all, sty.freeBox__lyrci)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__qzIS)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__liTqO)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__hfhS7)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lb8L
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "(c) Company. All rights reserved. This site proudly built with"
                        : "© Company. All rights reserved. This site proudly built with"}
                    </div>

                    <p.PlasmicLink
                      data-plasmic-name={"httpsstudioplasmicapp"}
                      data-plasmic-override={overrides.httpsstudioplasmicapp}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.httpsstudioplasmicapp
                      )}
                      component={Link}
                      platform={"gatsby"}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? " Plasmic"
                        : " Plasmic"}
                    </p.PlasmicLink>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ssaYf)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__wogL)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___78LDo
                      )}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hsMxv
                        )}
                      >
                        <p.Stack
                          as={p.PlasmicLink}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__td4Q5
                          )}
                          component={Link}
                          platform={"gatsby"}
                        >
                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__gR4Rl
                              )}
                              role={"img"}
                            />
                          ) : null}

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__kXsSw
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "shop"
                              : "Shipping & Returns"}
                          </div>

                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__dvhHj
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </p.Stack>

                        <p.Stack
                          as={p.PlasmicLink}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link___67NW
                          )}
                          component={Link}
                          platform={"gatsby"}
                        >
                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__k59H2
                              )}
                              role={"img"}
                            />
                          ) : null}
                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__sm0Ss
                              )}
                              role={"img"}
                            />
                          ) : null}

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hQfAx
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "Privacy policy"
                              : "Privacy policy"}
                          </div>
                        </p.Stack>

                        <p.Stack
                          as={p.PlasmicLink}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            sty.link__ql8Mk
                          )}
                          component={Link}
                          platform={"gatsby"}
                        >
                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__u38B6
                              )}
                              role={"img"}
                            />
                          ) : null}

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__iuf3I
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "Terms & Conditions"
                              : "Terms & Conditions"}
                          </div>

                          {false ? (
                            <IconIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__kyI
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </p.Stack>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </div>
          </p.Stack>
        </p.Stack>
      </div>
    </React.Fragment>
  )
}

const PlasmicDescendants = {
  root: ["root", "_3", "textInput", "textbox", "httpsstudioplasmicapp"],
  _3: ["_3"],
  textInput: ["textInput", "textbox"],
  httpsstudioplasmicapp: ["httpsstudioplasmicapp"],
}

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicDisclaimer__ArgProps,
          internalVariantPropNames: PlasmicDisclaimer__VariantProps,
        }),

      [props, nodeName]
    )

    return PlasmicDisclaimer__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicDisclaimer"
  } else {
    func.displayName = `PlasmicDisclaimer.${nodeName}`
  }
  return func
}

export const PlasmicDisclaimer = Object.assign(
  // Top-level PlasmicDisclaimer renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    _3: makeNodeComponent("_3"),
    textInput: makeNodeComponent("textInput"),
    httpsstudioplasmicapp: makeNodeComponent("httpsstudioplasmicapp"),
    // Metadata about props expected for PlasmicDisclaimer
    internalVariantProps: PlasmicDisclaimer__VariantProps,
    internalArgProps: PlasmicDisclaimer__ArgProps,
  }
)

export default PlasmicDisclaimer
/* prettier-ignore-end */
