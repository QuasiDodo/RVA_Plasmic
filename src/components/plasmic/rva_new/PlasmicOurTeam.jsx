// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: sSe8AoDiAW5DkmycE76RKb
// Component: gwfbOx-ppiR7yy
import * as React from "react"
import * as p from "@plasmicapp/react-web"
import * as ph from "@plasmicapp/host"
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"
import Header from "../../Header" // plasmic-import: rlLZVswJyeOUp/component
import CaseStudiesWraper from "../../CaseStudiesWraper" // plasmic-import: 8-mbWFXVtuiyeU/component
import Button from "../../Button" // plasmic-import: AI4dzLfJKZOBy/component
import CtaBottom from "../../CtaBottom" // plasmic-import: aZrFk0trqYG6jU/component
import Footer from "../../Footer" // plasmic-import: aKMJC5Su_PgNb/component
import { useScreenVariants as useScreenVariantsxe8Uhzv7PeLJgW } from "./PlasmicGlobalVariant__Screen" // plasmic-import: XE8Uhzv7PeLJgW/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css"
import * as projectcss from "./plasmic_rva_new.module.css" // plasmic-import: sSe8AoDiAW5DkmycE76RKb/projectcss
import * as sty from "./PlasmicOurTeam.module.css" // plasmic-import: gwfbOx-ppiR7yy/css
import az003JpgQ4UCjLmQ from "./images/az003Jpg.jpeg" // plasmic-import: q4U_CJLmQ/picture
import girls18285391920JpgZd237MRhxc0C7B from "./images/girls18285391920Jpg.jpeg" // plasmic-import: zd237mRhxc0c7B/picture

export const PlasmicOurTeam__VariantProps = new Array()

export const PlasmicOurTeam__ArgProps = new Array()

function PlasmicOurTeam__RenderFunc(props) {
  const { variants, overrides, forNode } = props
  const $ctx = ph.useDataEnv?.() || {}
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])
  const $props = args
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsxe8Uhzv7PeLJgW(),
  })

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div
            data-plasmic-name={"pageBanerSection"}
            data-plasmic-override={overrides.pageBanerSection}
            className={classNames(projectcss.all, sty.pageBanerSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__bV9Gt)}>
              <h1
                data-plasmic-name={"h1"}
                data-plasmic-override={overrides.h1}
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1
                )}
              >
                {"Our teAM"}
              </h1>
            </div>
          </div>

          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <div className={classNames(projectcss.all, sty.freeBox___0Sfqp)}>
              <div className={classNames(projectcss.all, sty.freeBox__bO2In)}>
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ydasX)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"columns"}
                      data-plasmic-override={overrides.columns}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.columns)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__dtBhw
                        )}
                      >
                        <CaseStudiesWraper
                          className={classNames(
                            "__wab_instance",
                            sty.caseStudiesWraper___5UBwq
                          )}
                          slot={
                            <React.Fragment>
                              <h3
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h3,
                                  projectcss.__wab_text,
                                  sty.h3__kf0As
                                )}
                              >
                                {"Andrea Zannier"}
                              </h3>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__uuR8F
                                )}
                              >
                                {
                                  "Andrea has worked on transformational projects with clients based in Australia, Asia-Pacific and Europe"
                                }
                              </div>

                              <Button
                                className={classNames(
                                  "__wab_instance",
                                  sty.button__idPs2
                                )}
                                color={"blackCoffee"}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__hs3Ik
                                  )}
                                >
                                  {"Read More"}
                                </div>
                              </Button>
                            </React.Fragment>
                          }
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img___0CrgT)}
                            displayHeight={"auto"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"615px"}
                            loading={"lazy"}
                            src={{
                              src: az003JpgQ4UCjLmQ,
                              fullWidth: 4178,
                              fullHeight: 4178,
                              aspectRatio: undefined,
                            }}
                          />
                        </CaseStudiesWraper>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__tW6S3
                        )}
                      >
                        <CaseStudiesWraper
                          className={classNames(
                            "__wab_instance",
                            sty.caseStudiesWraper__eVul
                          )}
                          slot={
                            <React.Fragment>
                              <h3
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h3,
                                  projectcss.__wab_text,
                                  sty.h3__qpRof
                                )}
                              >
                                {"Thileepan Kailasanathan - TK"}
                              </h3>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__k1RZx
                                )}
                              >
                                {
                                  "TK is a multi-skilled finance executive with global experience in Risk, Analytics and Operations"
                                }
                              </div>

                              <Button
                                className={classNames(
                                  "__wab_instance",
                                  sty.button__sBrn
                                )}
                                color={"blackCoffee"}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__xvCxz
                                  )}
                                >
                                  {"Read More"}
                                </div>
                              </Button>
                            </React.Fragment>
                          }
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__uu5Jg)}
                            displayHeight={"auto"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"auto"}
                            loading={"lazy"}
                            src={{
                              src: girls18285391920JpgZd237MRhxc0C7B,
                              fullWidth: 1920,
                              fullHeight: 1280,
                              aspectRatio: undefined,
                            }}
                          />
                        </CaseStudiesWraper>
                      </div>
                    </p.Stack>
                  </p.Stack>
                ) : null}
              </div>
            </div>
          </section>

          <CtaBottom
            data-plasmic-name={"ctaBottom"}
            data-plasmic-override={overrides.ctaBottom}
            className={classNames("__wab_instance", sty.ctaBottom)}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  )
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "pageBanerSection",
    "h1",
    "section",
    "columns",
    "ctaBottom",
    "footer",
  ],

  header: ["header"],
  pageBanerSection: ["pageBanerSection", "h1"],
  h1: ["h1"],
  section: ["section", "columns"],
  columns: ["columns"],
  ctaBottom: ["ctaBottom"],
  footer: ["footer"],
}

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicOurTeam__ArgProps,
          internalVariantPropNames: PlasmicOurTeam__VariantProps,
        }),

      [props, nodeName]
    )

    return PlasmicOurTeam__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicOurTeam"
  } else {
    func.displayName = `PlasmicOurTeam.${nodeName}`
  }
  return func
}

export const PlasmicOurTeam = Object.assign(
  // Top-level PlasmicOurTeam renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    pageBanerSection: makeNodeComponent("pageBanerSection"),
    h1: makeNodeComponent("h1"),
    section: makeNodeComponent("section"),
    columns: makeNodeComponent("columns"),
    ctaBottom: makeNodeComponent("ctaBottom"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicOurTeam
    internalVariantProps: PlasmicOurTeam__VariantProps,
    internalArgProps: PlasmicOurTeam__ArgProps,
  }
)

export default PlasmicOurTeam
/* prettier-ignore-end */
