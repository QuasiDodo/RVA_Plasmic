{"version":3,"file":"component---src-pages-our-team-jsx-811b4e7ba364dee2e2d0.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicCaseStudiesWraper.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicCaseStudiesWraper.module.css","webpack://gatsby-starter-default/./src/components/CaseStudiesWraper.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicCtaBottom.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicCtaBottom.module.css","webpack://gatsby-starter-default/./src/components/CtaBottom.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/images/az003Jpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/images/az006Jpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicOurTeam.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicOurTeam.module.css","webpack://gatsby-starter-default/./src/pages/OurTeam.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/images/girls18285391920Jpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/images/people31046351920Jpg.jpeg"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: sSe8AoDiAW5DkmycE76RKb\n// Component: 8-mbWFXVtuiyeU\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport Button from \"../../Button\" // plasmic-import: AI4dzLfJKZOBy/component\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_rva_new.module.css\" // plasmic-import: sSe8AoDiAW5DkmycE76RKb/projectcss\nimport * as sty from \"./PlasmicCaseStudiesWraper.module.css\" // plasmic-import: 8-mbWFXVtuiyeU/css\nimport people31046351920JpgXh7Bar7SyhKi8G from \"./images/people31046351920Jpg.jpeg\" // plasmic-import: Xh7Bar7SyhKI8G/picture\n\nexport const PlasmicCaseStudiesWraper__VariantProps = new Array()\n\nexport const PlasmicCaseStudiesWraper__ArgProps = new Array(\"children\", \"slot\")\n\nfunction PlasmicCaseStudiesWraper__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  return (\n    <p.PlasmicLink\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.a,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root\n      )}\n      component={Link}\n      href={\"/story\"}\n      platform={\"gatsby\"}\n    >\n      {p.renderPlasmicSlot({\n        defaultContents: (\n          <p.PlasmicImg\n            alt={\"\"}\n            className={classNames(sty.img__wc6BZ)}\n            displayHeight={\"auto\"}\n            displayMaxHeight={\"none\"}\n            displayMaxWidth={\"100%\"}\n            displayMinHeight={\"0\"}\n            displayMinWidth={\"0\"}\n            displayWidth={\"auto\"}\n            loading={\"lazy\"}\n            src={{\n              src: people31046351920JpgXh7Bar7SyhKi8G,\n              fullWidth: 1920,\n              fullHeight: 1281,\n              aspectRatio: undefined,\n            }}\n          />\n        ),\n\n        value: args.children,\n      })}\n\n      <p.Stack\n        as={\"div\"}\n        data-plasmic-name={\"freeBox\"}\n        data-plasmic-override={overrides.freeBox}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.freeBox)}\n      >\n        {p.renderPlasmicSlot({\n          defaultContents: (\n            <React.Fragment>\n              <h3\n                className={classNames(\n                  projectcss.all,\n                  projectcss.h3,\n                  projectcss.__wab_text,\n                  sty.h3__m1ImN\n                )}\n              >\n                {\"Case Studies Lorem Heading \"}\n              </h3>\n\n              <div\n                className={classNames(\n                  projectcss.all,\n                  projectcss.__wab_text,\n                  sty.text__hpj61\n                )}\n              >\n                {\n                  \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ....\"\n                }\n              </div>\n\n              <Button\n                className={classNames(\"__wab_instance\", sty.button__w9Jvy)}\n                color={\"blackCoffee\"}\n              >\n                <div\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.__wab_text,\n                    sty.text___2EiQq\n                  )}\n                >\n                  {\"Read More\"}\n                </div>\n              </Button>\n            </React.Fragment>\n          ),\n\n          value: args.slot,\n        })}\n      </p.Stack>\n    </p.PlasmicLink>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"freeBox\"],\n  freeBox: [\"freeBox\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicCaseStudiesWraper__ArgProps,\n          internalVariantPropNames: PlasmicCaseStudiesWraper__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicCaseStudiesWraper__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicCaseStudiesWraper\"\n  } else {\n    func.displayName = `PlasmicCaseStudiesWraper.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicCaseStudiesWraper = Object.assign(\n  // Top-level PlasmicCaseStudiesWraper renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    freeBox: makeNodeComponent(\"freeBox\"),\n    // Metadata about props expected for PlasmicCaseStudiesWraper\n    internalVariantProps: PlasmicCaseStudiesWraper__VariantProps,\n    internalArgProps: PlasmicCaseStudiesWraper__ArgProps,\n  }\n)\n\nexport default PlasmicCaseStudiesWraper\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var __wab_imgSpacer = \"PlasmicCaseStudiesWraper-module--__wab_img-spacer--cLn+D\";\nexport var button__w9Jvy = \"PlasmicCaseStudiesWraper-module--button__w9Jvy--yEplo\";\nexport var freeBox = \"PlasmicCaseStudiesWraper-module--freeBox--BIiR-\";\nexport var h3__m1ImN = \"PlasmicCaseStudiesWraper-module--h3__m1ImN--MljoL\";\nexport var img__wc6BZ = \"PlasmicCaseStudiesWraper-module--img__wc6BZ--oIK7I\";\nexport var root = \"PlasmicCaseStudiesWraper-module--root--+rojt\";\nexport var svg__pbKr = \"PlasmicCaseStudiesWraper-module--svg__pbKr--zSVPW\";\nexport var svg__xFghf = \"PlasmicCaseStudiesWraper-module--svg__xFghf--voeFo\";\nexport var text___2EiQq = \"PlasmicCaseStudiesWraper-module--text___2EiQq--ETdj3\";\nexport var text__hpj61 = \"PlasmicCaseStudiesWraper-module--text__hpj61--xcd6u\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicCaseStudiesWraper } from \"./plasmic/rva_new/PlasmicCaseStudiesWraper\"\n\nfunction CaseStudiesWraper_(props, ref) {\n  // Use PlasmicCaseStudiesWraper to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicCaseStudiesWraper are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all CaseStudiesWraperProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicCaseStudiesWraper root={{ ref }} {...props} />\n}\n\nconst CaseStudiesWraper = React.forwardRef(CaseStudiesWraper_)\n\nexport default CaseStudiesWraper\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: sSe8AoDiAW5DkmycE76RKb\n// Component: aZrFk0trqYG6jU\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport Button from \"../../Button\" // plasmic-import: AI4dzLfJKZOBy/component\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_rva_new.module.css\" // plasmic-import: sSe8AoDiAW5DkmycE76RKb/projectcss\nimport * as sty from \"./PlasmicCtaBottom.module.css\" // plasmic-import: aZrFk0trqYG6jU/css\n\nexport const PlasmicCtaBottom__VariantProps = new Array()\n\nexport const PlasmicCtaBottom__ArgProps = new Array()\n\nfunction PlasmicCtaBottom__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <p.Stack\n        as={\"div\"}\n        data-plasmic-name={\"container\"}\n        data-plasmic-override={overrides.container}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.container)}\n      >\n        <h2\n          data-plasmic-name={\"h2\"}\n          data-plasmic-override={overrides.h2}\n          className={classNames(\n            projectcss.all,\n            projectcss.h2,\n            projectcss.__wab_text,\n            sty.h2\n          )}\n        >\n          {\"Contact us\"}\n        </h2>\n\n        <Button\n          data-plasmic-name={\"button\"}\n          data-plasmic-override={overrides.button}\n          className={classNames(\"__wab_instance\", sty.button)}\n          color={\"blackCoffee\"}\n        >\n          {\"Get In Touch\"}\n        </Button>\n      </p.Stack>\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"container\", \"h2\", \"button\"],\n  container: [\"container\", \"h2\", \"button\"],\n  h2: [\"h2\"],\n  button: [\"button\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicCtaBottom__ArgProps,\n          internalVariantPropNames: PlasmicCtaBottom__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicCtaBottom__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicCtaBottom\"\n  } else {\n    func.displayName = `PlasmicCtaBottom.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicCtaBottom = Object.assign(\n  // Top-level PlasmicCtaBottom renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    container: makeNodeComponent(\"container\"),\n    h2: makeNodeComponent(\"h2\"),\n    button: makeNodeComponent(\"button\"),\n    // Metadata about props expected for PlasmicCtaBottom\n    internalVariantProps: PlasmicCtaBottom__VariantProps,\n    internalArgProps: PlasmicCtaBottom__ArgProps,\n  }\n)\n\nexport default PlasmicCtaBottom\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var button = \"PlasmicCtaBottom-module--button--yvbv7\";\nexport var container = \"PlasmicCtaBottom-module--container--IEZoT\";\nexport var h2 = \"PlasmicCtaBottom-module--h2--HIbGy\";\nexport var root = \"PlasmicCtaBottom-module--root--BaEkG\";\nexport var svg__pyKfL = \"PlasmicCtaBottom-module--svg__pyKfL--ecrFT\";\nexport var svg__sr3S = \"PlasmicCtaBottom-module--svg__sr3S--8N2Tv\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicCtaBottom } from \"./plasmic/rva_new/PlasmicCtaBottom\"\n\nfunction CtaBottom_(props, ref) {\n  // Use PlasmicCtaBottom to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicCtaBottom are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all CtaBottomProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicCtaBottom root={{ ref }} {...props} />\n}\n\nconst CtaBottom = React.forwardRef(CtaBottom_)\n\nexport default CtaBottom\n","export default __webpack_public_path__ + \"static/az003Jpg-b57cc3883188d64c6d7f4c17c49ef822.jpeg\";","export default __webpack_public_path__ + \"static/az006Jpg-604de41a0909897d8f80fc4334c123e2.jpeg\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: sSe8AoDiAW5DkmycE76RKb\n// Component: gwfbOx-ppiR7yy\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Header from \"../../Header\" // plasmic-import: rlLZVswJyeOUp/component\nimport CaseStudiesWraper from \"../../CaseStudiesWraper\" // plasmic-import: 8-mbWFXVtuiyeU/component\nimport Button from \"../../Button\" // plasmic-import: AI4dzLfJKZOBy/component\nimport CtaBottom from \"../../CtaBottom\" // plasmic-import: aZrFk0trqYG6jU/component\nimport Footer from \"../../Footer\" // plasmic-import: aKMJC5Su_PgNb/component\nimport { useScreenVariants as useScreenVariantsxe8Uhzv7PeLJgW } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: XE8Uhzv7PeLJgW/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_rva_new.module.css\" // plasmic-import: sSe8AoDiAW5DkmycE76RKb/projectcss\nimport * as sty from \"./PlasmicOurTeam.module.css\" // plasmic-import: gwfbOx-ppiR7yy/css\nimport az003JpgQ4UCjLmQ from \"./images/az003Jpg.jpeg\" // plasmic-import: q4U_CJLmQ/picture\nimport girls18285391920JpgZd237MRhxc0C7B from \"./images/girls18285391920Jpg.jpeg\" // plasmic-import: zd237mRhxc0c7B/picture\nimport az006JpgWpj3VfTqz from \"./images/az006Jpg.jpeg\" // plasmic-import: Wpj3VfTQZ/picture\n\nexport const PlasmicOurTeam__VariantProps = new Array()\n\nexport const PlasmicOurTeam__ArgProps = new Array()\n\nfunction PlasmicOurTeam__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantsxe8Uhzv7PeLJgW(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        <p.Stack\n          as={\"div\"}\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          hasGap={true}\n          className={classNames(\n            projectcss.all,\n            projectcss.root_reset,\n            projectcss.plasmic_default_styles,\n            projectcss.plasmic_mixins,\n            projectcss.plasmic_tokens,\n            sty.root\n          )}\n        >\n          <Header\n            data-plasmic-name={\"header\"}\n            data-plasmic-override={overrides.header}\n            className={classNames(\"__wab_instance\", sty.header)}\n          />\n\n          <div\n            data-plasmic-name={\"pageBanerSection\"}\n            data-plasmic-override={overrides.pageBanerSection}\n            className={classNames(projectcss.all, sty.pageBanerSection)}\n          >\n            <div className={classNames(projectcss.all, sty.freeBox__bV9Gt)}>\n              <h1\n                data-plasmic-name={\"h1\"}\n                data-plasmic-override={overrides.h1}\n                className={classNames(\n                  projectcss.all,\n                  projectcss.h1,\n                  projectcss.__wab_text,\n                  sty.h1\n                )}\n              >\n                {\"Our teAM\"}\n              </h1>\n            </div>\n          </div>\n\n          <section\n            data-plasmic-name={\"section\"}\n            data-plasmic-override={overrides.section}\n            className={classNames(projectcss.all, sty.section)}\n          >\n            <div className={classNames(projectcss.all, sty.freeBox___0Sfqp)}>\n              <div className={classNames(projectcss.all, sty.freeBox__bO2In)}>\n                {true ? (\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__ydasX)}\n                  >\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.columns__m5Ehw)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__dtBhw\n                        )}\n                      >\n                        <CaseStudiesWraper\n                          className={classNames(\n                            \"__wab_instance\",\n                            sty.caseStudiesWraper___5UBwq\n                          )}\n                          slot={\n                            <React.Fragment>\n                              <h3\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.h3,\n                                  projectcss.__wab_text,\n                                  sty.h3__kf0As\n                                )}\n                              >\n                                {\"Andrea Zannier\"}\n                              </h3>\n\n                              <div\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.__wab_text,\n                                  sty.text__uuR8F\n                                )}\n                              >\n                                {\n                                  \"Andrea has worked on transformational projects with clients based in Australia, Asia-Pacific and Europe\"\n                                }\n                              </div>\n\n                              <Button\n                                className={classNames(\n                                  \"__wab_instance\",\n                                  sty.button__idPs2\n                                )}\n                                color={\"blackCoffee\"}\n                              >\n                                <div\n                                  className={classNames(\n                                    projectcss.all,\n                                    projectcss.__wab_text,\n                                    sty.text__hs3Ik\n                                  )}\n                                >\n                                  {\"Read More\"}\n                                </div>\n                              </Button>\n                            </React.Fragment>\n                          }\n                        >\n                          <p.PlasmicImg\n                            alt={\"\"}\n                            className={classNames(sty.img___0CrgT)}\n                            displayHeight={\"auto\"}\n                            displayMaxHeight={\"none\"}\n                            displayMaxWidth={\"100%\"}\n                            displayMinHeight={\"0\"}\n                            displayMinWidth={\"0\"}\n                            displayWidth={\"615px\"}\n                            loading={\"lazy\"}\n                            src={{\n                              src: az003JpgQ4UCjLmQ,\n                              fullWidth: 4178,\n                              fullHeight: 4178,\n                              aspectRatio: undefined,\n                            }}\n                          />\n                        </CaseStudiesWraper>\n                      </div>\n\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__tW6S3\n                        )}\n                      >\n                        <CaseStudiesWraper\n                          className={classNames(\n                            \"__wab_instance\",\n                            sty.caseStudiesWraper__eVul\n                          )}\n                          slot={\n                            <React.Fragment>\n                              <h3\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.h3,\n                                  projectcss.__wab_text,\n                                  sty.h3__qpRof\n                                )}\n                              >\n                                {\"Thileepan Kailasanathan - TK\"}\n                              </h3>\n\n                              <div\n                                className={classNames(\n                                  projectcss.all,\n                                  projectcss.__wab_text,\n                                  sty.text__k1RZx\n                                )}\n                              >\n                                {\n                                  \"TK is a multi-skilled finance executive with global experience in Risk, Analytics and Operations\"\n                                }\n                              </div>\n\n                              <Button\n                                className={classNames(\n                                  \"__wab_instance\",\n                                  sty.button__sBrn\n                                )}\n                                color={\"blackCoffee\"}\n                              >\n                                <div\n                                  className={classNames(\n                                    projectcss.all,\n                                    projectcss.__wab_text,\n                                    sty.text__xvCxz\n                                  )}\n                                >\n                                  {\"Read More\"}\n                                </div>\n                              </Button>\n                            </React.Fragment>\n                          }\n                        >\n                          <p.PlasmicImg\n                            alt={\"\"}\n                            className={classNames(sty.img__uu5Jg)}\n                            displayHeight={\"auto\"}\n                            displayMaxHeight={\"none\"}\n                            displayMaxWidth={\"100%\"}\n                            displayMinHeight={\"0\"}\n                            displayMinWidth={\"0\"}\n                            displayWidth={\"auto\"}\n                            loading={\"lazy\"}\n                            src={{\n                              src: girls18285391920JpgZd237MRhxc0C7B,\n                              fullWidth: 1920,\n                              fullHeight: 1280,\n                              aspectRatio: undefined,\n                            }}\n                          />\n                        </CaseStudiesWraper>\n                      </div>\n                    </p.Stack>\n                  </p.Stack>\n                ) : null}\n              </div>\n            </div>\n          </section>\n\n          <div className={classNames(projectcss.all, sty.freeBox__k1Eu1)}>\n            <div className={classNames(projectcss.all, sty.columns___27Ih)}>\n              <div className={classNames(projectcss.all, sty.column__ntOp5)}>\n                <p.PlasmicImg\n                  alt={\"\"}\n                  className={classNames(sty.img___0Xcv)}\n                  displayHeight={\"auto\"}\n                  displayMaxHeight={\"none\"}\n                  displayMaxWidth={\"100%\"}\n                  displayMinHeight={\"0\"}\n                  displayMinWidth={\"0\"}\n                  displayWidth={\"auto\"}\n                  loading={\"lazy\"}\n                  src={{\n                    src: az006JpgWpj3VfTqz,\n                    fullWidth: 3907,\n                    fullHeight: 3907,\n                    aspectRatio: undefined,\n                  }}\n                />\n\n                <div\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.__wab_text,\n                    sty.text__v58OI\n                  )}\n                >\n                  {\"Andrea Zannier - Managing Director\"}\n                </div>\n              </div>\n\n              <div className={classNames(projectcss.all, sty.column___4GQfq)}>\n                <div\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.__wab_text,\n                    sty.text__nZkvu\n                  )}\n                >\n                  {\n                    \"Andrea has over 10 years of strategy consulting experience at partner level with major global consulting firms and extensive executive experience with top Australian and European financial institutions:\\n14 years in consulting: Oliver Wyman, McKinsey, BCG and Mastercard\\n8 years in line management: Macquarie Bank, Citibank and SmartGroup\\n2 years in M&A: launching and developing a M&A boutique in London\\n\\nAndrea is currently involved in a number of start-ups in fintech and bio-tech, and is a supporter of the Charlie Teo Foundation\\n\\nAndrea holds a MBA from The Kellogg Graduate School of Management and a degree in Industrial Economics and Strategy from Universita' Commerciale Luigi Bocconi\\n\"\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className={classNames(projectcss.all, sty.freeBox__s2Tgx)}>\n            <div className={classNames(projectcss.all, sty.columns__v2Iyf)}>\n              <div className={classNames(projectcss.all, sty.column__aDs3I)}>\n                <p.PlasmicImg\n                  alt={\"\"}\n                  className={classNames(sty.img__wxXn)}\n                  displayHeight={\"auto\"}\n                  displayMaxHeight={\"none\"}\n                  displayMaxWidth={\"100%\"}\n                  displayMinHeight={\"0\"}\n                  displayMinWidth={\"0\"}\n                  displayWidth={\"auto\"}\n                  loading={\"lazy\"}\n                />\n\n                <div\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.__wab_text,\n                    sty.text__nuTbe\n                  )}\n                >\n                  {\"Thileepan Kailasanathan - Senior Director\"}\n                </div>\n              </div>\n\n              <div className={classNames(projectcss.all, sty.column___9Vyr1)}>\n                <div\n                  className={classNames(\n                    projectcss.all,\n                    projectcss.__wab_text,\n                    sty.text__zXZuI\n                  )}\n                >\n                  {\n                    \"TK has worked on risk, strategy and operational projects with clients across the world, including Australia, India, South Korea, USA, Canada, Chile, South Africa, UK and ROI. His career encompasses line management and consulting across Risk, IT and Strategy:\\n16 years in risk line management, incl. as Global Head of Retail Risk: Macquarie Bank, Nedbank, Capital One\\n5 years in IT line management and consulting in South Africa: Telsaf Data, I-Net, M-Web\\n7 years in consulting globally: Monitor, and various boutique firms\\n\\nTK is currently involved in a number of start-ups in fintech, runs a successful retail business and provides consulting and “Virtual CRO” services to consumer and SME lenders\\n\\nTK holds MBA and Electronic Engineering degrees from University of Cape Town and is certified by the Global Association of Risk Professionals as a Financial Risk Manager (FRM). He has held various IT certifications, including Microsoft Certified Systems Engineer and a Diploma in Project Management.\\n\"\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <CtaBottom\n            data-plasmic-name={\"ctaBottom\"}\n            data-plasmic-override={overrides.ctaBottom}\n            className={classNames(\"__wab_instance\", sty.ctaBottom)}\n          />\n\n          <Footer\n            data-plasmic-name={\"footer\"}\n            data-plasmic-override={overrides.footer}\n            className={classNames(\"__wab_instance\", sty.footer)}\n          />\n        </p.Stack>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\n    \"root\",\n    \"header\",\n    \"pageBanerSection\",\n    \"h1\",\n    \"section\",\n    \"ctaBottom\",\n    \"footer\",\n  ],\n\n  header: [\"header\"],\n  pageBanerSection: [\"pageBanerSection\", \"h1\"],\n  h1: [\"h1\"],\n  section: [\"section\"],\n  ctaBottom: [\"ctaBottom\"],\n  footer: [\"footer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicOurTeam__ArgProps,\n          internalVariantPropNames: PlasmicOurTeam__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicOurTeam__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicOurTeam\"\n  } else {\n    func.displayName = `PlasmicOurTeam.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicOurTeam = Object.assign(\n  // Top-level PlasmicOurTeam renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    header: makeNodeComponent(\"header\"),\n    pageBanerSection: makeNodeComponent(\"pageBanerSection\"),\n    h1: makeNodeComponent(\"h1\"),\n    section: makeNodeComponent(\"section\"),\n    ctaBottom: makeNodeComponent(\"ctaBottom\"),\n    footer: makeNodeComponent(\"footer\"),\n    // Metadata about props expected for PlasmicOurTeam\n    internalVariantProps: PlasmicOurTeam__VariantProps,\n    internalArgProps: PlasmicOurTeam__ArgProps,\n  }\n)\n\nexport default PlasmicOurTeam\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var __wab_imgSpacer = \"PlasmicOurTeam-module--__wab_img-spacer--pt7gY\";\nexport var button__idPs2 = \"PlasmicOurTeam-module--button__idPs2--QNmmr\";\nexport var button__sBrn = \"PlasmicOurTeam-module--button__sBrn--G-49J\";\nexport var caseStudiesWraper___5UBwq = \"PlasmicOurTeam-module--caseStudiesWraper___5UBwq--xhk2V\";\nexport var caseStudiesWraper__eVul = \"PlasmicOurTeam-module--caseStudiesWraper__eVul--QVxER\";\nexport var column___4GQfq = \"PlasmicOurTeam-module--column___4GQfq--JMtug\";\nexport var column___9Vyr1 = \"PlasmicOurTeam-module--column___9Vyr1--6ccYy\";\nexport var column__aDs3I = \"PlasmicOurTeam-module--column__aDs3I--7J9hH\";\nexport var column__dtBhw = \"PlasmicOurTeam-module--column__dtBhw--LPiCw\";\nexport var column__ntOp5 = \"PlasmicOurTeam-module--column__ntOp5---XTvZ\";\nexport var column__tW6S3 = \"PlasmicOurTeam-module--column__tW6S3---GhEI\";\nexport var columns___27Ih = \"PlasmicOurTeam-module--columns___27Ih--sFqMu\";\nexport var columns__m5Ehw = \"PlasmicOurTeam-module--columns__m5Ehw--U1pXy\";\nexport var columns__v2Iyf = \"PlasmicOurTeam-module--columns__v2Iyf--vhIIH\";\nexport var ctaBottom = \"PlasmicOurTeam-module--ctaBottom--JDZwO\";\nexport var footer = \"PlasmicOurTeam-module--footer--vk7-B\";\nexport var freeBox___0Sfqp = \"PlasmicOurTeam-module--freeBox___0Sfqp--JanGl\";\nexport var freeBox__bO2In = \"PlasmicOurTeam-module--freeBox__bO2In--BMc+s\";\nexport var freeBox__bV9Gt = \"PlasmicOurTeam-module--freeBox__bV9Gt--ppM3F\";\nexport var freeBox__k1Eu1 = \"PlasmicOurTeam-module--freeBox__k1Eu1--et16w\";\nexport var freeBox__s2Tgx = \"PlasmicOurTeam-module--freeBox__s2Tgx--jMnft\";\nexport var freeBox__ydasX = \"PlasmicOurTeam-module--freeBox__ydasX--B-Omq\";\nexport var h1 = \"PlasmicOurTeam-module--h1--VKblF\";\nexport var h3__kf0As = \"PlasmicOurTeam-module--h3__kf0As--cr0+e\";\nexport var h3__qpRof = \"PlasmicOurTeam-module--h3__qpRof--dITul\";\nexport var header = \"PlasmicOurTeam-module--header--VUOB5\";\nexport var img___0CrgT = \"PlasmicOurTeam-module--img___0CrgT--22uIz\";\nexport var img___0Xcv = \"PlasmicOurTeam-module--img___0Xcv--KAlgq\";\nexport var img__uu5Jg = \"PlasmicOurTeam-module--img__uu5Jg--1TlWc\";\nexport var img__wxXn = \"PlasmicOurTeam-module--img__wxXn--FEs1o\";\nexport var pageBanerSection = \"PlasmicOurTeam-module--pageBanerSection--JefX0\";\nexport var root = \"PlasmicOurTeam-module--root--EMz9t\";\nexport var section = \"PlasmicOurTeam-module--section--R5Zis\";\nexport var svg___6EfsO = \"PlasmicOurTeam-module--svg___6EfsO--nhBWR\";\nexport var svg__avXgs = \"PlasmicOurTeam-module--svg__avXgs--gdC-h\";\nexport var svg__fu6Jf = \"PlasmicOurTeam-module--svg__fu6Jf--h8bRv\";\nexport var svg__iu8Rr = \"PlasmicOurTeam-module--svg__iu8Rr--fVE9M\";\nexport var text__hs3Ik = \"PlasmicOurTeam-module--text__hs3Ik--G-Iqe\";\nexport var text__k1RZx = \"PlasmicOurTeam-module--text__k1RZx--vRMrU\";\nexport var text__nZkvu = \"PlasmicOurTeam-module--text__nZkvu--nF5GY\";\nexport var text__nuTbe = \"PlasmicOurTeam-module--text__nuTbe--WskEH\";\nexport var text__uuR8F = \"PlasmicOurTeam-module--text__uuR8F--0Ws-P\";\nexport var text__v58OI = \"PlasmicOurTeam-module--text__v58OI--CtjYJ\";\nexport var text__xvCxz = \"PlasmicOurTeam-module--text__xvCxz--aYM+E\";\nexport var text__zXZuI = \"PlasmicOurTeam-module--text__zXZuI--Ns8O3\";","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicOurTeam } from \"../components/plasmic/rva_new/PlasmicOurTeam\"\n\nfunction OurTeam() {\n  // Use PlasmicOurTeam to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicOurTeam are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicOurTeam is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return <PlasmicOurTeam />\n}\n\nexport default OurTeam\n","export default __webpack_public_path__ + \"static/girls18285391920Jpg-46247f7d132b73dfc4373dcfb5d16c2c.jpeg\";","export default __webpack_public_path__ + \"static/people31046351920Jpg-9db8f294a2c5d17288b9ca222fe70c56.jpeg\";"],"names":["PlasmicCaseStudiesWraper__VariantProps","Array","PlasmicCaseStudiesWraper__ArgProps","PlasmicDescendants","root","freeBox","makeNodeComponent","nodeName","func","props","React","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","forNode","args","ph","Object","assign","className","classNames","projectcss","component","Link","href","platform","p","defaultContents","alt","displayHeight","displayMaxHeight","displayMaxWidth","displayMinHeight","displayMinWidth","displayWidth","loading","src","people31046351920JpgXh7Bar7SyhKi8G","fullWidth","fullHeight","aspectRatio","undefined","value","children","as","hasGap","Button","color","slot","PlasmicCaseStudiesWraper__RenderFunc","displayName","PlasmicCaseStudiesWraper","internalVariantProps","internalArgProps","CaseStudiesWraper_","ref","PlasmicCtaBottom__VariantProps","PlasmicCtaBottom__ArgProps","container","h2","button","PlasmicCtaBottom__RenderFunc","PlasmicCtaBottom","CtaBottom_","PlasmicOurTeam__VariantProps","PlasmicOurTeam__ArgProps","header","pageBanerSection","h1","section","ctaBottom","footer","ensureGlobalVariants","screen","useScreenVariantsxe8Uhzv7PeLJgW","Header","CaseStudiesWraper","az003JpgQ4UCjLmQ","girls18285391920JpgZd237MRhxc0C7B","az006JpgWpj3VfTqz","CtaBottom","Footer","PlasmicOurTeam__RenderFunc","PlasmicOurTeam"],"sourceRoot":""}