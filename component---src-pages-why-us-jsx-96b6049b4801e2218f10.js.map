{"version":3,"file":"component---src-pages-why-us-jsx-96b6049b4801e2218f10.js","mappings":"qOAuBaA,EAAiC,IAAIC,MAErCC,EAA6B,IAAID,MAuD9C,IAAME,EAAqB,CACzBC,KAAM,CAAC,OAAQ,YAAa,KAAM,UAClCC,UAAW,CAAC,YAAa,KAAM,UAC/BC,GAAI,CAAC,MACLC,OAAQ,CAAC,WAGX,SAASC,EAAkBC,GACzB,IAAMC,EAAO,SAAUC,GACrB,MAAsCC,EAAAA,SACpC,kBACEC,EAAAA,EAAAA,IAAiBF,EAAO,CACtBG,KAAML,EACNM,iBAAgB,OAAKZ,EAAmBM,IACxCO,qBAAsBd,EACtBe,yBAA0BjB,MAG9B,CAACW,EAAOF,IAGV,OA1EJ,SAAsCE,GACKA,EAAjCO,SADoC,IAAD,EACzBC,EAAuBR,EAAvBQ,UAAWC,EAAYT,EAAZS,QAI7B,OAHa,UAAAC,EAAAA,kBAAA,cAAAA,GACAT,EAAAA,SAAc,kBAAMU,OAAOC,OAAO,GAAIZ,EAAMa,QAAO,CAACb,EAAMa,QAGrE,eACE,oBAAmB,OACnB,wBAAuBL,EAAUf,KACjC,qBAAmB,EACnB,wBAAuBgB,EACvBK,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,EACAA,EAAAA,eACAA,EAAAA,GCvCU,0CD2CZ,QAAC,KAAD,CACEC,GAAI,MACJ,oBAAmB,YACnB,wBAAuBT,EAAUd,UACjCwB,QAAQ,EACRJ,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GClDP,+CDoDf,cACE,oBAAmB,KACnB,wBAAuBR,EAAUb,GACjCmB,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WCzDI,uCD6DL,2BAGH,QAACG,EAAA,EAAD,CACE,oBAAmB,SACnB,wBAAuBX,EAAUZ,OACjCkB,WAAWC,EAAAA,EAAAA,IAAW,iBCrEZ,0CDsEVK,MAAO,eAEN,kBA4BAC,CAA6B,CAClCd,SAbF,EAAQA,SAcNM,KAdF,EAAkBA,KAehBL,UAfF,EAAwBA,UAgBtBC,QAASX,KAQb,OAJEC,EAAKuB,YADU,SAAbxB,EACiB,mBAEnB,oBAAuCA,EAElCC,EAGF,IAAMwB,EAAmBZ,OAAOC,OAErCf,EAAkB,QAClB,CAEEH,UAAWG,EAAkB,aAC7BF,GAAIE,EAAkB,MACtBD,OAAQC,EAAkB,UAE1B2B,qBAAsBnC,EACtBoC,iBAAkBlC,IEzHtB,SAASmC,EAAW1B,EAAO2B,GAezB,OAAO,gBAACJ,EAAD,eAAkB9B,KAAM,CAAEkC,IAAAA,IAAW3B,IAG9C,IAEA,EAFkBC,EAAAA,WAAiByB,I,gpCCrBxBE,EAAgB,4CAChBC,EAAgB,4CAChBC,EAAgB,4CAChBC,EAAe,2CACfC,EAAkB,8CAClBC,EAAiB,6CACjBC,EAAmB,+CACnBC,EAAa,yCACbC,EAAY,wCACZC,EAAS,qCACTC,EAAkB,8CAClBC,EAAiB,6CACjBC,EAAiB,6CACjBC,EAAiB,6CACjBC,EAAiB,6CACjBC,EAAiB,6CACjBC,EAAiB,6CACjBC,EAAiB,6CACjBC,EAAiB,6CACjBC,EAAiB,6CACjBC,EAAiB,6CACjBC,EAAiB,6CACjBC,EAAK,iCACLC,EAAa,yCACbC,EAAY,wCACZC,EAAY,wCACZC,EAAa,yCACbC,EAAY,wCACZC,EAAS,qCACTC,EAAY,wCACZC,EAAa,yCACbC,EAAa,yCACbC,EAAa,yCACbC,EAAa,yCACbC,EAAmB,+CACnBrE,EAAO,mCACPsE,EAAiB,6CACjBC,EAAiB,6CACjBC,EAAe,2CACfC,EAAc,0CACdC,EAAa,yCC1CxB,GAAe,IAA0B,sEC6B5BC,GAA6B,IAAI9E,MAEjC+E,GAAyB,IAAI/E,MAmX1C,IAAME,GAAqB,CACzBC,KAAM,CACJ,OACA,SACA,mBACA,KACA,mBACA,aACA,YACA,UAGF+D,OAAQ,CAAC,UACTM,iBAAkB,CAAC,mBAAoB,MACvCZ,GAAI,CAAC,MACLhB,iBAAkB,CAAC,mBAAoB,cACvCC,WAAY,CAAC,cACbC,UAAW,CAAC,aACZC,OAAQ,CAAC,WAGX,SAASxC,GAAkBC,GACzB,IAAMC,EAAO,SAAUC,GACrB,MAAsCC,EAAAA,SACpC,kBACEC,EAAAA,EAAAA,IAAiBF,EAAO,CACtBG,KAAML,EACNM,iBAAgB,OAAKZ,GAAmBM,IACxCO,qBAAsBgE,GACtB/D,yBAA0B8D,OAG9B,CAACpE,EAAOF,IAGV,OApZJ,SAAkCE,GACSA,EAAjCO,SADgC,IAAD,EACrBC,EAAuBR,EAAvBQ,UAAWC,EAAYT,EAAZS,QAIvB6D,IAHO,UAAA5D,EAAAA,kBAAA,cAAAA,GACAT,EAAAA,SAAc,kBAAMU,OAAOC,OAAO,GAAIZ,EAAMa,QAAO,CAACb,EAAMa,QAEhD0D,EAAAA,EAAAA,IAAqB,CAC1CC,QAAQC,EAAAA,EAAAA,SAGV,OACE,QAAC,WAAD,MACE,mFAMA,eAAK3D,UAAWE,EAAAA,KACd,QAAC,KAAD,CACEC,GAAI,MACJ,oBAAmB,OACnB,wBAAuBT,EAAUf,KACjC,qBAAmB,EACnB,wBAAuBgB,EACvBS,QAAQ,EACRJ,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,EACAA,EAAAA,eACAA,EAAAA,GACA0D,KAGF,QAACC,EAAA,EAAD,CACE,oBAAmB,SACnB,wBAAuBnE,EAAUgD,OACjC1C,WAAWC,EAAAA,EAAAA,IAAW,iBAAkB2D,MAG1C,eACE,oBAAmB,mBACnB,wBAAuBlE,EAAUsD,iBACjChD,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgB0D,KAEtC,eAAK5D,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgB0D,KACzC,cACE,oBAAmB,KACnB,wBAAuBlE,EAAU0C,GACjCpC,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WACA0D,IAGD,eAKP,mBAAS5D,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgB0D,KAC7C,eAAK5D,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgB0D,KACzC,eAAK5D,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgB0D,KACzC,eAAK5D,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgB0D,KACzC,QAAC,KAAD,CACEzD,GAAI,MACJC,QAAQ,EACRJ,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgB0D,KAEtC,cACE5D,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WACA0D,IAGD,gBAGH,eACE5D,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACAA,EAAAA,WACA0D,IAIA,sOAIJ,eACE5D,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACAA,EAAAA,WACA0D,IAIA,wOAMR,eAAK5D,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgB0D,KACzC,QAAC,KAAD,CACEE,IAAK,GACL9D,WAAWC,EAAAA,EAAAA,IAAW2D,GACtBG,cAAe,OACfC,iBAAkB,OAClBC,gBAAiB,OACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,OACdC,QAAS,OACTC,IAAK,CACHA,IAAKC,GACLC,UAAW,KACXC,WAAY,KACZC,iBAAaC,UAQzB,mBAAS3E,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgB0D,KAC7C,QAAC,KAAD,CACEzD,GAAI,MACJC,QAAQ,EACRJ,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgB0D,KAEtC,eAAK5D,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgB0D,KAEvC,QAAC,KAAD,CACEzD,GAAI,MACJC,QAAQ,EACRJ,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgB0D,KAEtC,cACE5D,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WACA0D,MAGDgB,EAAAA,EAAAA,IAAWpB,GAAgB,SAAU,cAClC,mBAIN,QAAC,KAAD,CACErD,GAAI,MACJC,QAAQ,EACRJ,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACA0D,KAGF,eACE5D,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgB0D,KAEtC,QAAC,KAAD,CACEzD,GAAI,MACJC,QAAQ,EACRJ,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACA0D,KAGF,QAAC,KAAD,CACEzD,GAAI,MACJC,QAAQ,EACRJ,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACA0D,KAGF,cACE5D,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WACA0D,IAGD,gBAGH,eACE5D,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACAA,EAAAA,WACA0D,IAIA,2cAOV,eACE5D,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACA0D,KAGF,QAAC,KAAD,CACEzD,GAAI,MACJC,QAAQ,EACRJ,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACA0D,KAGF,QAAC,KAAD,CACEzD,GAAI,MACJC,QAAQ,EACRJ,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACA0D,KAGF,cACE5D,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WACA0D,IAGD,gBAGH,eACE5D,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACAA,EAAAA,WACA0D,EAAAA,cAIA,gdAatB,eACE,oBAAmB,mBACnB,wBAAuBlE,EAAU0B,iBACjCpB,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgB0D,KAEtC,QAAC,KAAD,CACEzD,GAAI,MACJ,oBAAmB,aACnB,wBAAuBT,EAAU2B,WACjCjB,QAAQ,EACRJ,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgB0D,KAEtC,cACE5D,WAAWC,EAAAA,EAAAA,IACTC,EAAAA,GACAA,EAAAA,GACAA,EAAAA,WACA0D,IAGD,wBAGH,eAAK5D,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgB0D,KACzC,QAAC,KAAD,CACEzD,GAAI,MACJC,QAAQ,EACRJ,WAAWC,EAAAA,EAAAA,IAAWC,EAAAA,GAAgB0D,KAEtC,QAAC,KAAD,CACEE,IAAK,GACL9D,WAAWC,EAAAA,EAAAA,IAAW2D,GACtBG,cAAe,OACfC,iBAAkB,OAClBC,gBAAiB,OACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,OACdE,IACE,oEAIJ,QAAC,KAAD,CACER,IAAK,GACL9D,WAAWC,EAAAA,EAAAA,IAAW2D,GACtBG,cAAe,OACfC,iBAAkB,OAClBC,gBAAiB,OACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,OACdE,IACE,qEAIJ,QAAC,KAAD,CACER,IAAK,GACL9D,WAAWC,EAAAA,EAAAA,IAAW2D,GACtBG,cAAe,OACfC,iBAAkB,OAClBC,gBAAiB,OACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,OACdE,IACE,oEAIJ,QAAC,KAAD,CACER,IAAK,GACL9D,WAAWC,EAAAA,EAAAA,IAAW2D,GACtBG,cAAe,OACfC,iBAAkB,OAClBC,gBAAiB,OACjBC,iBAAkB,IAClBC,gBAAiB,IACjBC,aAAc,OACdE,IACE,wEAQZ,QAACO,EAAA,EAAD,CACE,oBAAmB,YACnB,wBAAuBnF,EAAU4B,UACjCtB,WAAWC,EAAAA,EAAAA,IAAW,iBAAkB2D,MAG1C,QAACkB,EAAA,EAAD,CACE,oBAAmB,SACnB,wBAAuBpF,EAAU6B,OACjCvB,WAAWC,EAAAA,EAAAA,IAAW,iBAAkB2D,QA2CzCmB,CAAyB,CAC9BtF,SAbF,EAAQA,SAcNM,KAdF,EAAkBA,KAehBL,UAfF,EAAwBA,UAgBtBC,QAASX,KAQb,OAJEC,EAAKuB,YADU,SAAbxB,EACiB,eAEnB,gBAAmCA,EAE9BC,EAGF,IAAM+F,GAAenF,OAAOC,OAEjCf,GAAkB,QAClB,CAEE2D,OAAQ3D,GAAkB,UAC1BiE,iBAAkBjE,GAAkB,oBACpCqD,GAAIrD,GAAkB,MACtBqC,iBAAkBrC,GAAkB,oBACpCsC,WAAYtC,GAAkB,cAC9BuC,UAAWvC,GAAkB,aAC7BwC,OAAQxC,GAAkB,UAE1B2B,qBAAsB4C,GACtB3C,iBAAkB4C,KCzbtB,OApBA,WAiBE,OAAO,gBAACyB,GAAD","sources":["webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicCtaBottom.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicCtaBottom.module.css","webpack://gatsby-starter-default/./src/components/CtaBottom.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicWhyUs.module.css","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/images/portrait32048431920Jpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicWhyUs.jsx","webpack://gatsby-starter-default/./src/pages/WhyUs.jsx"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: sSe8AoDiAW5DkmycE76RKb\n// Component: aZrFk0trqYG6jU\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport Button from \"../../Button\" // plasmic-import: AI4dzLfJKZOBy/component\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_rva_new.module.css\" // plasmic-import: sSe8AoDiAW5DkmycE76RKb/projectcss\nimport * as sty from \"./PlasmicCtaBottom.module.css\" // plasmic-import: aZrFk0trqYG6jU/css\n\nexport const PlasmicCtaBottom__VariantProps = new Array()\n\nexport const PlasmicCtaBottom__ArgProps = new Array()\n\nfunction PlasmicCtaBottom__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <p.Stack\n        as={\"div\"}\n        data-plasmic-name={\"container\"}\n        data-plasmic-override={overrides.container}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.container)}\n      >\n        <h2\n          data-plasmic-name={\"h2\"}\n          data-plasmic-override={overrides.h2}\n          className={classNames(\n            projectcss.all,\n            projectcss.h2,\n            projectcss.__wab_text,\n            sty.h2\n          )}\n        >\n          {\"Make a call to action.\"}\n        </h2>\n\n        <Button\n          data-plasmic-name={\"button\"}\n          data-plasmic-override={overrides.button}\n          className={classNames(\"__wab_instance\", sty.button)}\n          color={\"blackCoffee\"}\n        >\n          {\"Get In Touch\"}\n        </Button>\n      </p.Stack>\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"container\", \"h2\", \"button\"],\n  container: [\"container\", \"h2\", \"button\"],\n  h2: [\"h2\"],\n  button: [\"button\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicCtaBottom__ArgProps,\n          internalVariantPropNames: PlasmicCtaBottom__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicCtaBottom__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicCtaBottom\"\n  } else {\n    func.displayName = `PlasmicCtaBottom.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicCtaBottom = Object.assign(\n  // Top-level PlasmicCtaBottom renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    container: makeNodeComponent(\"container\"),\n    h2: makeNodeComponent(\"h2\"),\n    button: makeNodeComponent(\"button\"),\n    // Metadata about props expected for PlasmicCtaBottom\n    internalVariantProps: PlasmicCtaBottom__VariantProps,\n    internalArgProps: PlasmicCtaBottom__ArgProps,\n  }\n)\n\nexport default PlasmicCtaBottom\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var button = \"PlasmicCtaBottom-module--button--yvbv7\";\nexport var container = \"PlasmicCtaBottom-module--container--IEZoT\";\nexport var h2 = \"PlasmicCtaBottom-module--h2--HIbGy\";\nexport var root = \"PlasmicCtaBottom-module--root--BaEkG\";\nexport var svg__pyKfL = \"PlasmicCtaBottom-module--svg__pyKfL--ecrFT\";\nexport var svg__sr3S = \"PlasmicCtaBottom-module--svg__sr3S--8N2Tv\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicCtaBottom } from \"./plasmic/rva_new/PlasmicCtaBottom\"\n\nfunction CtaBottom_(props, ref) {\n  // Use PlasmicCtaBottom to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicCtaBottom are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all CtaBottomProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicCtaBottom root={{ ref }} {...props} />\n}\n\nconst CtaBottom = React.forwardRef(CtaBottom_)\n\nexport default CtaBottom\n","// extracted by mini-css-extract-plugin\nexport var __wab_imgSpacer = \"PlasmicWhyUs-module--__wab_img-spacer--tBUTG\";\nexport var column__hz6G9 = \"PlasmicWhyUs-module--column__hz6G9--h6EhE\";\nexport var column__mz8NG = \"PlasmicWhyUs-module--column__mz8NG--ac-9i\";\nexport var column__oUaYi = \"PlasmicWhyUs-module--column__oUaYi--Wq9g3\";\nexport var column__vGYi = \"PlasmicWhyUs-module--column__vGYi--LW8PC\";\nexport var columns___4Sovl = \"PlasmicWhyUs-module--columns___4Sovl--6qmpm\";\nexport var columns__g1VeZ = \"PlasmicWhyUs-module--columns__g1VeZ--nAAXQ\";\nexport var companiesSection = \"PlasmicWhyUs-module--companiesSection--k-qFD\";\nexport var container2 = \"PlasmicWhyUs-module--container2--j1OT5\";\nexport var ctaBottom = \"PlasmicWhyUs-module--ctaBottom--4oPWM\";\nexport var footer = \"PlasmicWhyUs-module--footer--7sREN\";\nexport var freeBox___0E5Ih = \"PlasmicWhyUs-module--freeBox___0E5Ih--wLAXx\";\nexport var freeBox__aXbkT = \"PlasmicWhyUs-module--freeBox__aXbkT--wMnsv\";\nexport var freeBox__eu1Qn = \"PlasmicWhyUs-module--freeBox__eu1Qn--8Twc1\";\nexport var freeBox__fVgi8 = \"PlasmicWhyUs-module--freeBox__fVgi8--3aaG5\";\nexport var freeBox__gcMoX = \"PlasmicWhyUs-module--freeBox__gcMoX--nwX+0\";\nexport var freeBox__iAokq = \"PlasmicWhyUs-module--freeBox__iAokq--7bQRX\";\nexport var freeBox__ih45B = \"PlasmicWhyUs-module--freeBox__ih45B--9ZOvT\";\nexport var freeBox__ju6Fw = \"PlasmicWhyUs-module--freeBox__ju6Fw--VY8na\";\nexport var freeBox__lBWwV = \"PlasmicWhyUs-module--freeBox__lBWwV--2dl0T\";\nexport var freeBox__qtKSw = \"PlasmicWhyUs-module--freeBox__qtKSw--tZ04i\";\nexport var freeBox__tudKw = \"PlasmicWhyUs-module--freeBox__tudKw--7Owo9\";\nexport var freeBox__w3OYy = \"PlasmicWhyUs-module--freeBox__w3OYy--0+WG3\";\nexport var h1 = \"PlasmicWhyUs-module--h1--tHQGM\";\nexport var h2___0G17Q = \"PlasmicWhyUs-module--h2___0G17Q--473U9\";\nexport var h2__o2KnL = \"PlasmicWhyUs-module--h2__o2KnL--R7NI4\";\nexport var h2__w1OHy = \"PlasmicWhyUs-module--h2__w1OHy--q5LLG\";\nexport var h3___4LJrt = \"PlasmicWhyUs-module--h3___4LJrt--XSFwc\";\nexport var h3__oTYbf = \"PlasmicWhyUs-module--h3__oTYbf--0ojs3\";\nexport var header = \"PlasmicWhyUs-module--header--xfPNX\";\nexport var img__aUQm = \"PlasmicWhyUs-module--img__aUQm--Kejm9\";\nexport var img__fMLjk = \"PlasmicWhyUs-module--img__fMLjk--HmW7P\";\nexport var img__qi6Zu = \"PlasmicWhyUs-module--img__qi6Zu--G9l5h\";\nexport var img__reLaD = \"PlasmicWhyUs-module--img__reLaD--2bjfn\";\nexport var img__w6YfT = \"PlasmicWhyUs-module--img__w6YfT--ETeTU\";\nexport var pageBanerSection = \"PlasmicWhyUs-module--pageBanerSection--8vPwT\";\nexport var root = \"PlasmicWhyUs-module--root--07jSt\";\nexport var section__snSqv = \"PlasmicWhyUs-module--section__snSqv--QxCcT\";\nexport var section__sqAor = \"PlasmicWhyUs-module--section__sqAor--OJKYQ\";\nexport var text___75Ee1 = \"PlasmicWhyUs-module--text___75Ee1--4qbn-\";\nexport var text__q6O8K = \"PlasmicWhyUs-module--text__q6O8K--xvGxY\";\nexport var text__ukTu = \"PlasmicWhyUs-module--text__ukTu--B2duH\";","export default __webpack_public_path__ + \"static/portrait32048431920Jpg-a16a17c7337122e5a3fa319be72e49c0.jpeg\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: sSe8AoDiAW5DkmycE76RKb\n// Component: EgVjH3shVXgCZy\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Header from \"../../Header\" // plasmic-import: rlLZVswJyeOUp/component\nimport CtaBottom from \"../../CtaBottom\" // plasmic-import: aZrFk0trqYG6jU/component\nimport Footer from \"../../Footer\" // plasmic-import: aKMJC5Su_PgNb/component\nimport { useScreenVariants as useScreenVariantsxe8Uhzv7PeLJgW } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: XE8Uhzv7PeLJgW/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_rva_new.module.css\" // plasmic-import: sSe8AoDiAW5DkmycE76RKb/projectcss\nimport * as sty from \"./PlasmicWhyUs.module.css\" // plasmic-import: EgVjH3shVXgCZy/css\nimport portrait32048431920JpgHHUldzYQyO73T from \"./images/portrait32048431920Jpg.jpeg\" // plasmic-import: hH-UldzYQyO73t/picture\n\nexport const PlasmicWhyUs__VariantProps = new Array()\n\nexport const PlasmicWhyUs__ArgProps = new Array()\n\nfunction PlasmicWhyUs__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const $ctx = ph.useDataEnv?.() || {}\n  const args = React.useMemo(() => Object.assign({}, props.args), [props.args])\n  const $props = args\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantsxe8Uhzv7PeLJgW(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        <p.Stack\n          as={\"div\"}\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          hasGap={true}\n          className={classNames(\n            projectcss.all,\n            projectcss.root_reset,\n            projectcss.plasmic_default_styles,\n            projectcss.plasmic_mixins,\n            projectcss.plasmic_tokens,\n            sty.root\n          )}\n        >\n          <Header\n            data-plasmic-name={\"header\"}\n            data-plasmic-override={overrides.header}\n            className={classNames(\"__wab_instance\", sty.header)}\n          />\n\n          <div\n            data-plasmic-name={\"pageBanerSection\"}\n            data-plasmic-override={overrides.pageBanerSection}\n            className={classNames(projectcss.all, sty.pageBanerSection)}\n          >\n            <div className={classNames(projectcss.all, sty.freeBox__tudKw)}>\n              <h1\n                data-plasmic-name={\"h1\"}\n                data-plasmic-override={overrides.h1}\n                className={classNames(\n                  projectcss.all,\n                  projectcss.h1,\n                  projectcss.__wab_text,\n                  sty.h1\n                )}\n              >\n                {\"About Us\"}\n              </h1>\n            </div>\n          </div>\n\n          <section className={classNames(projectcss.all, sty.section__sqAor)}>\n            <div className={classNames(projectcss.all, sty.freeBox__eu1Qn)}>\n              <div className={classNames(projectcss.all, sty.columns__g1VeZ)}>\n                <div className={classNames(projectcss.all, sty.column__oUaYi)}>\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__aXbkT)}\n                  >\n                    <h2\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h2,\n                        projectcss.__wab_text,\n                        sty.h2__o2KnL\n                      )}\n                    >\n                      {\"Our Founder\"}\n                    </h2>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__q6O8K\n                      )}\n                    >\n                      {\n                        \"Consectetur a adipiscing sagittis sed proin libero himenaeos ornare adipiscing suscipit leo vestibulum facilisi consequat nisi nisi adipiscing habitant facilisis suspendisse hac integer eget quam facilisis sem placerat fames.\"\n                      }\n                    </div>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text___75Ee1\n                      )}\n                    >\n                      {\n                        \"Consectetur a adipiscing sagittis sed proin libero himenaeos ornare adipiscing suscipit leo vestibulum facilisi consequat nisi nisi adipiscing habitant facilisis suspendisse hac integer eget quam facilisis sem placerat fames.\"\n                      }\n                    </div>\n                  </p.Stack>\n                </div>\n\n                <div className={classNames(projectcss.all, sty.column__hz6G9)}>\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img__reLaD)}\n                    displayHeight={\"100%\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"100%\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"100%\"}\n                    loading={\"lazy\"}\n                    src={{\n                      src: portrait32048431920JpgHHUldzYQyO73T,\n                      fullWidth: 1920,\n                      fullHeight: 1280,\n                      aspectRatio: undefined,\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <section className={classNames(projectcss.all, sty.section__snSqv)}>\n            <p.Stack\n              as={\"div\"}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.freeBox__iAokq)}\n            >\n              <div className={classNames(projectcss.all, sty.freeBox__ih45B)}>\n                {true ? (\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__gcMoX)}\n                  >\n                    <h2\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h2,\n                        projectcss.__wab_text,\n                        sty.h2___0G17Q\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                        ? \"Why Choose Us\"\n                        : \"Why Choose Us\"}\n                    </h2>\n\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(\n                        projectcss.all,\n                        sty.columns___4Sovl\n                      )}\n                    >\n                      <div\n                        className={classNames(projectcss.all, sty.column__vGYi)}\n                      >\n                        <p.Stack\n                          as={\"div\"}\n                          hasGap={true}\n                          className={classNames(\n                            projectcss.all,\n                            sty.freeBox___0E5Ih\n                          )}\n                        >\n                          <p.Stack\n                            as={\"div\"}\n                            hasGap={true}\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__fVgi8\n                            )}\n                          >\n                            <h3\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.h3,\n                                projectcss.__wab_text,\n                                sty.h3___4LJrt\n                              )}\n                            >\n                              {\"Our History\"}\n                            </h3>\n\n                            <div\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.__wab_text,\n                                sty.text__ukTu\n                              )}\n                            >\n                              {\n                                \"Consectetur a adipiscing sagittis sed proin libero himenaeos ornare adipiscing suscipit leo vestibulum facilisi consequat nisi nisi adipiscing habitant facilisis suspendisse hac integer eget quam facilisis sem placerat fames. Consectetur a adipiscing sagittis sed proin libero himenaeos ornare adipiscing suscipit leo vestibulum facilisi consequat nisi nisi adipiscing habitant facilisis suspendisse hac integer eget quam facilisis sem placerat fames.\"\n                              }\n                            </div>\n                          </p.Stack>\n                        </p.Stack>\n                      </div>\n\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__mz8NG\n                        )}\n                      >\n                        <p.Stack\n                          as={\"div\"}\n                          hasGap={true}\n                          className={classNames(\n                            projectcss.all,\n                            sty.freeBox__qtKSw\n                          )}\n                        >\n                          <p.Stack\n                            as={\"div\"}\n                            hasGap={true}\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__lBWwV\n                            )}\n                          >\n                            <h3\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.h3,\n                                projectcss.__wab_text,\n                                sty.h3__oTYbf\n                              )}\n                            >\n                              {\"Founder Bio\"}\n                            </h3>\n\n                            <div\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.__wab_text,\n                                sty.text__pbIhh\n                              )}\n                            >\n                              {\n                                \"Consectetur a adipiscing sagittis sed proin libero himenaeos ornare adipiscing suscipit leo vestibulum facilisi consequat nisi nisi adipiscing habitant facilisis suspendisse hac integer eget quam facilisis sem placerat fames. Consectetur a adipiscing sagittis sed proin libero himenaeos ornare adipiscing suscipit leo vestibulum facilisi consequat nisi nisi adipiscing habitant facilisis suspendisse hac integer eget quam facilisis sem placerat fames.\"\n                              }\n                            </div>\n                          </p.Stack>\n                        </p.Stack>\n                      </div>\n                    </p.Stack>\n                  </p.Stack>\n                ) : null}\n              </div>\n            </p.Stack>\n          </section>\n\n          <div\n            data-plasmic-name={\"companiesSection\"}\n            data-plasmic-override={overrides.companiesSection}\n            className={classNames(projectcss.all, sty.companiesSection)}\n          >\n            <p.Stack\n              as={\"div\"}\n              data-plasmic-name={\"container2\"}\n              data-plasmic-override={overrides.container2}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.container2)}\n            >\n              <h2\n                className={classNames(\n                  projectcss.all,\n                  projectcss.h2,\n                  projectcss.__wab_text,\n                  sty.h2__w1OHy\n                )}\n              >\n                {\"We work with Brands\"}\n              </h2>\n\n              <div className={classNames(projectcss.all, sty.freeBox__w3OYy)}>\n                <p.Stack\n                  as={\"div\"}\n                  hasGap={true}\n                  className={classNames(projectcss.all, sty.freeBox__ju6Fw)}\n                >\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img__aUQm)}\n                    displayHeight={\"48px\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"none\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"auto\"}\n                    src={\n                      \"https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-strapi.svg\"\n                    }\n                  />\n\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img__qi6Zu)}\n                    displayHeight={\"48px\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"none\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"auto\"}\n                    src={\n                      \"https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-segment.svg\"\n                    }\n                  />\n\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img__fMLjk)}\n                    displayHeight={\"48px\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"none\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"auto\"}\n                    src={\n                      \"https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-xstate.svg\"\n                    }\n                  />\n\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img__w6YfT)}\n                    displayHeight={\"48px\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"none\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"auto\"}\n                    src={\n                      \"https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-mapbox.svg\"\n                    }\n                  />\n                </p.Stack>\n              </div>\n            </p.Stack>\n          </div>\n\n          <CtaBottom\n            data-plasmic-name={\"ctaBottom\"}\n            data-plasmic-override={overrides.ctaBottom}\n            className={classNames(\"__wab_instance\", sty.ctaBottom)}\n          />\n\n          <Footer\n            data-plasmic-name={\"footer\"}\n            data-plasmic-override={overrides.footer}\n            className={classNames(\"__wab_instance\", sty.footer)}\n          />\n        </p.Stack>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\n    \"root\",\n    \"header\",\n    \"pageBanerSection\",\n    \"h1\",\n    \"companiesSection\",\n    \"container2\",\n    \"ctaBottom\",\n    \"footer\",\n  ],\n\n  header: [\"header\"],\n  pageBanerSection: [\"pageBanerSection\", \"h1\"],\n  h1: [\"h1\"],\n  companiesSection: [\"companiesSection\", \"container2\"],\n  container2: [\"container2\"],\n  ctaBottom: [\"ctaBottom\"],\n  footer: [\"footer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = React.useMemo(\n      () =>\n        deriveRenderOpts(props, {\n          name: nodeName,\n          descendantNames: [...PlasmicDescendants[nodeName]],\n          internalArgPropNames: PlasmicWhyUs__ArgProps,\n          internalVariantPropNames: PlasmicWhyUs__VariantProps,\n        }),\n\n      [props, nodeName]\n    )\n\n    return PlasmicWhyUs__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicWhyUs\"\n  } else {\n    func.displayName = `PlasmicWhyUs.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicWhyUs = Object.assign(\n  // Top-level PlasmicWhyUs renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    header: makeNodeComponent(\"header\"),\n    pageBanerSection: makeNodeComponent(\"pageBanerSection\"),\n    h1: makeNodeComponent(\"h1\"),\n    companiesSection: makeNodeComponent(\"companiesSection\"),\n    container2: makeNodeComponent(\"container2\"),\n    ctaBottom: makeNodeComponent(\"ctaBottom\"),\n    footer: makeNodeComponent(\"footer\"),\n    // Metadata about props expected for PlasmicWhyUs\n    internalVariantProps: PlasmicWhyUs__VariantProps,\n    internalArgProps: PlasmicWhyUs__ArgProps,\n  }\n)\n\nexport default PlasmicWhyUs\n/* prettier-ignore-end */\n","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicWhyUs } from \"../components/plasmic/rva_new/PlasmicWhyUs\"\n\nfunction WhyUs() {\n  // Use PlasmicWhyUs to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicWhyUs are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicWhyUs is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return <PlasmicWhyUs />\n}\n\nexport default WhyUs\n"],"names":["PlasmicCtaBottom__VariantProps","Array","PlasmicCtaBottom__ArgProps","PlasmicDescendants","root","container","h2","button","makeNodeComponent","nodeName","func","props","React","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","forNode","ph","Object","assign","args","className","classNames","projectcss","as","hasGap","Button","color","PlasmicCtaBottom__RenderFunc","displayName","PlasmicCtaBottom","internalVariantProps","internalArgProps","CtaBottom_","ref","column__hz6G9","column__mz8NG","column__oUaYi","column__vGYi","columns___4Sovl","columns__g1VeZ","companiesSection","container2","ctaBottom","footer","freeBox___0E5Ih","freeBox__aXbkT","freeBox__eu1Qn","freeBox__fVgi8","freeBox__gcMoX","freeBox__iAokq","freeBox__ih45B","freeBox__ju6Fw","freeBox__lBWwV","freeBox__qtKSw","freeBox__tudKw","freeBox__w3OYy","h1","h2___0G17Q","h2__o2KnL","h2__w1OHy","h3___4LJrt","h3__oTYbf","header","img__aUQm","img__fMLjk","img__qi6Zu","img__reLaD","img__w6YfT","pageBanerSection","section__snSqv","section__sqAor","text___75Ee1","text__q6O8K","text__ukTu","PlasmicWhyUs__VariantProps","PlasmicWhyUs__ArgProps","globalVariants","ensureGlobalVariants","screen","useScreenVariantsxe8Uhzv7PeLJgW","sty","Header","alt","displayHeight","displayMaxHeight","displayMaxWidth","displayMinHeight","displayMinWidth","displayWidth","loading","src","portrait32048431920JpgHHUldzYQyO73T","fullWidth","fullHeight","aspectRatio","undefined","hasVariant","CtaBottom","Footer","PlasmicWhyUs__RenderFunc","PlasmicWhyUs"],"sourceRoot":""}