{"version":3,"file":"component---src-pages-index-jsx-74155be94b1573711e6d.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicCtaBottom.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicCtaBottom.module.css","webpack://gatsby-starter-default/./src/components/CtaBottom.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicTestimonial.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicTestimonial.module.css","webpack://gatsby-starter-default/./src/components/Testimonial.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/icons/PlasmicIcon__Icon8.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicHomepage.module.css","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/icons/PlasmicIcon__Icon13.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/icons/PlasmicIcon__Icon10.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/icons/PlasmicIcon__Icon11.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/PlasmicHomepage.jsx","webpack://gatsby-starter-default/./src/pages/index.jsx","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/images/girls18285391920Jpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/images/people31046351920Jpg.jpeg","webpack://gatsby-starter-default/./src/components/plasmic/rva_new/images/woman32879561920Jpg.jpeg"],"sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: sSe8AoDiAW5DkmycE76RKb\n// Component: aZrFk0trqYG6jU\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport Button from \"../../Button\" // plasmic-import: AI4dzLfJKZOBy/component\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_rva_new.module.css\" // plasmic-import: sSe8AoDiAW5DkmycE76RKb/projectcss\nimport * as sty from \"./PlasmicCtaBottom.module.css\" // plasmic-import: aZrFk0trqYG6jU/css\n\nexport const PlasmicCtaBottom__VariantProps = new Array()\n\nexport const PlasmicCtaBottom__ArgProps = new Array()\n\nexport const defaultCtaBottom__Args = {}\n\nfunction PlasmicCtaBottom__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const args = Object.assign({}, defaultCtaBottom__Args, props.args)\n  const $props = args\n  const $ctx = ph.useDataEnv?.() || {}\n  return (\n    <div\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <p.Stack\n        as={\"div\"}\n        data-plasmic-name={\"container\"}\n        data-plasmic-override={overrides.container}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.container)}\n      >\n        <h2\n          data-plasmic-name={\"h2\"}\n          data-plasmic-override={overrides.h2}\n          className={classNames(\n            projectcss.all,\n            projectcss.h2,\n            projectcss.__wab_text,\n            sty.h2\n          )}\n        >\n          {\"Make a call to action.\"}\n        </h2>\n\n        <Button\n          data-plasmic-name={\"button\"}\n          data-plasmic-override={overrides.button}\n          className={classNames(\"__wab_instance\", sty.button)}\n          color={\"blackCoffee\"}\n        >\n          {\"Get In Touch\"}\n        </Button>\n      </p.Stack>\n    </div>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\", \"container\", \"h2\", \"button\"],\n  container: [\"container\", \"h2\", \"button\"],\n  h2: [\"h2\"],\n  button: [\"button\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicCtaBottom__ArgProps,\n      internalVariantPropNames: PlasmicCtaBottom__VariantProps,\n    })\n\n    return PlasmicCtaBottom__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicCtaBottom\"\n  } else {\n    func.displayName = `PlasmicCtaBottom.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicCtaBottom = Object.assign(\n  // Top-level PlasmicCtaBottom renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    container: makeNodeComponent(\"container\"),\n    h2: makeNodeComponent(\"h2\"),\n    button: makeNodeComponent(\"button\"),\n    // Metadata about props expected for PlasmicCtaBottom\n    internalVariantProps: PlasmicCtaBottom__VariantProps,\n    internalArgProps: PlasmicCtaBottom__ArgProps,\n  }\n)\n\nexport default PlasmicCtaBottom\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var button = \"PlasmicCtaBottom-module--button--yvbv7\";\nexport var container = \"PlasmicCtaBottom-module--container--IEZoT\";\nexport var h2 = \"PlasmicCtaBottom-module--h2--HIbGy\";\nexport var root = \"PlasmicCtaBottom-module--root--BaEkG\";\nexport var svg__pyKfL = \"PlasmicCtaBottom-module--svg__pyKfL--ecrFT\";\nexport var svg__sr3S = \"PlasmicCtaBottom-module--svg__sr3S--8N2Tv\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicCtaBottom } from \"./plasmic/rva_new/PlasmicCtaBottom\"\n\nfunction CtaBottom_(props, ref) {\n  // Use PlasmicCtaBottom to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicCtaBottom are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all CtaBottomProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicCtaBottom root={{ ref }} {...props} />\n}\n\nconst CtaBottom = React.forwardRef(CtaBottom_)\n\nexport default CtaBottom\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: sSe8AoDiAW5DkmycE76RKb\n// Component: OD3fdYo-Q8aWox\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n} from \"@plasmicapp/react-web\"\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_rva_new.module.css\" // plasmic-import: sSe8AoDiAW5DkmycE76RKb/projectcss\nimport * as sty from \"./PlasmicTestimonial.module.css\" // plasmic-import: OD3fdYo-Q8aWox/css\n\nexport const PlasmicTestimonial__VariantProps = new Array()\n\nexport const PlasmicTestimonial__ArgProps = new Array(\"children\", \"slot\")\n\nexport const defaultTestimonial__Args = {}\n\nfunction PlasmicTestimonial__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const args = Object.assign({}, defaultTestimonial__Args, props.args)\n  const $props = args\n  const $ctx = ph.useDataEnv?.() || {}\n  return (\n    <p.Stack\n      as={\"div\"}\n      data-plasmic-name={\"root\"}\n      data-plasmic-override={overrides.root}\n      data-plasmic-root={true}\n      data-plasmic-for-node={forNode}\n      hasGap={true}\n      className={classNames(\n        projectcss.all,\n        projectcss.root_reset,\n        projectcss.plasmic_default_styles,\n        projectcss.plasmic_mixins,\n        projectcss.plasmic_tokens,\n        sty.root\n      )}\n    >\n      <p.Stack\n        as={\"div\"}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.freeBox__qDxgr)}\n      >\n        {p.renderPlasmicSlot({\n          defaultContents:\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam\",\n          value: args.children,\n          className: classNames(sty.slotTargetChildren),\n        })}\n      </p.Stack>\n\n      <p.Stack\n        as={\"div\"}\n        hasGap={true}\n        className={classNames(projectcss.all, sty.freeBox__u185C)}\n      >\n        {p.renderPlasmicSlot({\n          defaultContents: (\n            <React.Fragment>\n              <p.PlasmicImg\n                alt={\"\"}\n                className={classNames(sty.img___98C2U)}\n                displayHeight={\"64px\"}\n                displayMaxHeight={\"none\"}\n                displayMaxWidth={\"none\"}\n                displayMinHeight={\"0\"}\n                displayMinWidth={\"0\"}\n                displayWidth={\"64px\"}\n                src={\n                  \"https://www.caa.com/sites/default/files/styles/headshot_500x500/public/speaker-headshots/Morgan_CAAspeakers_Heashot_Web.jpg?itok=WCOhQ1Hj\"\n                }\n              />\n\n              <p.Stack\n                as={\"div\"}\n                hasGap={true}\n                className={classNames(projectcss.all, sty.freeBox__muvBh)}\n              >\n                <div className={classNames(projectcss.all, sty.freeBox__jW3)}>\n                  <h5\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.h5,\n                      projectcss.__wab_text,\n                      sty.h5__eTbIr\n                    )}\n                  >\n                    {\"Lorem doi\"}\n                  </h5>\n                </div>\n              </p.Stack>\n            </React.Fragment>\n          ),\n\n          value: args.slot,\n        })}\n      </p.Stack>\n    </p.Stack>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\"root\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicTestimonial__ArgProps,\n      internalVariantPropNames: PlasmicTestimonial__VariantProps,\n    })\n\n    return PlasmicTestimonial__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicTestimonial\"\n  } else {\n    func.displayName = `PlasmicTestimonial.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicTestimonial = Object.assign(\n  // Top-level PlasmicTestimonial renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    // Metadata about props expected for PlasmicTestimonial\n    internalVariantProps: PlasmicTestimonial__VariantProps,\n    internalArgProps: PlasmicTestimonial__ArgProps,\n  }\n)\n\nexport default PlasmicTestimonial\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var freeBox__jW3 = \"PlasmicTestimonial-module--freeBox__jW3--Svpz5\";\nexport var freeBox__muvBh = \"PlasmicTestimonial-module--freeBox__muvBh--4aKNh\";\nexport var freeBox__qDxgr = \"PlasmicTestimonial-module--freeBox__qDxgr--+zpKv\";\nexport var freeBox__u185C = \"PlasmicTestimonial-module--freeBox__u185C--IE4Ns\";\nexport var h5__eTbIr = \"PlasmicTestimonial-module--h5__eTbIr--yy9LA\";\nexport var img___98C2U = \"PlasmicTestimonial-module--img___98C2U--DKDoc\";\nexport var root = \"PlasmicTestimonial-module--root--dVmas\";\nexport var slotTargetChildren = \"PlasmicTestimonial-module--slotTargetChildren--WOqtd\";","// This is a skeleton starter React component generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicTestimonial } from \"./plasmic/rva_new/PlasmicTestimonial\"\n\nfunction Testimonial_(props, ref) {\n  // Use PlasmicTestimonial to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicTestimonial are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, we are just piping all TestimonialProps here, but feel free\n  // to do whatever works for you.\n  return <PlasmicTestimonial root={{ ref }} {...props} />\n}\n\nconst Testimonial = React.forwardRef(Testimonial_)\n\nexport default Testimonial\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function Icon8Icon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      style={style}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fill={\"currentColor\"}\n        d={\n          \"M12.74 5.47c2.36 1.03 3.61 3.56 3.18 5.99A6.002 6.002 0 0118 16v.17a3 3 0 011-.17 3 3 0 013 3 3 3 0 01-3 3H6a4 4 0 01-4-4 4 4 0 014-4h.27C5 12.45 4.6 10.24 5.5 8.26a5.49 5.49 0 017.24-2.79m-.81 1.83c-1.77-.8-3.84.01-4.62 1.77-.46 1.02-.38 2.15.1 3.06A5.988 5.988 0 0112 10c.7 0 1.38.12 2 .34a3.506 3.506 0 00-2.07-3.04m1.62-3.66c-.55-.24-1.1-.41-1.67-.52l2.49-1.3.9 2.89a7.67 7.67 0 00-1.72-1.07m-7.46.8c-.49.35-.92.75-1.29 1.19l.11-2.81 2.96.68c-.62.21-1.22.53-1.78.94M18 9.71c-.09-.59-.22-1.16-.41-1.71l2.38 1.5-2.05 2.23c.11-.65.13-1.33.08-2.02M3.04 11.3c.07.6.2 1.17.39 1.7l-2.37-1.5L3.1 9.28c-.1.65-.13 1.33-.06 2.02M19 18h-3v-2a4 4 0 00-4-4 4 4 0 00-4 4H6a2 2 0 00-2 2 2 2 0 002 2h13a1 1 0 001-1 1 1 0 00-1-1z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon8Icon\n/* prettier-ignore-end */\n","// extracted by mini-css-extract-plugin\nexport var __wab_imgSpacer = \"PlasmicHomepage-module--__wab_img-spacer--+ES7u\";\nexport var button___32L1K = \"PlasmicHomepage-module--button___32L1K--ZyiJw\";\nexport var button___3UeI9 = \"PlasmicHomepage-module--button___3UeI9--sOH6q\";\nexport var button___69U8H = \"PlasmicHomepage-module--button___69U8H--XLOff\";\nexport var column___1SoK = \"PlasmicHomepage-module--column___1SoK--IapMu\";\nexport var column___74ZqM = \"PlasmicHomepage-module--column___74ZqM--stLrh\";\nexport var column__asFpK = \"PlasmicHomepage-module--column__asFpK--D7U7-\";\nexport var column__dhtrD = \"PlasmicHomepage-module--column__dhtrD--bhk9y\";\nexport var column__iZxez = \"PlasmicHomepage-module--column__iZxez--s-8+F\";\nexport var column__jg8DI = \"PlasmicHomepage-module--column__jg8DI--nKqAa\";\nexport var column__smK2S = \"PlasmicHomepage-module--column__smK2S--wXC3G\";\nexport var column__vxZr = \"PlasmicHomepage-module--column__vxZr--BgLnv\";\nexport var columns__oS0Az = \"PlasmicHomepage-module--columns__oS0Az--cuPtP\";\nexport var columns__v6Co1 = \"PlasmicHomepage-module--columns__v6Co1--o1IHp\";\nexport var columns__vBtSd = \"PlasmicHomepage-module--columns__vBtSd--hQF5F\";\nexport var companiesSection = \"PlasmicHomepage-module--companiesSection--sEY0b\";\nexport var container2 = \"PlasmicHomepage-module--container2--14v9E\";\nexport var container7 = \"PlasmicHomepage-module--container7--d5KM4\";\nexport var ctaBottom = \"PlasmicHomepage-module--ctaBottom--piPiS\";\nexport var fig = \"PlasmicHomepage-module--fig--mgJ44\";\nexport var footer = \"PlasmicHomepage-module--footer--OQ-fv\";\nexport var freeBox___2XdV = \"PlasmicHomepage-module--freeBox___2XdV--H2Ycw\";\nexport var freeBox___4BmYi = \"PlasmicHomepage-module--freeBox___4BmYi--aGSXY\";\nexport var freeBox___4Hayf = \"PlasmicHomepage-module--freeBox___4Hayf--vglr0\";\nexport var freeBox___7A2Kg = \"PlasmicHomepage-module--freeBox___7A2Kg--JWAa1\";\nexport var freeBox___9Myh0 = \"PlasmicHomepage-module--freeBox___9Myh0--HhdhE\";\nexport var freeBox__bbfh9 = \"PlasmicHomepage-module--freeBox__bbfh9--PHonU\";\nexport var freeBox__chbRj = \"PlasmicHomepage-module--freeBox__chbRj--fuJvZ\";\nexport var freeBox__ctuye = \"PlasmicHomepage-module--freeBox__ctuye--GcaGy\";\nexport var freeBox__doAsG = \"PlasmicHomepage-module--freeBox__doAsG--x1Sto\";\nexport var freeBox__eJg6S = \"PlasmicHomepage-module--freeBox__eJg6S--WFqYA\";\nexport var freeBox__gLzge = \"PlasmicHomepage-module--freeBox__gLzge--1iHP0\";\nexport var freeBox__gikhs = \"PlasmicHomepage-module--freeBox__gikhs--9dwtu\";\nexport var freeBox__hQWio = \"PlasmicHomepage-module--freeBox__hQWio--4t1L+\";\nexport var freeBox__iz74W = \"PlasmicHomepage-module--freeBox__iz74W--9gXSE\";\nexport var freeBox__jVhFe = \"PlasmicHomepage-module--freeBox__jVhFe--q0szI\";\nexport var freeBox__kiVtE = \"PlasmicHomepage-module--freeBox__kiVtE--elPmo\";\nexport var freeBox__lvVvs = \"PlasmicHomepage-module--freeBox__lvVvs--dYBIm\";\nexport var freeBox__naY9B = \"PlasmicHomepage-module--freeBox__naY9B--vfIFu\";\nexport var freeBox__nlG0 = \"PlasmicHomepage-module--freeBox__nlG0--lX65-\";\nexport var freeBox__oUlQg = \"PlasmicHomepage-module--freeBox__oUlQg--4VmbF\";\nexport var freeBox__pYJ = \"PlasmicHomepage-module--freeBox__pYJ--673IO\";\nexport var freeBox__qn339 = \"PlasmicHomepage-module--freeBox__qn339--N2nN6\";\nexport var freeBox__rvL1 = \"PlasmicHomepage-module--freeBox__rvL1--ghtSc\";\nexport var freeBox__sgP0U = \"PlasmicHomepage-module--freeBox__sgP0U--CaF0O\";\nexport var freeBox__vGw2K = \"PlasmicHomepage-module--freeBox__vGw2K--e3GV8\";\nexport var freeBox__vcN4H = \"PlasmicHomepage-module--freeBox__vcN4H--7oGe2\";\nexport var freeBox__wipRh = \"PlasmicHomepage-module--freeBox__wipRh--VEeD0\";\nexport var freeBox__xDdPq = \"PlasmicHomepage-module--freeBox__xDdPq--l4Yu3\";\nexport var freeBox__xhlim = \"PlasmicHomepage-module--freeBox__xhlim--Pb5Mu\";\nexport var freeBox__xkT6B = \"PlasmicHomepage-module--freeBox__xkT6B--0eY1n\";\nexport var freeBox__ycGip = \"PlasmicHomepage-module--freeBox__ycGip--yBlAs\";\nexport var freeBox__z4Tx3 = \"PlasmicHomepage-module--freeBox__z4Tx3--ATUWy\";\nexport var freeBox__zAd17 = \"PlasmicHomepage-module--freeBox__zAd17--R5moK\";\nexport var freeBox__zFimf = \"PlasmicHomepage-module--freeBox__zFimf--dhCP8\";\nexport var h1 = \"PlasmicHomepage-module--h1--q8ckL\";\nexport var h2___5PNi4 = \"PlasmicHomepage-module--h2___5PNi4--mqOZJ\";\nexport var h2__mpOZn = \"PlasmicHomepage-module--h2__mpOZn--p1Ih1\";\nexport var h2__pDfZq = \"PlasmicHomepage-module--h2__pDfZq--zPa9w\";\nexport var h2__qOvBx = \"PlasmicHomepage-module--h2__qOvBx--+Vftg\";\nexport var h3__aou0Y = \"PlasmicHomepage-module--h3__aou0Y--33fjT\";\nexport var h3__gthDp = \"PlasmicHomepage-module--h3__gthDp--wRQqJ\";\nexport var h3__ma7D = \"PlasmicHomepage-module--h3__ma7D--3TbAe\";\nexport var h3__qzvUi = \"PlasmicHomepage-module--h3__qzvUi--BR9Rp\";\nexport var h5__igSa2 = \"PlasmicHomepage-module--h5__igSa2--RVUbU\";\nexport var h5__v1Brc = \"PlasmicHomepage-module--h5__v1Brc--kG8Xk\";\nexport var h5__vPwle = \"PlasmicHomepage-module--h5__vPwle--i7Cvv\";\nexport var header = \"PlasmicHomepage-module--header--2OIbp\";\nexport var hero = \"PlasmicHomepage-module--hero--MVntu\";\nexport var img___0DcrR = \"PlasmicHomepage-module--img___0DcrR--DxfG+\";\nexport var img__afyVi = \"PlasmicHomepage-module--img__afyVi--S+t4A\";\nexport var img__ejnkU = \"PlasmicHomepage-module--img__ejnkU--2TqdO\";\nexport var img__faU7H = \"PlasmicHomepage-module--img__faU7H--1Dopv\";\nexport var img__fjh8N = \"PlasmicHomepage-module--img__fjh8N--zLq+2\";\nexport var img__linll = \"PlasmicHomepage-module--img__linll--W3LoQ\";\nexport var img__nGvoU = \"PlasmicHomepage-module--img__nGvoU--gwV6R\";\nexport var img__rgImo = \"PlasmicHomepage-module--img__rgImo--b7Ty9\";\nexport var img__vPXl = \"PlasmicHomepage-module--img__vPXl--BQW5a\";\nexport var info = \"PlasmicHomepage-module--info--w2E65\";\nexport var root = \"PlasmicHomepage-module--root--MwV-v\";\nexport var row3 = \"PlasmicHomepage-module--row3--UbvjC\";\nexport var section___2Fc = \"PlasmicHomepage-module--section___2Fc--vf-VX\";\nexport var section__ea0As = \"PlasmicHomepage-module--section__ea0As--5KWEZ\";\nexport var section__f41Mf = \"PlasmicHomepage-module--section__f41Mf--xZIUk\";\nexport var svg___9QsY8 = \"PlasmicHomepage-module--svg___9QsY8--FhBy0\";\nexport var svg__aiFv = \"PlasmicHomepage-module--svg__aiFv--B+xeZ\";\nexport var svg__ip1Us = \"PlasmicHomepage-module--svg__ip1Us--igaOw\";\nexport var svg__kXmg4 = \"PlasmicHomepage-module--svg__kXmg4--h3qiY\";\nexport var svg__lhcl2 = \"PlasmicHomepage-module--svg__lhcl2--Olxip\";\nexport var svg__rLx5I = \"PlasmicHomepage-module--svg__rLx5I--Aohv0\";\nexport var svg__sBxYj = \"PlasmicHomepage-module--svg__sBxYj--i9woY\";\nexport var svg__sPq = \"PlasmicHomepage-module--svg__sPq--Et2B9\";\nexport var svg__svJhX = \"PlasmicHomepage-module--svg__svJhX--j-RVV\";\nexport var svg__tHf33 = \"PlasmicHomepage-module--svg__tHf33--0geeB\";\nexport var testimonial__drxJi = \"PlasmicHomepage-module--testimonial__drxJi--e9lkK\";\nexport var testimonial__kfr6L = \"PlasmicHomepage-module--testimonial__kfr6L--4qHTS\";\nexport var testimonial__xk0Ou = \"PlasmicHomepage-module--testimonial__xk0Ou--feDB0\";\nexport var text___14Hes = \"PlasmicHomepage-module--text___14Hes--lcbDX\";\nexport var text__geGg = \"PlasmicHomepage-module--text__geGg--6IM0b\";\nexport var text__gg0At = \"PlasmicHomepage-module--text__gg0At--oLPR2\";\nexport var text__kixGh = \"PlasmicHomepage-module--text__kixGh--rowea\";\nexport var text__pVlWg = \"PlasmicHomepage-module--text__pVlWg--xDFsu\";\nexport var text__pX20T = \"PlasmicHomepage-module--text__pX20T--s7Eaf\";\nexport var text__uVyr7 = \"PlasmicHomepage-module--text__uVyr7--oepKe\";\nexport var text__zvu4Z = \"PlasmicHomepage-module--text__zvu4Z--RHCp9\";","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function Icon13Icon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      style={style}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fill={\"currentColor\"}\n        d={\n          \"M21 11c0 5.55-3.84 10.74-9 12-5.16-1.26-9-6.45-9-12V5l9-4 9 4v6m-9 10c3.75-1 7-5.46 7-9.78V6.3l-7-3.12L5 6.3v4.92C5 15.54 8.25 20 12 21m3.05-5l-3.08-1.85L8.9 16l.81-3.5L7 10.16l3.58-.31 1.39-3.3 1.4 3.29 3.58.31-2.72 2.35.82 3.5\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon13Icon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function Icon10Icon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      style={style}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fill={\"currentColor\"}\n        d={\n          \"M21 6.5c0 1.93-1.57 3.5-3.5 3.5S14 8.43 14 6.5 15.57 3 17.5 3 21 4.57 21 6.5M11.5 22c1.11 0 2-.89 2-2h-4a2 2 0 002 2M18 12h-.5c-.5 0-1-.08-1.5-.21V17H7v-6.5C7 8 9 6 11.5 6c.18 0 .35.03.5.05.1-.99.45-1.91 1-2.68C12.92 2.6 12.28 2 11.5 2c-.83 0-1.5.67-1.5 1.5v.68c-2.87.68-5 3.25-5 6.32V16l-2 2v1h17v-1l-2-2v-4z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon10Icon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\nimport React from \"react\"\nimport { classNames } from \"@plasmicapp/react-web\"\n\nexport function Icon11Icon(props) {\n  const { className, style, title, ...restProps } = props\n  return (\n    <svg\n      xmlns={\"http://www.w3.org/2000/svg\"}\n      viewBox={\"0 0 24 24\"}\n      height={\"1em\"}\n      width={\"1em\"}\n      className={classNames(\"plasmic-default__svg\", className)}\n      style={style}\n      {...restProps}\n    >\n      {title && <title>{title}</title>}\n\n      <path\n        fill={\"currentColor\"}\n        d={\n          \"M15 4a8 8 0 018 8 8 8 0 01-8 8 8 8 0 01-8-8 8 8 0 018-8m0 2a6 6 0 00-6 6 6 6 0 006 6 6 6 0 006-6 6 6 0 00-6-6m-1 2h1.5v3.78l2.33 2.33-1.06 1.06L14 12.4V8M2 18a1 1 0 01-1-1 1 1 0 011-1h3.83c.31.71.71 1.38 1.17 2H2m1-5a1 1 0 01-1-1 1 1 0 011-1h2.05L5 12l.05 1H3m1-5a1 1 0 01-1-1 1 1 0 011-1h3c-.46.62-.86 1.29-1.17 2H4z\"\n        }\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon11Icon\n/* prettier-ignore-end */\n","// @ts-nocheck\n/* eslint-disable */\n/* tslint:disable */\n/* prettier-ignore-start */\n/** @jsxRuntime classic */\n/** @jsx createPlasmicElementProxy */\n/** @jsxFrag React.Fragment */\n// This class is auto-generated by Plasmic; please do not edit!\n// Plasmic Project: sSe8AoDiAW5DkmycE76RKb\n// Component: HkG6nEWkUxGK_\nimport * as React from \"react\"\nimport * as p from \"@plasmicapp/react-web\"\nimport * as ph from \"@plasmicapp/host\"\nimport {\n  hasVariant,\n  classNames,\n  createPlasmicElementProxy,\n  deriveRenderOpts,\n  ensureGlobalVariants,\n} from \"@plasmicapp/react-web\"\nimport Header from \"../../Header\" // plasmic-import: rlLZVswJyeOUp/component\nimport Button from \"../../Button\" // plasmic-import: AI4dzLfJKZOBy/component\nimport Testimonial from \"../../Testimonial\" // plasmic-import: OD3fdYo-Q8aWox/component\nimport CtaBottom from \"../../CtaBottom\" // plasmic-import: aZrFk0trqYG6jU/component\nimport Footer from \"../../Footer\" // plasmic-import: aKMJC5Su_PgNb/component\nimport { useScreenVariants as useScreenVariantsxe8Uhzv7PeLJgW } from \"./PlasmicGlobalVariant__Screen\" // plasmic-import: XE8Uhzv7PeLJgW/globalVariant\nimport \"@plasmicapp/react-web/lib/plasmic.css\"\nimport * as projectcss from \"./plasmic_rva_new.module.css\" // plasmic-import: sSe8AoDiAW5DkmycE76RKb/projectcss\nimport * as sty from \"./PlasmicHomepage.module.css\" // plasmic-import: HkG6nEWkUxGK_/css\nimport Icon8Icon from \"./icons/PlasmicIcon__Icon8\" // plasmic-import: OeyGjHIpWB6Zm3/icon\nimport Icon13Icon from \"./icons/PlasmicIcon__Icon13\" // plasmic-import: pTxW90JdT2yKta/icon\nimport Icon10Icon from \"./icons/PlasmicIcon__Icon10\" // plasmic-import: OFIW_7ANYvIU5o/icon\nimport Icon11Icon from \"./icons/PlasmicIcon__Icon11\" // plasmic-import: WfpokVIC1o2SZ4/icon\nimport girls18285391920JpgZd237MRhxc0C7B from \"./images/girls18285391920Jpg.jpeg\" // plasmic-import: zd237mRhxc0c7B/picture\nimport people31046351920JpgXh7Bar7SyhKi8G from \"./images/people31046351920Jpg.jpeg\" // plasmic-import: Xh7Bar7SyhKI8G/picture\nimport woman32879561920JpgE5H1EGp7Yidpwp from \"./images/woman32879561920Jpg.jpeg\" // plasmic-import: E5H1eGp7yidpwp/picture\n\nexport const PlasmicHomepage__VariantProps = new Array()\n\nexport const PlasmicHomepage__ArgProps = new Array()\n\nexport const defaultHomepage__Args = {}\n\nfunction PlasmicHomepage__RenderFunc(props) {\n  const { variants, overrides, forNode } = props\n  const args = Object.assign({}, defaultHomepage__Args, props.args)\n  const $props = args\n  const $ctx = ph.useDataEnv?.() || {}\n  const globalVariants = ensureGlobalVariants({\n    screen: useScreenVariantsxe8Uhzv7PeLJgW(),\n  })\n\n  return (\n    <React.Fragment>\n      <style>{`\n        body {\n          margin: 0;\n        }\n      `}</style>\n\n      <div className={projectcss.plasmic_page_wrapper}>\n        <p.Stack\n          as={\"div\"}\n          data-plasmic-name={\"root\"}\n          data-plasmic-override={overrides.root}\n          data-plasmic-root={true}\n          data-plasmic-for-node={forNode}\n          hasGap={true}\n          className={classNames(\n            projectcss.all,\n            projectcss.root_reset,\n            projectcss.plasmic_default_styles,\n            projectcss.plasmic_mixins,\n            projectcss.plasmic_tokens,\n            sty.root\n          )}\n        >\n          <Header\n            data-plasmic-name={\"header\"}\n            data-plasmic-override={overrides.header}\n            className={classNames(\"__wab_instance\", sty.header)}\n          />\n\n          <div\n            data-plasmic-name={\"hero\"}\n            data-plasmic-override={overrides.hero}\n            className={classNames(projectcss.all, sty.hero)}\n          >\n            <div\n              data-plasmic-name={\"container7\"}\n              data-plasmic-override={overrides.container7}\n              className={classNames(projectcss.all, sty.container7)}\n            >\n              <div\n                data-plasmic-name={\"row3\"}\n                data-plasmic-override={overrides.row3}\n                className={classNames(projectcss.all, sty.row3)}\n              >\n                <div\n                  data-plasmic-name={\"info\"}\n                  data-plasmic-override={overrides.info}\n                  className={classNames(projectcss.all, sty.info)}\n                >\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__zFimf)}\n                  >\n                    <h1\n                      data-plasmic-name={\"h1\"}\n                      data-plasmic-override={overrides.h1}\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h1,\n                        projectcss.__wab_text,\n                        sty.h1\n                      )}\n                    >\n                      {\"Choose us for marketing photography\"}\n                    </h1>\n\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__gg0At\n                      )}\n                    >\n                      {\n                        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.\"\n                      }\n                    </div>\n\n                    <Button\n                      className={classNames(\n                        \"__wab_instance\",\n                        sty.button___32L1K\n                      )}\n                      color={\"blackCoffee\"}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          projectcss.__wab_text,\n                          sty.text__zvu4Z\n                        )}\n                      >\n                        {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                          ? \"Get In touch\"\n                          : \"Get In touch\"}\n                      </div>\n                    </Button>\n                  </p.Stack>\n                </div>\n\n                <div\n                  data-plasmic-name={\"fig\"}\n                  data-plasmic-override={overrides.fig}\n                  className={classNames(projectcss.all, sty.fig)}\n                />\n              </div>\n            </div>\n          </div>\n\n          <section className={classNames(projectcss.all, sty.section__f41Mf)}>\n            <div className={classNames(projectcss.all, sty.freeBox___2XdV)}>\n              <div className={classNames(projectcss.all, sty.freeBox__bbfh9)}>\n                {true ? (\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__lvVvs)}\n                  >\n                    <h2\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.h2,\n                        projectcss.__wab_text,\n                        sty.h2__mpOZn\n                      )}\n                    >\n                      {hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                        ? \"Why Choose Us\"\n                        : \"Why choose us\"}\n                    </h2>\n\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.columns__vBtSd)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__dhtrD\n                        )}\n                      >\n                        <p.Stack\n                          as={\"div\"}\n                          hasGap={true}\n                          className={classNames(\n                            projectcss.all,\n                            sty.freeBox__zAd17\n                          )}\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__gikhs\n                            )}\n                          >\n                            <Icon8Icon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__tHf33\n                              )}\n                              role={\"img\"}\n                            />\n                          </div>\n\n                          <p.Stack\n                            as={\"div\"}\n                            hasGap={true}\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__rvL1\n                            )}\n                          >\n                            <h3\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.h3,\n                                projectcss.__wab_text,\n                                sty.h3__qzvUi\n                              )}\n                            >\n                              {\"Welcoming  trusted\"}\n                            </h3>\n\n                            <div\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.__wab_text,\n                                sty.text__gwxNk\n                              )}\n                            >\n                              {\n                                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor .\"\n                              }\n                            </div>\n                          </p.Stack>\n                        </p.Stack>\n                      </div>\n\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column___1SoK\n                        )}\n                      >\n                        <p.Stack\n                          as={\"div\"}\n                          hasGap={true}\n                          className={classNames(\n                            projectcss.all,\n                            sty.freeBox___9Myh0\n                          )}\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__vcN4H\n                            )}\n                          >\n                            <Icon13Icon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__sPq\n                              )}\n                              role={\"img\"}\n                            />\n                          </div>\n\n                          <p.Stack\n                            as={\"div\"}\n                            hasGap={true}\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__jVhFe\n                            )}\n                          >\n                            <h3\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.h3,\n                                projectcss.__wab_text,\n                                sty.h3__ma7D\n                              )}\n                            >\n                              {\"Tested and secure\"}\n                            </h3>\n\n                            <div\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.__wab_text,\n                                sty.text__kqQx\n                              )}\n                            >\n                              {\n                                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor .\"\n                              }\n                            </div>\n                          </p.Stack>\n                        </p.Stack>\n                      </div>\n\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__asFpK\n                        )}\n                      >\n                        <p.Stack\n                          as={\"div\"}\n                          hasGap={true}\n                          className={classNames(\n                            projectcss.all,\n                            sty.freeBox__xhlim\n                          )}\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__pYJ\n                            )}\n                          >\n                            <Icon10Icon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__ip1Us\n                              )}\n                              role={\"img\"}\n                            />\n                          </div>\n\n                          <p.Stack\n                            as={\"div\"}\n                            hasGap={true}\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__hQWio\n                            )}\n                          >\n                            <h3\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.h3,\n                                projectcss.__wab_text,\n                                sty.h3__gthDp\n                              )}\n                            >\n                              {\"Mindful notifications\"}\n                            </h3>\n\n                            <div\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.__wab_text,\n                                sty.text__uPbc8\n                              )}\n                            >\n                              {\n                                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor .\"\n                              }\n                            </div>\n                          </p.Stack>\n                        </p.Stack>\n                      </div>\n\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.column__jg8DI\n                        )}\n                      >\n                        <p.Stack\n                          as={\"div\"}\n                          hasGap={true}\n                          className={classNames(\n                            projectcss.all,\n                            sty.freeBox__nlG0\n                          )}\n                        >\n                          <div\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__wipRh\n                            )}\n                          >\n                            <Icon11Icon\n                              className={classNames(\n                                projectcss.all,\n                                sty.svg__rLx5I\n                              )}\n                              role={\"img\"}\n                            />\n                          </div>\n\n                          <p.Stack\n                            as={\"div\"}\n                            hasGap={true}\n                            className={classNames(\n                              projectcss.all,\n                              sty.freeBox__chbRj\n                            )}\n                          >\n                            <h3\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.h3,\n                                projectcss.__wab_text,\n                                sty.h3__aou0Y\n                              )}\n                            >\n                              {\"Real-time results\"}\n                            </h3>\n\n                            <div\n                              className={classNames(\n                                projectcss.all,\n                                projectcss.__wab_text,\n                                sty.text___2QNpN\n                              )}\n                            >\n                              {\n                                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor .\"\n                              }\n                            </div>\n                          </p.Stack>\n                        </p.Stack>\n                      </div>\n                    </p.Stack>\n                  </p.Stack>\n                ) : null}\n              </div>\n            </div>\n          </section>\n\n          <section className={classNames(projectcss.all, sty.section__ea0As)}>\n            <p.Stack\n              as={\"div\"}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.columns__oS0Az)}\n            >\n              <div className={classNames(projectcss.all, sty.column___74ZqM)}>\n                <p.PlasmicImg\n                  alt={\"\"}\n                  className={classNames(sty.img__vPXl)}\n                  displayHeight={\"100%\"}\n                  displayMaxHeight={\"none\"}\n                  displayMaxWidth={\"100%\"}\n                  displayMinHeight={\"0\"}\n                  displayMinWidth={\"0\"}\n                  displayWidth={\"100%\"}\n                  loading={\"lazy\"}\n                  src={{\n                    src: girls18285391920JpgZd237MRhxc0C7B,\n                    fullWidth: 1920,\n                    fullHeight: 1280,\n                    aspectRatio: undefined,\n                  }}\n                />\n              </div>\n\n              <div className={classNames(projectcss.all, sty.column__vxZr)}>\n                <p.Stack\n                  as={\"div\"}\n                  hasGap={true}\n                  className={classNames(projectcss.all, sty.freeBox__xDdPq)}\n                >\n                  <h2\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.h2,\n                      projectcss.__wab_text,\n                      sty.h2__pDfZq\n                    )}\n                  >\n                    {\"The standard used since\"}\n                  </h2>\n\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__kixGh\n                    )}\n                  >\n                    {\n                      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam\"\n                    }\n                  </div>\n\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__pVlWg\n                    )}\n                  >\n                    {\n                      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam\"\n                    }\n                  </div>\n\n                  <Button\n                    className={classNames(\"__wab_instance\", sty.button___69U8H)}\n                    color={\"blackCoffee\"}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__geGg\n                      )}\n                    >\n                      {\"About Us\"}\n                    </div>\n                  </Button>\n                </p.Stack>\n              </div>\n            </p.Stack>\n\n            <div className={classNames(projectcss.all, sty.freeBox__qn339)}>\n              <div className={classNames(projectcss.all, sty.freeBox__eJg6S)}>\n                {true ? (\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__vGw2K)}\n                  />\n                ) : null}\n              </div>\n            </div>\n          </section>\n\n          <section className={classNames(projectcss.all, sty.section___2Fc)}>\n            <p.Stack\n              as={\"div\"}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.columns__v6Co1)}\n            >\n              <div className={classNames(projectcss.all, sty.column__smK2S)}>\n                <p.Stack\n                  as={\"div\"}\n                  hasGap={true}\n                  className={classNames(projectcss.all, sty.freeBox__xkT6B)}\n                >\n                  <h2\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.h2,\n                      projectcss.__wab_text,\n                      sty.h2__qOvBx\n                    )}\n                  >\n                    {\"The standard used since\"}\n                  </h2>\n\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text___14Hes\n                    )}\n                  >\n                    {\n                      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam\"\n                    }\n                  </div>\n\n                  <div\n                    className={classNames(\n                      projectcss.all,\n                      projectcss.__wab_text,\n                      sty.text__uVyr7\n                    )}\n                  >\n                    {\n                      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam\"\n                    }\n                  </div>\n\n                  <Button\n                    className={classNames(\"__wab_instance\", sty.button___3UeI9)}\n                    color={\"blackCoffee\"}\n                  >\n                    <div\n                      className={classNames(\n                        projectcss.all,\n                        projectcss.__wab_text,\n                        sty.text__pX20T\n                      )}\n                    >\n                      {\"Contact Us\"}\n                    </div>\n                  </Button>\n                </p.Stack>\n              </div>\n\n              <div className={classNames(projectcss.all, sty.column__iZxez)}>\n                <p.PlasmicImg\n                  alt={\"\"}\n                  className={classNames(sty.img__rgImo)}\n                  displayHeight={\n                    hasVariant(globalVariants, \"screen\", \"mobileOnly\")\n                      ? \"100%\"\n                      : \"100%\"\n                  }\n                  displayMaxHeight={\"none\"}\n                  displayMaxWidth={\"100%\"}\n                  displayMinHeight={\"0\"}\n                  displayMinWidth={\"0\"}\n                  displayWidth={\"100%\"}\n                  loading={\"lazy\"}\n                  src={{\n                    src: people31046351920JpgXh7Bar7SyhKi8G,\n                    fullWidth: 1920,\n                    fullHeight: 1281,\n                    aspectRatio: undefined,\n                  }}\n                />\n              </div>\n            </p.Stack>\n\n            <div className={classNames(projectcss.all, sty.freeBox__doAsG)}>\n              <div className={classNames(projectcss.all, sty.freeBox__naY9B)}>\n                {true ? (\n                  <p.Stack\n                    as={\"div\"}\n                    hasGap={true}\n                    className={classNames(projectcss.all, sty.freeBox__ctuye)}\n                  />\n                ) : null}\n              </div>\n            </div>\n          </section>\n\n          <div className={classNames(projectcss.all, sty.freeBox___4BmYi)}>\n            <p.Stack\n              as={\"div\"}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.freeBox__kiVtE)}\n            >\n              <Testimonial\n                className={classNames(\"__wab_instance\", sty.testimonial__drxJi)}\n                slot={\n                  <React.Fragment>\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__afyVi)}\n                      displayHeight={\"64px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"none\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"64px\"}\n                      src={{\n                        src: woman32879561920JpgE5H1EGp7Yidpwp,\n                        fullWidth: 1920,\n                        fullHeight: 1280,\n                        aspectRatio: undefined,\n                      }}\n                    />\n\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(\n                        projectcss.all,\n                        sty.freeBox___7A2Kg\n                      )}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__oUlQg\n                        )}\n                      >\n                        <h5\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h5,\n                            projectcss.__wab_text,\n                            sty.h5__v1Brc\n                          )}\n                        >\n                          {\"Lorem doi\"}\n                        </h5>\n                      </div>\n                    </p.Stack>\n                  </React.Fragment>\n                }\n              />\n\n              <Testimonial\n                className={classNames(\"__wab_instance\", sty.testimonial__kfr6L)}\n                slot={\n                  <React.Fragment>\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__ejnkU)}\n                      displayHeight={\"64px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"none\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"64px\"}\n                      src={{\n                        src: people31046351920JpgXh7Bar7SyhKi8G,\n                        fullWidth: 1920,\n                        fullHeight: 1281,\n                        aspectRatio: undefined,\n                      }}\n                    />\n\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.freeBox__sgP0U)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__gLzge\n                        )}\n                      >\n                        <h5\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h5,\n                            projectcss.__wab_text,\n                            sty.h5__igSa2\n                          )}\n                        >\n                          {\"Lorem doi\"}\n                        </h5>\n                      </div>\n                    </p.Stack>\n                  </React.Fragment>\n                }\n              />\n\n              <Testimonial\n                className={classNames(\"__wab_instance\", sty.testimonial__xk0Ou)}\n                slot={\n                  <React.Fragment>\n                    <p.PlasmicImg\n                      alt={\"\"}\n                      className={classNames(sty.img__linll)}\n                      displayHeight={\"64px\"}\n                      displayMaxHeight={\"none\"}\n                      displayMaxWidth={\"none\"}\n                      displayMinHeight={\"0\"}\n                      displayMinWidth={\"0\"}\n                      displayWidth={\"64px\"}\n                      src={{\n                        src: girls18285391920JpgZd237MRhxc0C7B,\n                        fullWidth: 1920,\n                        fullHeight: 1280,\n                        aspectRatio: undefined,\n                      }}\n                    />\n\n                    <p.Stack\n                      as={\"div\"}\n                      hasGap={true}\n                      className={classNames(projectcss.all, sty.freeBox__z4Tx3)}\n                    >\n                      <div\n                        className={classNames(\n                          projectcss.all,\n                          sty.freeBox__iz74W\n                        )}\n                      >\n                        <h5\n                          className={classNames(\n                            projectcss.all,\n                            projectcss.h5,\n                            projectcss.__wab_text,\n                            sty.h5__vPwle\n                          )}\n                        >\n                          {\"Lorem doi\"}\n                        </h5>\n                      </div>\n                    </p.Stack>\n                  </React.Fragment>\n                }\n              />\n            </p.Stack>\n          </div>\n\n          <div\n            data-plasmic-name={\"companiesSection\"}\n            data-plasmic-override={overrides.companiesSection}\n            className={classNames(projectcss.all, sty.companiesSection)}\n          >\n            <p.Stack\n              as={\"div\"}\n              data-plasmic-name={\"container2\"}\n              data-plasmic-override={overrides.container2}\n              hasGap={true}\n              className={classNames(projectcss.all, sty.container2)}\n            >\n              <h2\n                className={classNames(\n                  projectcss.all,\n                  projectcss.h2,\n                  projectcss.__wab_text,\n                  sty.h2___5PNi4\n                )}\n              >\n                {\"We work with local businesses\"}\n              </h2>\n\n              <div className={classNames(projectcss.all, sty.freeBox___4Hayf)}>\n                <p.Stack\n                  as={\"div\"}\n                  hasGap={true}\n                  className={classNames(projectcss.all, sty.freeBox__ycGip)}\n                >\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img__faU7H)}\n                    displayHeight={\"48px\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"none\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"auto\"}\n                    src={\n                      \"https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-strapi.svg\"\n                    }\n                  />\n\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img__fjh8N)}\n                    displayHeight={\"48px\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"none\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"auto\"}\n                    src={\n                      \"https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-segment.svg\"\n                    }\n                  />\n\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img__nGvoU)}\n                    displayHeight={\"48px\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"none\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"auto\"}\n                    src={\n                      \"https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-xstate.svg\"\n                    }\n                  />\n\n                  <p.PlasmicImg\n                    alt={\"\"}\n                    className={classNames(sty.img___0DcrR)}\n                    displayHeight={\"48px\"}\n                    displayMaxHeight={\"none\"}\n                    displayMaxWidth={\"none\"}\n                    displayMinHeight={\"0\"}\n                    displayMinWidth={\"0\"}\n                    displayWidth={\"auto\"}\n                    src={\n                      \"https://plasmic-ray.s3.us-west-2.amazonaws.com/logo-mapbox.svg\"\n                    }\n                  />\n                </p.Stack>\n              </div>\n            </p.Stack>\n          </div>\n\n          <CtaBottom\n            data-plasmic-name={\"ctaBottom\"}\n            data-plasmic-override={overrides.ctaBottom}\n            className={classNames(\"__wab_instance\", sty.ctaBottom)}\n          />\n\n          <Footer\n            data-plasmic-name={\"footer\"}\n            data-plasmic-override={overrides.footer}\n            className={classNames(\"__wab_instance\", sty.footer)}\n          />\n        </p.Stack>\n      </div>\n    </React.Fragment>\n  )\n}\n\nconst PlasmicDescendants = {\n  root: [\n    \"root\",\n    \"header\",\n    \"hero\",\n    \"container7\",\n    \"row3\",\n    \"info\",\n    \"h1\",\n    \"fig\",\n    \"companiesSection\",\n    \"container2\",\n    \"ctaBottom\",\n    \"footer\",\n  ],\n\n  header: [\"header\"],\n  hero: [\"hero\", \"container7\", \"row3\", \"info\", \"h1\", \"fig\"],\n  container7: [\"container7\", \"row3\", \"info\", \"h1\", \"fig\"],\n  row3: [\"row3\", \"info\", \"h1\", \"fig\"],\n  info: [\"info\", \"h1\"],\n  h1: [\"h1\"],\n  fig: [\"fig\"],\n  companiesSection: [\"companiesSection\", \"container2\"],\n  container2: [\"container2\"],\n  ctaBottom: [\"ctaBottom\"],\n  footer: [\"footer\"],\n}\n\nfunction makeNodeComponent(nodeName) {\n  const func = function (props) {\n    const { variants, args, overrides } = deriveRenderOpts(props, {\n      name: nodeName,\n      descendantNames: [...PlasmicDescendants[nodeName]],\n      internalArgPropNames: PlasmicHomepage__ArgProps,\n      internalVariantPropNames: PlasmicHomepage__VariantProps,\n    })\n\n    return PlasmicHomepage__RenderFunc({\n      variants,\n      args,\n      overrides,\n      forNode: nodeName,\n    })\n  }\n  if (nodeName === \"root\") {\n    func.displayName = \"PlasmicHomepage\"\n  } else {\n    func.displayName = `PlasmicHomepage.${nodeName}`\n  }\n  return func\n}\n\nexport const PlasmicHomepage = Object.assign(\n  // Top-level PlasmicHomepage renders the root element\n  makeNodeComponent(\"root\"),\n  {\n    // Helper components rendering sub-elements\n    header: makeNodeComponent(\"header\"),\n    hero: makeNodeComponent(\"hero\"),\n    container7: makeNodeComponent(\"container7\"),\n    row3: makeNodeComponent(\"row3\"),\n    info: makeNodeComponent(\"info\"),\n    h1: makeNodeComponent(\"h1\"),\n    fig: makeNodeComponent(\"fig\"),\n    companiesSection: makeNodeComponent(\"companiesSection\"),\n    container2: makeNodeComponent(\"container2\"),\n    ctaBottom: makeNodeComponent(\"ctaBottom\"),\n    footer: makeNodeComponent(\"footer\"),\n    // Metadata about props expected for PlasmicHomepage\n    internalVariantProps: PlasmicHomepage__VariantProps,\n    internalArgProps: PlasmicHomepage__ArgProps,\n  }\n)\n\nexport default PlasmicHomepage\n/* prettier-ignore-end */\n","// This is a skeleton starter React page generated by Plasmic.\n// This file is owned by you, feel free to edit as you see fit.\nimport * as React from \"react\"\nimport { PlasmicHomepage } from \"../components/plasmic/rva_new/PlasmicHomepage\"\n\nfunction Homepage() {\n  // Use PlasmicHomepage to render this component as it was\n  // designed in Plasmic, by activating the appropriate variants,\n  // attaching the appropriate event handlers, etc.  You\n  // can also install whatever React hooks you need here to manage state or\n  // fetch data.\n  //\n  // Props you can pass into PlasmicHomepage are:\n  // 1. Variants you want to activate,\n  // 2. Contents for slots you want to fill,\n  // 3. Overrides for any named node in the component to attach behavior and data,\n  // 4. Props to set on the root node.\n  //\n  // By default, PlasmicHomepage is wrapped by your project's global\n  // variant context providers. These wrappers may be moved to\n  // Gatsby \"wrapRootElement\" function\n  // (https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr#wrapRootElement).\n  return <PlasmicHomepage />\n}\n\nexport default Homepage\n","export default __webpack_public_path__ + \"static/girls18285391920Jpg-46247f7d132b73dfc4373dcfb5d16c2c.jpeg\";","export default __webpack_public_path__ + \"static/people31046351920Jpg-9db8f294a2c5d17288b9ca222fe70c56.jpeg\";","export default __webpack_public_path__ + \"static/woman32879561920Jpg-ab5a3507ce1cef34da786540e5ebb2bc.jpeg\";"],"names":["PlasmicCtaBottom__VariantProps","Array","PlasmicCtaBottom__ArgProps","defaultCtaBottom__Args","PlasmicDescendants","root","container","h2","button","makeNodeComponent","nodeName","func","props","deriveRenderOpts","name","descendantNames","internalArgPropNames","internalVariantPropNames","variants","overrides","forNode","Object","assign","args","ph","className","classNames","projectcss","as","hasGap","Button","color","PlasmicCtaBottom__RenderFunc","displayName","PlasmicCtaBottom","internalVariantProps","internalArgProps","CtaBottom_","ref","React","PlasmicTestimonial__VariantProps","PlasmicTestimonial__ArgProps","defaultTestimonial__Args","PlasmicTestimonial","p","defaultContents","value","children","alt","displayHeight","displayMaxHeight","displayMaxWidth","displayMinHeight","displayMinWidth","displayWidth","src","slot","PlasmicTestimonial__RenderFunc","Testimonial_","style","title","restProps","xmlns","viewBox","height","width","fill","d","button___32L1K","button___3UeI9","button___69U8H","column___1SoK","column___74ZqM","column__asFpK","column__dhtrD","column__iZxez","column__jg8DI","column__smK2S","column__vxZr","columns__oS0Az","columns__v6Co1","columns__vBtSd","companiesSection","container2","container7","ctaBottom","fig","footer","freeBox___2XdV","freeBox___4BmYi","freeBox___4Hayf","freeBox___7A2Kg","freeBox___9Myh0","freeBox__bbfh9","freeBox__chbRj","freeBox__ctuye","freeBox__doAsG","freeBox__eJg6S","freeBox__gLzge","freeBox__gikhs","freeBox__hQWio","freeBox__iz74W","freeBox__jVhFe","freeBox__kiVtE","freeBox__lvVvs","freeBox__naY9B","freeBox__nlG0","freeBox__oUlQg","freeBox__pYJ","freeBox__qn339","freeBox__rvL1","freeBox__sgP0U","freeBox__vGw2K","freeBox__vcN4H","freeBox__wipRh","freeBox__xDdPq","freeBox__xhlim","freeBox__xkT6B","freeBox__ycGip","freeBox__z4Tx3","freeBox__zAd17","freeBox__zFimf","h1","h2___5PNi4","h2__mpOZn","h2__pDfZq","h2__qOvBx","h3__aou0Y","h3__gthDp","h3__ma7D","h3__qzvUi","h5__igSa2","h5__v1Brc","h5__vPwle","header","hero","img___0DcrR","img__afyVi","img__ejnkU","img__faU7H","img__fjh8N","img__linll","img__nGvoU","img__rgImo","img__vPXl","info","row3","section___2Fc","section__ea0As","section__f41Mf","svg__ip1Us","svg__rLx5I","svg__sPq","svg__tHf33","testimonial__drxJi","testimonial__kfr6L","testimonial__xk0Ou","text___14Hes","text__geGg","text__gg0At","text__kixGh","text__pVlWg","text__pX20T","text__uVyr7","text__zvu4Z","PlasmicHomepage__VariantProps","PlasmicHomepage__ArgProps","defaultHomepage__Args","globalVariants","ensureGlobalVariants","screen","useScreenVariantsxe8Uhzv7PeLJgW","sty","Header","hasVariant","role","loading","girls18285391920JpgZd237MRhxc0C7B","fullWidth","fullHeight","aspectRatio","undefined","people31046351920JpgXh7Bar7SyhKi8G","Testimonial","woman32879561920JpgE5H1EGp7Yidpwp","CtaBottom","Footer","PlasmicHomepage__RenderFunc","PlasmicHomepage"],"sourceRoot":""}